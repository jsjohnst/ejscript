#
#   Windows SDK
#
defineComponent() {

    [ $BLD_CROSS = 1 -a $KIND = HOST -a $BLD_HOST_OS != "WIN" ] && return 0

    configureComponent --name winsdk --path "`probe --dir --path "$1" --base "Include/WinBase.h"`" --emitter emitWinOptions

    [ $KIND = BUILD ] && setWinEnv
}


setWinEnv()
{
    local file path cc version file os cc cpu bldPath bldInclude bldLib winsdk VS VS_DOS WIN_SDK cldir

    eval file=\$BLD_${KIND}_CC
	eval path=\$CFG_${KIND}_CC
    cc=`probe --path "$1" --base $file`

    eval winsdk=\$CFG_${KIND}_WINSDK
    eval os=\$BLD_${KIND}_OS
    eval cpu=\$BLD_${KIND}_CPU

    if [ "$cc" = "" ] ; then
		echo "Can't find compiler"
		exit 255
	fi

	cc=`cygpath -u "$cc"`
    VS=`dirname "${cc%/cl*}"`
    cldir=`basename "${cc%/cl*}"`
    VS=`dirname "$VS"`

	# TODO REFACTOR - but they are already in DOS format. These names are really reversed
    VS_DOS=`cygpath -m "$VS"`
    WIN_SDK=`cygpath -m "$winsdk"`
	winsdk=`cygpath -u "$winsdk"`

    #
    #   WARNING: Only VS 2008 or later is supported
    #
    if [ "${cc%VC98*}" != "${cc}" ] ; then
        #
        #   Visual Studio 6 defines. 
        #
        bldPath="$VS/Common/MSDev98/bin:$VS/VC98/BIN:$VS/Common/IDE:$VS/Common/Tools/WinNT:$VS/Common/Tools"
        bldInclude="$VS_DOS/VC98/ATLMFC/INCLUDE;$VS_DOS/VC98/INCLUDE;$VS_DOS/VC98/MFC/INCLUDE"
        bldLib="$VS_DOS/VC98/LIB;$VS_DOS/VC98/MFC/LIB"
        version=12

    elif [ "${cc%Visual Studio .NET 2003*}" != "${cc}" ] ; then
        #
        #   Visual Studio .NET 2003
        #
        bldPath="$VS/Common7/IDE:$VS/Vc7/BIN:$VS/Common7/Tools:$VS/Common7/Tools/bin:$VS/Vc7/PlatformSDK/bin"
        bldInclude="$VS_DOS/Vc7/ATLMFC/INCLUDE;$VS_DOS/Vc7/INCLUDE;$VS_DOS/Vc7/PlatformSDK/include"
        bldLib="$VS_DOS/Vc7/ATLMFC/LIB;$VS_DOS/Vc7/LIB;$VS_DOS/Vc7/PlatformSDK/lib"
        version=13

    elif [ "${cc%Visual Studio 8*}" != "${cc}" -a "$cldir" != AMD64 ] ; then
        #
        #   Visual Studio 2005
        #
        bldPath="$VS/Common7/IDE:$VS/VC/BIN:$VS/Common7/Tools:$VS/Common7/Tools/bin:$VS/VC/PlatformSDK/bin:$VS/SDK/v2.0/bin:$VS/VC/VCPackages"
        bldInclude="$VS_DOS/VC/ATLMFC/INCLUDE;$VS_DOS/VC/INCLUDE;$VS_DOS/VC/PlatformSDK/include;$VS_DOS/SDK/v2.0/include"
        bldLib="$VS_DOS/VC/ATLMFC/LIB;$VS_DOS/VC/LIB;$VS_DOS/VC/PlatformSDK/lib;$VS_DOS/SDK/v2.0/lib;$VS_DOS/PlatformSDK/include/mfc"
        version=14

    elif [ "${cc%Visual Studio 9*}" != "${cc}" -a "$cldir" != AMD64 ] ; then
        #
        #   Visual Studio 2008
        #
        bldPath="$VS/Common7/IDE:$VS/VC/BIN:$VS/Common7/Tools:$VS/SDK/v2.0/bin:$VS/VC/VCPackages"
        bldInclude="$VS_DOS/VC/INCLUDE"
        bldLib="$VS_DOS/VC/LIB"
        version=15

        #
        #	Add the Windows SDK
        #
        bldPath="$bldPath:$winsdk/bin"
        bldInclude="$bldInclude;$WIN_SDK/include"
        bldLib="$bldLib;$WIN_SDK/LIB"

    elif [ "${cc%PlatformSDK*}" != "${cc}" ] ; then
        #
        #   Platform Compiler (need to go up 3 more dirs)
        #
        VS=`dirname "$VS"`
        VS=`dirname "$VS"`
        VS=`dirname "$VS"`
        VS_DOS=`cygpath -m "$VS"`
        bldPath="$VS/PlatformSDK/bin/x86/AMD64"
        bldInclude="$VS_DOS/PlatformSDK/include/crt"
        bldLib="$VS_DOS/PlatformSDK/LIB/AMD64"
        version=15

        #
        #	Add the Windows SDK
        #
        bldPath="$bldPath:$winsdk/bin"
        bldInclude="$bldInclude;$WIN_SDK/include"
        bldLib="$bldLib;$WIN_SDK/LIB"

    else
        echo "Microsoft CL Compiler not found"
        exit 255
    fi

    eval ${KIND}_MSCL_VERSION="$version"
    eval ${KIND}_HAS_MSCL=1

    if [ "$KIND" = HOST ] ; then
        CFG_HOST_PATH="$bldPath"
        CFG_HOST_INCLUDE_PATH="$bldInclude"
        CFG_HOST_LIB_PATH="$bldLib"
    else
        CFG_BUILD_PATH="$bldPath"
        CFG_BUILD_INCLUDE_PATH="$bldInclude"
        CFG_BUILD_LIB_PATH="$bldLib"
    fi
}

emitWinOptions() {
    eval echo BLD_CC_MSCL=\$${KIND}_HAS_MSCL
    eval echo BLD_CC_CL_VERSION=\$${KIND}_MSCL_VERSION
}

