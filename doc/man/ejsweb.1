.TH EJSWEB "1" "March 2009" "ejsweb" "User Commands"
.SH NAME
ejsweb \- Ejscript Application Generator for Server-Side JavaScript Web Applications.
.SH SYNOPSIS
.B ejsweb
[\fI--apply]\fR] 
[\fI--database DB]\fR] 
[\fI--keep\fR]
[\fI--layout layoutPage\fR]
[\fI--overwrite\R]
[\fI--quiet\R]
[\fI--reverse\R]
[\fI--verbose\fR]
[commands ...]
.SH DESCRIPTION
The \fBejsweb\fR command generates, manages and runs Ejscript web applications.
It can generate Ejscript web applications, controllers, database migrations, models, scaffolds and views.
.PP
Ejsweb will create directories and generate configuration and source code files which can then be manually 
edited as required.  Ejsweb is intelligent and will not overwrite existing files, so you can safely edit 
and regenerate without losing your changes. You can overwrite your changes if you wish to by using 
the \fB--overwrite\fR switch.
.PP
Ejsweb can run your application by invoking a configured web server.
.SH GENERATING APPLICATIONS
To start a new web application, run \fBejsweb\fR to create the application directory and generate the application
configuration and essential script files. For example:

.RS 5
 \fBejsweb generate app myApp\fR
.RE
.PP
This will will create a set of directories which have the following meaning: 

.RS 5
 .tmp           - Temporary working directory
 .ejs           - State files used by ejsweb
 bin            - Programs and scripts
 config         - Configuration files
 controllers    - Controller source
 db             - Databases and scripts
 db/migrations  - Databases migration scripts
 doc            - Documentation for the application
 logs           - Log files
 models         - Database model code
 messages       - Internationalization messages
 test           - Unit tests
 src            - Extra application source code
 utils          - Program utilities
 views          - View source files
 views/layouts  - View layout files
 web            - Public web directory
 web/images     - Public images
 web/js         - Client side JavaScripts
 web/themes     - Application HTML themes
.RE
.PP
Most of these directories are initially empty, but may be used over time. Ejscript follows conventions
where specific files are stored. This greatly simplifies configuring a web application.
.PP
Ejsweb will also create some files which have the following meaning:
.RS 5

 config/config.ecf           - Application configuration file
 config/compiler.ecf         - Compiler configuration file
 config/database.ecf         - Database configuration file
 config/view.ecf             - View connector configuration file
 controllers/Base.es         - Application base controller class
 views/layouts/default.ejs   - Default layout web page
 web/layout.css              - Default layout CSS file
 web/themes/default.css      - Default theme CSS file
 web/js/jquery.js            - Jquery client side script
 README                      - Documentation explaining files and directories
.RE
.SH GENERATING CONTROLLERS
Controllers are the primary mechanism for responding to client requests. To generate a controller, 
run:
.RS 5

 \fBejsweb generate controller NAME [actions...]\fR
.RE
.PP
This will create a controller of the requested name. It will create a controller class file in the \fBcontrollers\fR
directory. If action names are requested, the controller class will define an action method for each
name. If not action names are requested, ejsweb will define a default action named \fBindex\fR.
Actions are controller functions that are invoked in response to client requests. You can edit the controller
source to meet your needs.
.SH GENERATING MODELS
Database models are Ejscript classes that encapsulate database data and provide access methods. They provide a 
conduit to interact with the database. To generate a model:
.RS 5

 \fBejsweb generate model MODEL [field:type ...]\fR
.RE

This will create a database model and will generate a model class under the \fBmodels\fR directory.
It will also create a database migration to create a database table of the same name as the model.
If field:type values are supplied, the database migration will include code to create a column for each 
specified field of the requested type. The valid database types are: binary, boolean, date, datetime, decimal, 
float, integer, number, string, text, time, timestamp.

.SH GENERATING SCAFFOLDS
.PP
A scaffold is a generated database migration, database model, controller and set of views that provides add, edit 
and list functionality for a database model.
Scaffolds are useful to quickly generate chunks of the application and prototype web pages and actions for 
managing a datbase table.
To generate a scaffold:
.RS 5

 \fBejsweb generate scaffold MODEL [field:type ...]\fR
.RE
.PP
This will create a scaffold for the specified database model and will generate a controller of the same name.
If field:type values are supplied, the database migration will include code to create a column for each 
specified field of the requested type. The valid database types are: binary, boolean, date, datetime, decimal, 
float, integer, number, string, text, time, timestamp.
The scaffold will include an edit action and view that provides add and edit capability. The list action and view, 
provides the ability to list the database table rows and select an entry to edit.
.PP
You can use the --apply switch to apply the database migration to upgrade the database.
.SH GENERATING MIGRATIONS
Database migrations are scripts which modify the database schema or content. You can create database migrations 
by the \fBejsweb generate migration\fR command. This command generates a migration
for a specific model by creating or removing tables and columns. To generate a migration:
.RS 5

 \fBejsweb generate migration description MODEL [field:type ...]\fR
.RE
.PP
This will create a migration script under the \fBdb/migrations\fR directory. Migration scripts filenames are timestamped
and use the description is used as part of the filename for the migration script (so keep it short and sweet). 
.PP
For each specified field:type pair, ejsweb
will generate add column code in the migration script. If the --reverse switch is specified, then remove column code
will be generated. To change the type or name of a column, remove then re-add the column. 
.PP
.SH APPLYING MIGRATIONS
Migration scripts can be run via the \fBejsweb migrate\fR command. With not other parameters, the command will run
all migrations that have not yet been applied to the database. You can also use \fBejsweb migrate forward\fR to apply
apply the next unapplied migration. Similarly \fBejsweb migrate backward\fR will reverse the last applied migration.
You can also use \fBejsweb migrate NNN\fR to migrate forward or backward to a specific migration. NNN is the migration 
sequence number which is the number at the start of the migration script file name.

.SH COMPILING
Ejscript compiles models, views and controllers into Ejscript byte-code modules. These are then loaded and
run by Ejscript in response to incoming client requests. Code is compiled only once but can be run many times to
service incoming requests.
.PP
In development mode, Ejscript will automatically compile the relevant portions of the application if the source code
is modified. It can intelligently recompile views, actions, controllers and database models as required. However, you
can also explicilty recompile portions or the complete appliction.
.PP
Ejsweb can recompile everything via:
.RS 5
 \fBejsweb compile ...\fR.
.RE
This will compile each controller and view and also recompile the application and module source code. Module files for
each component will be generated.
.PP
Ejsweb also provides options for you to individually compile controllers and views. To recompile named views or controllers:
.RS 5

 \fBejsweb compile view NAMES...\fR.

 \fBejsweb compile controller NAMES...\fR.

.RE
.PP
Models are compiled with application code into a single module file. To recompile the models and application source code:
.RS 5

 \fBejsweb compile app\fR.
.RE
.PP
To compile the entire application and produce a single module file:
.RS 5

 \fBejsweb compile all\fR.
.RE
.PP
To compile stand-alone Ejscript web pages:
.RS 5

 \fBejsweb compile path/name.ejs...\fR.
.RE
.PP
When compiling views, you can use the \fB--keep\fR switch to preserve the intermediate generated Ejscript source file.
.SH RUNNING
.PP
To run your application:
.RS 5

 \fBejsweb run\fR
.RE
.PP
This requires that your config/config.ecf file be modified to define command to run your web server.
.SH CLEANING
To clean all generated module files:
.RS 5

 \fBejsweb clean\fR
.RE
.SH OPTIONS
.PP 
Ejsweb has the following command usage patterns:

.RS 5
 ejsweb clean
 ejsweb compile [all | app | controller names | model names | view names]
 ejsweb compile path/name.ejs ...
 ejsweb generate [app name | controller name [action [, action] ...]| model name]
 ejsweb generate scaffold model [controller] [action [, action]...]
 ejsweb run
.RE
.TP 6
\fB\--database connector\fR
Select a database connector to use. Currently this switch is not implemented and sqlite is the only connector supported. 
.TP 6
\fB\--keep\fR
Preserve generated intermediate Ejscript source files. These files are generated when blending views with 
layout pages.
.TP 6
\fB\--layout layoutPage\fR
Change the name of the default layout page if a view does not explicitly specify a layout page.
.TP 6
\fB\--overwrite\fR
Overwrite existing files. Ejsweb normally will not overwrite existing files. This is to preserve user changes to 
previously generated files.
.TP 6
\fB\--verbose\fR or \fB\-v\fR
Run in verbose mode and trace actions to the console.
.PP
.SH "REPORTING BUGS"
Report bugs to dev@embedthis.com.

.SH COPYRIGHT
Copyright \(co 2004-2009 Embedthis Software.  Ejscript is a trademark of Embedthis Software.

.br
.SH "SEE ALSO"
ejsc, ejs, ejsmod, ejsvm
