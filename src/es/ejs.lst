#
#  ejs.lst -- Module Listing for ejs.mod
#
#  Header version 1.4, Head Flags 3
#

==============================================================================================

MODULE:   ejs <hasInitializer, boundGlobals>


FUNCTION:   [initializer]  intrinsic function __initializer__() : void

   LOCAL:   [local-00] var block_0014_1 : Block
   LOCAL:   [local-01] var block_0007_3 : Block
   LOCAL:   [local-02] var block_0007_5 : Block
   LOCAL:   [local-03] var block_0007_7 : Block
   LOCAL:   [local-04] var block_0007_10 : Block
   LOCAL:   [local-05] var block_0007_16 : Block
   LOCAL:   [local-06] var block_0007_18 : Block
   LOCAL:   [local-07] var block_0007_20 : Block
   LOCAL:   [local-08] var block_0007_37 : Block
   LOCAL:   [local-09] var block_0007_39 : Block
   LOCAL:   [local-10] var block_0007_41 : Block
   LOCAL:   [local-11] var block_0007_43 : Block
   LOCAL:   [local-12] var block_0009_45 : Block
   LOCAL:   [local-13] var block_0007_47 : Block
   LOCAL:   [local-14] var block_0007_49 : Block
   LOCAL:   [local-15] var block_0007_51 : Block
   LOCAL:   [local-16] var block_0009_53 : Block
   LOCAL:   [local-17] var block_0007_55 : Block
   LOCAL:   [local-18] var block_0007_57 : Block
   LOCAL:   [local-19] var block_0007_59 : Block
   LOCAL:   [local-20] var block_0007_61 : Block
   LOCAL:   [local-21] var block_0034_63 : Block
   LOCAL:   [local-22] var block_0011_82 : Block
   LOCAL:   [local-23] var block_0007_84 : Block

    0000: [0] 93 00 00 ................... OpenBlock <slot: 0> <0> 
    0003: [0] 33 01 9b 01 10 ............. Debug 

    # core/Object.es:155        }

    0008: [0] 01 12 ...................... AddNamespace <internal-0> 
    0010: [0] 01 1d ...................... AddNamespace <ejs> 
    0012: [0] 33 01 0e 21 ................ Debug 

    # core/Object.es:14         module ejs {

    0016: [0] 33 01 10 2e ................ Debug 

    # core/Object.es:16         	use default namespace intrinsic

    0020: [0] 83 25 ...................... GetGlobalSlot <37> 
    0022: [1] 02 ......................... AddNamespaceRef 
    0023: [0] 33 01 17 4f ................ Debug 

    # core/Object.es:23         	dynamic native class Object implements Iterable {

    0027: [0] 34 02 ...................... DefineClass <type: 0x2,  intrinsic::Object> 
    0029: [0] 23 ......................... CloseBlock 
    0030: [0] 93 01 00 ................... OpenBlock <slot: 1> <0> 
    0033: [0] 33 a0 05 1a 10 ............. Debug 

    # core/Boolean.es:26        }

    0038: [0] 01 b0 05 ................... AddNamespace <internal-1> 
    0041: [0] 01 1d ...................... AddNamespace <ejs> 
    0043: [0] 33 a0 05 07 21 ............. Debug 

    # core/Boolean.es:7         module ejs {

    0048: [0] 33 a0 05 09 2e ............. Debug 

    # core/Boolean.es:9         	use default namespace intrinsic

    0053: [0] 83 25 ...................... GetGlobalSlot <37> 
    0055: [1] 02 ......................... AddNamespaceRef 
    0056: [0] 33 a0 05 0e bb 05 .......... Debug 

    # core/Boolean.es:14        	native final class Boolean {

    0062: [0] 34 06 ...................... DefineClass <type: 0x6,  intrinsic::Boolean> 
    0064: [0] 23 ......................... CloseBlock 
    0065: [0] 93 02 00 ................... OpenBlock <slot: 2> <0> 
    0068: [0] 33 9e 06 16 10 ............. Debug 

    # core/Null.es:22           }

    0073: [0] 01 ab 06 ................... AddNamespace <internal-2> 
    0076: [0] 01 1d ...................... AddNamespace <ejs> 
    0078: [0] 33 9e 06 07 21 ............. Debug 

    # core/Null.es:7            module ejs {

    0083: [0] 33 9e 06 09 2e ............. Debug 

    # core/Null.es:9            	use default namespace intrinsic

    0088: [0] 83 25 ...................... GetGlobalSlot <37> 
    0090: [1] 02 ......................... AddNamespaceRef 
    0091: [0] 33 9e 06 0e b6 06 .......... Debug 

    # core/Null.es:14           	native final class Null {

    0097: [0] 34 0a ...................... DefineClass <type: 0xa,  intrinsic::Null> 
    0099: [0] 23 ......................... CloseBlock 
    0100: [0] 93 03 00 ................... OpenBlock <slot: 3> <0> 
    0103: [0] 33 fb 07 fd 01 10 .......... Debug 

    # core/Number.es:253        }

    0109: [0] 01 8a 08 ................... AddNamespace <internal-3> 
    0112: [0] 01 1d ...................... AddNamespace <ejs> 
    0114: [0] 33 fb 07 07 21 ............. Debug 

    # core/Number.es:7          module ejs {

    0119: [0] 33 fb 07 09 2e ............. Debug 

    # core/Number.es:9          	use default namespace intrinsic

    0124: [0] 83 25 ...................... GetGlobalSlot <37> 
    0126: [1] 02 ......................... AddNamespaceRef 
    0127: [0] 33 fb 07 1f 95 08 .......... Debug 

    # core/Number.es:31         	native final class Number {

    0133: [0] 34 0e ...................... DefineClass <type: 0xe,  intrinsic::Number> 
    0135: [0] 23 ......................... CloseBlock 
    0136: [0] 93 04 00 ................... OpenBlock <slot: 4> <0> 
    0139: [0] 33 82 10 ac 04 10 .......... Debug 

    # core/String.es:556        }

    0145: [0] 01 91 10 ................... AddNamespace <internal-4> 
    0148: [0] 01 1d ...................... AddNamespace <ejs> 
    0150: [0] 33 82 10 07 21 ............. Debug 

    # core/String.es:7          module ejs {

    0155: [0] 33 82 10 09 2e ............. Debug 

    # core/String.es:9          	use default namespace intrinsic

    0160: [0] 83 25 ...................... GetGlobalSlot <37> 
    0162: [1] 02 ......................... AddNamespaceRef 
    0163: [0] 33 82 10 0f 9c 10 .......... Debug 

    # core/String.es:15         	native final class String {

    0169: [0] 34 12 ...................... DefineClass <type: 0x12,  intrinsic::String> 
    0171: [0] 23 ......................... CloseBlock 
    0172: [0] 93 05 00 ................... OpenBlock <slot: 5> <0> 
    0175: [0] 33 81 24 16 10 ............. Debug 

    # core/Void.es:22           }

    0180: [0] 01 8e 24 ................... AddNamespace <internal-5> 
    0183: [0] 01 1d ...................... AddNamespace <ejs> 
    0185: [0] 33 81 24 07 21 ............. Debug 

    # core/Void.es:7            module ejs {

    0190: [0] 33 81 24 09 2e ............. Debug 

    # core/Void.es:9            	use default namespace intrinsic

    0195: [0] 83 25 ...................... GetGlobalSlot <37> 
    0197: [1] 02 ......................... AddNamespaceRef 
    0198: [0] 33 81 24 0f 99 24 .......... Debug 

    # core/Void.es:15           	native final class Void {

    0204: [0] 34 16 ...................... DefineClass <type: 0x16,  intrinsic::Void> 
    0206: [0] 23 ......................... CloseBlock 
    0207: [0] 93 06 00 ................... OpenBlock <slot: 6> <0> 
    0210: [0] 33 c2 24 2f 10 ............. Debug 

    # core/Function.es:47       }

    0215: [0] 01 d3 24 ................... AddNamespace <internal-6> 
    0218: [0] 01 1d ...................... AddNamespace <ejs> 
    0220: [0] 33 c2 24 07 21 ............. Debug 

    # core/Function.es:7        module ejs {

    0225: [0] 33 c2 24 09 2e ............. Debug 

    # core/Function.es:9        	use default namespace intrinsic

    0230: [0] 83 25 ...................... GetGlobalSlot <37> 
    0232: [1] 02 ......................... AddNamespaceRef 
    0233: [0] 33 c2 24 0f de 24 .......... Debug 

    # core/Function.es:15       	native final class Function {

    0239: [0] 34 1a ...................... DefineClass <type: 0x1a,  intrinsic::Function> 
    0241: [0] 23 ......................... CloseBlock 
    0242: [0] 93 07 00 ................... OpenBlock <slot: 7> <0> 
    0245: [0] 33 a0 26 8d 04 10 .......... Debug 

    # core/Array.es:525         }

    0251: [0] 01 ae 26 ................... AddNamespace <internal-7> 
    0254: [0] 01 1d ...................... AddNamespace <ejs> 
    0256: [0] 33 a0 26 07 21 ............. Debug 

    # core/Array.es:7           module ejs {

    0261: [0] 33 a0 26 09 2e ............. Debug 

    # core/Array.es:9           	use default namespace intrinsic

    0266: [0] 83 25 ...................... GetGlobalSlot <37> 
    0268: [1] 02 ......................... AddNamespaceRef 
    0269: [0] 33 a0 26 17 b9 26 .......... Debug 

    # core/Array.es:23          	dynamic native class Array {

    0275: [0] 34 1e ...................... DefineClass <type: 0x1e,  intrinsic::Array> 
    0277: [0] 23 ......................... CloseBlock 
    0278: [0] 93 08 00 ................... OpenBlock <slot: 8> <0> 
    0281: [0] 33 ce 3a 11 10 ............. Debug 

    # core/Block.es:17          }

    0286: [0] 01 dc 3a ................... AddNamespace <internal-8> 
    0289: [0] 01 1d ...................... AddNamespace <ejs> 
    0291: [0] 33 ce 3a 07 21 ............. Debug 

    # core/Block.es:7           module ejs {

    0296: [0] 33 ce 3a 09 2e ............. Debug 

    # core/Block.es:9           	use default namespace intrinsic

    0301: [0] 83 25 ...................... GetGlobalSlot <37> 
    0303: [1] 02 ......................... AddNamespaceRef 
    0304: [0] 33 ce 3a 0f e7 3a .......... Debug 

    # core/Block.es:15          	native final class Block {

    0310: [0] 34 22 ...................... DefineClass <type: 0x22,  intrinsic::Block> 
    0312: [0] 23 ......................... CloseBlock 
    0313: [0] 93 09 00 ................... OpenBlock <slot: 9> <0> 
    0316: [0] 33 91 3b e7 02 10 .......... Debug 

    # core/ByteArray.es:359     }

    0322: [0] 01 a3 3b ................... AddNamespace <internal-9> 
    0325: [0] 01 1d ...................... AddNamespace <ejs> 
    0327: [0] 33 91 3b 07 21 ............. Debug 

    # core/ByteArray.es:7       module ejs {

    0332: [0] 33 91 3b 09 ae 3b .......... Debug 

    # core/ByteArray.es:9       	use strict

    0338: [0] 33 91 3b 0a 2e ............. Debug 

    # core/ByteArray.es:10      	use default namespace intrinsic

    0343: [0] 83 25 ...................... GetGlobalSlot <37> 
    0345: [1] 02 ......................... AddNamespaceRef 
    0346: [0] 33 91 3b 25 ba 3b .......... Debug 

    # core/ByteArray.es:37      	native final class ByteArray implements Stream {

    0352: [0] 34 26 ...................... DefineClass <type: 0x26,  intrinsic::ByteArray> 
    0354: [0] 23 ......................... CloseBlock 
    0355: [0] 93 0a 00 ................... OpenBlock <slot: 10> <0> 
    0358: [0] 33 fa 4d cb 04 10 .......... Debug 

    # core/Date.es:587          }

    0364: [0] 01 87 4e ................... AddNamespace <internal-10> 
    0367: [0] 01 1d ...................... AddNamespace <ejs> 
    0369: [0] 33 fa 4d 07 21 ............. Debug 

    # core/Date.es:7            module ejs {

    0374: [0] 33 fa 4d 09 2e ............. Debug 

    # core/Date.es:9            	use default namespace intrinsic

    0379: [0] 83 25 ...................... GetGlobalSlot <37> 
    0381: [1] 02 ......................... AddNamespaceRef 
    0382: [0] 33 fa 4d 0e 93 4e .......... Debug 

    # core/Date.es:14           	native final class Date {

    0388: [0] 34 2a ...................... DefineClass <type: 0x2a,  intrinsic::Date> 
    0390: [0] 23 ......................... CloseBlock 
    0391: [0] 93 0b 00 ................... OpenBlock <slot: 11> <0> 
    0394: [0] 33 ae 59 91 02 10 .......... Debug 

    # core/Error.es:273         }

    0400: [0] 01 bc 59 ................... AddNamespace <internal-11> 
    0403: [0] 01 1d ...................... AddNamespace <ejs> 
    0405: [0] 33 ae 59 07 21 ............. Debug 

    # core/Error.es:7           module ejs {

    0410: [0] 33 ae 59 09 2e ............. Debug 

    # core/Error.es:9           	use default namespace intrinsic

    0415: [0] 83 25 ...................... GetGlobalSlot <37> 
    0417: [1] 02 ......................... AddNamespaceRef 
    0418: [0] 33 ae 59 10 c8 59 .......... Debug 

    # core/Error.es:16          	native dynamic class ArgError extends Error {

    0424: [0] 34 2e ...................... DefineClass <type: 0x2e,  intrinsic::ArgError> 
    0426: [0] 33 ae 59 1f d6 5a .......... Debug 

    # core/Error.es:31          	native dynamic class ArithmeticError extends Error {

    0432: [0] 34 32 ...................... DefineClass <type: 0x32,  intrinsic::ArithmeticError> 
    0434: [0] 33 ae 59 2d d7 5b .......... Debug 

    # core/Error.es:45          	native dynamic class AssertError extends Error {

    0440: [0] 34 36 ...................... DefineClass <type: 0x36,  intrinsic::AssertError> 
    0442: [0] 33 ae 59 3c cc 5c .......... Debug 

    # core/Error.es:60          	native dynamic class InstructionError extends Error {

    0448: [0] 34 3a ...................... DefineClass <type: 0x3a,  intrinsic::InstructionError> 
    0450: [0] 33 ae 59 4e d0 5d .......... Debug 

    # core/Error.es:78          	native dynamic class Error {

    0456: [0] 34 3e ...................... DefineClass <type: 0x3e,  intrinsic::Error> 
    0458: [0] 33 ae 59 75 ac 5f .......... Debug 

    # core/Error.es:117         	native dynamic class IOError extends Error {

    0464: [0] 34 42 ...................... DefineClass <type: 0x42,  intrinsic::IOError> 
    0466: [0] 33 ae 59 83 01 95 60 ....... Debug 

    # core/Error.es:131         	native dynamic class InternalError extends Error {

    0473: [0] 34 46 ...................... DefineClass <type: 0x46,  intrinsic::InternalError> 
    0475: [0] 33 ae 59 92 01 90 61 ....... Debug 

    # core/Error.es:146         	native dynamic class MemoryError extends Error {

    0482: [0] 34 4a ...................... DefineClass <type: 0x4a,  intrinsic::MemoryError> 
    0484: [0] 33 ae 59 a2 01 85 62 ....... Debug 

    # core/Error.es:162         	native dynamic class OutOfBoundsError extends Error {

    0491: [0] 34 4e ...................... DefineClass <type: 0x4e,  intrinsic::OutOfBoundsError> 
    0493: [0] 33 ae 59 b0 01 89 63 ....... Debug 

    # core/Error.es:176         	native dynamic class ReferenceError extends Error {

    0500: [0] 34 52 ...................... DefineClass <type: 0x52,  intrinsic::ReferenceError> 
    0502: [0] 33 ae 59 bf 01 86 64 ....... Debug 

    # core/Error.es:191         	native dynamic class ResourceError extends Error {

    0509: [0] 34 56 ...................... DefineClass <type: 0x56,  intrinsic::ResourceError> 
    0511: [0] 33 ae 59 df 01 81 65 ....... Debug 

    # core/Error.es:223         	native dynamic class StateError extends Error {

    0518: [0] 34 5a ...................... DefineClass <type: 0x5a,  intrinsic::StateError> 
    0520: [0] 33 ae 59 ed 01 f3 65 ....... Debug 

    # core/Error.es:237         	native dynamic class SyntaxError extends Error {

    0527: [0] 34 5e ...................... DefineClass <type: 0x5e,  intrinsic::SyntaxError> 
    0529: [0] 33 ae 59 fc 01 e8 66 ....... Debug 

    # core/Error.es:252         	native dynamic class TypeError extends Error {

    0536: [0] 34 62 ...................... DefineClass <type: 0x62,  intrinsic::TypeError> 
    0538: [0] 33 ae 59 89 02 d7 67 ....... Debug 

    # core/Error.es:265         	native dynamic class URIError extends Error {

    0545: [0] 34 66 ...................... DefineClass <type: 0x66,  intrinsic::URIError> 
    0547: [0] 23 ......................... CloseBlock 
    0548: [0] 93 0c 00 ................... OpenBlock <slot: 12> <0> 
    0551: [0] 33 d1 68 3b 10 ............. Debug 

    # core/Iterator.es:59       }

    0556: [0] 01 e2 68 ................... AddNamespace <internal-12> 
    0559: [0] 01 1d ...................... AddNamespace <ejs> 
    0561: [0] 33 d1 68 09 21 ............. Debug 

    # core/Iterator.es:9        module ejs {

    0566: [0] 33 d1 68 0e ee 68 .......... Debug 

    # core/Iterator.es:14       	iterator interface Iterable {

    0572: [0] 34 6a ...................... DefineClass <type: 0x6a,  iterator::Iterable> 
    0574: [0] 33 d1 68 1e 96 69 .......... Debug 

    # core/Iterator.es:30       	iterator native final class Iterator {

    0580: [0] 34 6e ...................... DefineClass <type: 0x6e,  iterator::Iterator> 
    0582: [0] 23 ......................... CloseBlock 
    0583: [0] 93 0d 00 ................... OpenBlock <slot: 13> <0> 
    0586: [0] 33 f2 69 2b 10 ............. Debug 

    # core/JSON.es:43           }

    0591: [0] 01 ff 69 ................... AddNamespace <internal-13> 
    0594: [0] 01 1d ...................... AddNamespace <ejs> 
    0596: [0] 33 f2 69 07 21 ............. Debug 

    # core/JSON.es:7            module ejs {

    0601: [0] 33 f2 69 09 2e ............. Debug 

    # core/JSON.es:9            	use default namespace intrinsic

    0606: [0] 83 25 ...................... GetGlobalSlot <37> 
    0608: [1] 02 ......................... AddNamespaceRef 
    0609: [0] 33 f2 69 0b 8b 6a .......... Debug 

    # core/JSON.es:11           	final class JSON {

    0615: [0] 34 72 ...................... DefineClass <type: 0x72,  intrinsic::JSON> 
    0617: [0] 23 ......................... CloseBlock 
    0618: [0] 93 0e 00 ................... OpenBlock <slot: 14> <0> 
    0621: [0] 33 c2 6c dd 01 10 .......... Debug 

    # core/Math.es:221          }

    0627: [0] 01 cf 6c ................... AddNamespace <internal-14> 
    0630: [0] 01 1d ...................... AddNamespace <ejs> 
    0632: [0] 33 c2 6c 07 21 ............. Debug 

    # core/Math.es:7            module ejs {

    0637: [0] 33 c2 6c 09 2e ............. Debug 

    # core/Math.es:9            	use default namespace intrinsic

    0642: [0] 83 25 ...................... GetGlobalSlot <37> 
    0644: [1] 02 ......................... AddNamespaceRef 
    0645: [0] 23 ......................... CloseBlock 
    0646: [0] 93 0f 00 ................... OpenBlock <slot: 15> <0> 
    0649: [0] 33 e9 6c 15 10 ............. Debug 

    # core/Name.es:21           }

    0654: [0] 01 f6 6c ................... AddNamespace <internal-15> 
    0657: [0] 01 1d ...................... AddNamespace <ejs> 
    0659: [0] 33 e9 6c 07 21 ............. Debug 

    # core/Name.es:7            module ejs {

    0664: [0] 33 e9 6c 09 2e ............. Debug 

    # core/Name.es:9            	use default namespace intrinsic

    0669: [0] 83 25 ...................... GetGlobalSlot <37> 
    0671: [1] 02 ......................... AddNamespaceRef 
    0672: [0] 23 ......................... CloseBlock 
    0673: [0] 93 10 00 ................... OpenBlock <slot: 16> <0> 
    0676: [0] 33 90 6d 26 10 ............. Debug 

    # core/Namespace.es:38      }

    0681: [0] 01 a2 6d ................... AddNamespace <internal-16> 
    0684: [0] 01 1d ...................... AddNamespace <ejs> 
    0686: [0] 33 90 6d 09 21 ............. Debug 

    # core/Namespace.es:9       module ejs {

    0691: [0] 33 90 6d 0b 2e ............. Debug 

    # core/Namespace.es:11      	use default namespace intrinsic

    0696: [0] 83 25 ...................... GetGlobalSlot <37> 
    0698: [1] 02 ......................... AddNamespaceRef 
    0699: [0] 33 90 6d 10 ae 6d .......... Debug 

    # core/Namespace.es:16      	native final class Namespace {

    0705: [0] 34 76 ...................... DefineClass <type: 0x76,  intrinsic::Namespace> 
    0707: [0] 23 ......................... CloseBlock 
    0708: [0] 93 11 00 ................... OpenBlock <slot: 17> <0> 
    0711: [0] 33 a2 6e 87 01 10 .......... Debug 

    # core/Reflect.es:135       }

    0717: [0] 01 b2 6e ................... AddNamespace <internal-17> 
    0720: [0] 01 1d ...................... AddNamespace <ejs> 
    0722: [0] 33 a2 6e 07 21 ............. Debug 

    # core/Reflect.es:7         module ejs {

    0727: [0] 33 a2 6e 09 2e ............. Debug 

    # core/Reflect.es:9         	use default namespace intrinsic

    0732: [0] 83 25 ...................... GetGlobalSlot <37> 
    0734: [1] 02 ......................... AddNamespaceRef 
    0735: [0] 33 a2 6e 18 be 6e .......... Debug 

    # core/Reflect.es:24            native final class Reflect {

    0741: [0] 34 7a ...................... DefineClass <type: 0x7a,  intrinsic::Reflect> 
    0743: [0] 33 a2 6e 42 ee 70 .......... Debug 

    # core/Reflect.es:66            function typeOf(o): String {

    0749: [0] 23 ......................... CloseBlock 
    0750: [0] 93 12 00 ................... OpenBlock <slot: 18> <0> 
    0753: [0] 33 c9 71 bd 01 10 .......... Debug 

    # core/RegExp.es:189        }

    0759: [0] 01 d8 71 ................... AddNamespace <internal-18> 
    0762: [0] 01 1d ...................... AddNamespace <ejs> 
    0764: [0] 33 c9 71 07 21 ............. Debug 

    # core/RegExp.es:7          module ejs {

    0769: [0] 33 c9 71 09 2e ............. Debug 

    # core/RegExp.es:9          	use default namespace intrinsic

    0774: [0] 83 25 ...................... GetGlobalSlot <37> 
    0776: [1] 02 ......................... AddNamespaceRef 
    0777: [0] 33 c9 71 35 e4 71 .......... Debug 

    # core/RegExp.es:53         	native final class RegExp {

    0783: [0] 34 82 01 ................... DefineClass <type: 0x82,  intrinsic::RegExp> 
    0786: [0] 23 ......................... CloseBlock 
    0787: [0] 93 13 00 ................... OpenBlock <slot: 19> <0> 
    0790: [0] 33 ca 78 38 10 ............. Debug 

    # core/Stream.es:56         }

    0795: [0] 01 d9 78 ................... AddNamespace <internal-19> 
    0798: [0] 01 1d ...................... AddNamespace <ejs> 
    0800: [0] 33 ca 78 07 21 ............. Debug 

    # core/Stream.es:7          module ejs {

    0805: [0] 33 ca 78 09 e5 78 .......... Debug 

    # core/Stream.es:9              use default namespace intrinsic

    0811: [0] 83 25 ...................... GetGlobalSlot <37> 
    0813: [1] 02 ......................... AddNamespaceRef 
    0814: [0] 33 ca 78 13 89 79 .......... Debug 

    # core/Stream.es:19         	interface Stream {

    0820: [0] 34 86 01 ................... DefineClass <type: 0x86,  intrinsic::Stream> 
    0823: [0] 23 ......................... CloseBlock 
    0824: [0] 93 14 00 ................... OpenBlock <slot: 20> <0> 
    0827: [0] 33 b2 79 5d 10 ............. Debug 

    # core/Type.es:93           }

    0832: [0] 01 bf 79 ................... AddNamespace <internal-20> 
    0835: [0] 01 1d ...................... AddNamespace <ejs> 
    0837: [0] 33 b2 79 07 21 ............. Debug 

    # core/Type.es:7            module ejs {

    0842: [0] 33 b2 79 09 2e ............. Debug 

    # core/Type.es:9            	use default namespace intrinsic

    0847: [0] 83 25 ...................... GetGlobalSlot <37> 
    0849: [1] 02 ......................... AddNamespaceRef 
    0850: [0] 33 b2 79 17 cb 79 .......... Debug 

    # core/Type.es:23           	native final class Type {

    0856: [0] 34 8a 01 ................... DefineClass <type: 0x8a,  intrinsic::Type> 
    0859: [0] 23 ......................... CloseBlock 
    0860: [0] 93 15 00 ................... OpenBlock <slot: 21> <0> 
    0863: [0] 33 f4 79 8b 03 10 .......... Debug 

    # core/Global.es:395        }

    0869: [0] 01 83 7a ................... AddNamespace <internal-21> 
    0872: [0] 01 1d ...................... AddNamespace <ejs> 
    0874: [0] 33 f4 79 22 21 ............. Debug 

    # core/Global.es:34         module ejs {

    0879: [0] 33 f4 79 24 ae 3b .......... Debug 

    # core/Global.es:36         	use strict

    0885: [0] 33 f4 79 29 8f 7a .......... Debug 

    # core/Global.es:41         	public namespace public

    0891: [0] 59 e3 01 ................... LoadNamespace <public> 
    0894: [1] bd 23 ...................... PutGlobalSlot <35> 
    0896: [0] 33 f4 79 2e a8 7a .......... Debug 

    # core/Global.es:46         	public namespace internal

    0902: [0] 59 c3 7a ................... LoadNamespace <internal> 
    0905: [1] bd 24 ...................... PutGlobalSlot <36> 
    0907: [0] 33 f4 79 33 cc 7a .......... Debug 

    # core/Global.es:51         	public namespace intrinsic

    0913: [0] 59 ff 01 ................... LoadNamespace <intrinsic> 
    0916: [1] bd 25 ...................... PutGlobalSlot <37> 
    0918: [0] 33 f4 79 38 e8 7a .......... Debug 

    # core/Global.es:56         	public namespace iterator

    0924: [0] 59 ed 02 ................... LoadNamespace <iterator> 
    0927: [1] bd 26 ...................... PutGlobalSlot <38> 
    0929: [0] 33 f4 79 3d 83 7b .......... Debug 

    # core/Global.es:61         	public namespace CONFIG

    0935: [0] 59 9c 7b ................... LoadNamespace <CONFIG> 
    0938: [1] bd 27 ...................... PutGlobalSlot <39> 
    0940: [0] 33 f4 79 3f 2e ............. Debug 

    # core/Global.es:63         	use default namespace intrinsic

    0945: [0] 83 25 ...................... GetGlobalSlot <37> 
    0947: [1] 02 ......................... AddNamespaceRef 
    0948: [0] 33 f4 79 40 a3 7b .......... Debug 

    # core/Global.es:64         	use namespace iterator

    0954: [0] 83 26 ...................... GetGlobalSlot <38> 
    0956: [1] 02 ......................... AddNamespaceRef 
    0957: [0] 33 f4 79 42 bb 7b .......... Debug 

    # core/Global.es:66         	use namespace "ejs.sys"

    0963: [0] 01 d4 7b ................... AddNamespace <ejs.sys> 
    0966: [0] 33 f4 79 48 e1 7b .......... Debug 

    # core/Global.es:72         	const TODO: Boolean = false

    0972: [0] 83 32 ...................... GetGlobalSlot <50> 
    0974: [1] bd 28 ...................... PutGlobalSlot <40> 
    0976: [0] 33 f4 79 4d fe 7b .......... Debug 

    # core/Global.es:77         	const FUTURE: Boolean = false

    0982: [0] 83 32 ...................... GetGlobalSlot <50> 
    0984: [1] bd 29 ...................... PutGlobalSlot <41> 
    0986: [0] 33 f4 79 52 a4 7c .......... Debug 

    # core/Global.es:82         	const ASC: Boolean = false

    0992: [0] 83 32 ...................... GetGlobalSlot <50> 
    0994: [1] bd 2a ...................... PutGlobalSlot <42> 
    0996: [0] 33 f4 79 57 c4 7c .......... Debug 

    # core/Global.es:87         	const DOC_ONLY: Boolean = false

    1002: [0] 83 32 ...................... GetGlobalSlot <50> 
    1004: [1] bd 2b ...................... PutGlobalSlot <43> 
    1006: [0] 33 f4 79 5c ee 7c .......... Debug 

    # core/Global.es:92         	const DEPRECATED: Boolean = false

    1012: [0] 83 32 ...................... GetGlobalSlot <50> 
    1014: [1] bd 2c ...................... PutGlobalSlot <44> 
    1016: [0] 33 f4 79 62 9c 7d .......... Debug 

    # core/Global.es:98         	const REGEXP: Boolean = true

    1022: [0] 83 39 ...................... GetGlobalSlot <57> 
    1024: [1] bd 2d ...................... PutGlobalSlot <45> 
    1026: [0] 33 f4 79 74 c1 7d .......... Debug 

    # core/Global.es:116        	native const boolean: Type = Boolean

    1032: [0] 83 01 ...................... GetGlobalSlot <1> 
    1034: [1] bd 2e ...................... PutGlobalSlot <46> 
    1036: [0] 33 f4 79 7b ef 7d .......... Debug 

    # core/Global.es:123        	native const double: Type = Number

    1042: [0] 83 03 ...................... GetGlobalSlot <3> 
    1044: [1] bd 2f ...................... PutGlobalSlot <47> 
    1046: [0] 33 f4 79 82 01 9a 7e ....... Debug 

    # core/Global.es:130        	native const num: Type = Number

    1053: [0] 83 03 ...................... GetGlobalSlot <3> 
    1055: [1] bd 30 ...................... PutGlobalSlot <48> 
    1057: [0] 33 f4 79 89 01 bf 7e ....... Debug 

    # core/Global.es:137        	native const string: Type = String

    1064: [0] 83 04 ...................... GetGlobalSlot <4> 
    1066: [1] bd 31 ...................... PutGlobalSlot <49> 
    1068: [0] 33 f4 79 8f 01 ea 7e ....... Debug 

    # core/Global.es:143        	native const false: Boolean

    1075: [0] 33 f4 79 96 01 8d 7f ....... Debug 

    # core/Global.es:150        	native var global: Object

    1082: [0] 33 f4 79 9d 01 a8 7f ....... Debug 

    # core/Global.es:157        	native const null: Null

    1089: [0] 33 f4 79 a3 01 c6 7f ....... Debug 

    # core/Global.es:163        	native const Infinity: Number

    1096: [0] 33 f4 79 a9 01 ee 7f ....... Debug 

    # core/Global.es:169        	native const NegativeInfinity: Number

    1103: [0] 33 f4 79 af 01 a6 80 01 .... Debug 

    # core/Global.es:175        	native const NaN: Number

    1111: [0] 33 f4 79 b5 01 c4 80 01 .... Debug 

    # core/Global.es:181            iterator native final class StopIteration {}

    1119: [0] 34 e2 01 ................... DefineClass <type: 0xe2,  iterator::StopIteration> 
    1122: [0] 33 f4 79 bb 01 f5 80 01 .... Debug 

    # core/Global.es:187        	native const true: Boolean

    1130: [0] 33 f4 79 c2 01 96 81 01 .... Debug 

    # core/Global.es:194        	native const undefined: Void

    1138: [0] 33 f4 79 ca 01 be 81 01 .... Debug 

    # core/Global.es:202        	native const void: Type = Void

    1146: [0] 83 05 ...................... GetGlobalSlot <5> 
    1148: [1] bd 3b ...................... PutGlobalSlot <59> 
    1150: [0] 33 f4 79 d4 01 e3 81 01 .... Debug 

    # core/Global.es:212        	native function assert(condition: Boolean): Boolean

    1158: [0] 33 f4 79 da 01 a9 82 01 .... Debug 

    # core/Global.es:218            native function breakpoint(): Void

    1166: [0] 33 f4 79 e2 01 db 82 01 .... Debug 

    # core/Global.es:226        	native function cloneBase(klass: Type): Void

    1174: [0] 33 f4 79 ed 01 99 83 01 .... Debug 

    # core/Global.es:237        	native function deserialize(obj: String): Object

    1182: [0] 33 f4 79 fd 01 d7 83 01 .... Debug 

    # core/Global.es:253        	function dump(...args): Void {

    1190: [0] 33 f4 79 8d 02 bd 84 01 .... Debug 

    # core/Global.es:269        	native function eprint(...args): void

    1198: [0] 33 f4 79 aa 02 eb 84 01 .... Debug 

    # core/Global.es:298        	native function formatStack(): String

    1206: [0] 33 f4 79 b2 02 9e 85 01 .... Debug 

    # core/Global.es:306            native function hashcode(o: Object): Number

    1214: [0] 33 f4 79 c2 02 d7 85 01 .... Debug 

    # core/Global.es:322        	native function load(file: String): Void

    1222: [0] 33 f4 79 ce 02 8b 86 01 .... Debug 

    # core/Global.es:334        	native function print(...args): void

    1230: [0] 33 f4 79 d7 02 b7 86 01 .... Debug 

    # core/Global.es:343        	native function printv(...args): void

    1238: [0] 33 f4 79 dd 02 e5 86 01 .... Debug 

    # core/Global.es:349        	native function parse(input: String, preferredType: Type = null): Object

    1246: [0] 33 f4 79 f4 02 bd 87 01 .... Debug 

    # core/Global.es:372        	native function serialize(obj: Object, maxDepth: Number = 0, all: Boolean = false, base: Boolean = false): String

    1254: [0] 33 f4 79 88 03 cc 88 01 .... Debug 

    # core/Global.es:392            function printHash(name: String, o: Object): Void {

    1262: [0] 23 ......................... CloseBlock 
    1263: [0] 93 16 00 ................... OpenBlock <slot: 22> <0> 
    1266: [0] 33 d9 89 01 a1 03 10 ....... Debug 

    # xml/XML.es:417            }

    1273: [0] 01 e4 89 01 ................ AddNamespace <internal-25> 
    1277: [0] 01 1d ...................... AddNamespace <ejs> 
    1279: [0] 33 d9 89 01 0b 21 .......... Debug 

    # xml/XML.es:11             module ejs {

    1285: [0] 33 d9 89 01 0d 2e .......... Debug 

    # xml/XML.es:13             	use default namespace intrinsic

    1291: [0] 83 25 ...................... GetGlobalSlot <37> 
    1293: [1] 02 ......................... AddNamespaceRef 
    1294: [0] 33 d9 89 01 14 f0 89 01 .... Debug 

    # xml/XML.es:20             	native final class XML extends Object {

    1302: [0] 34 be 02 ................... DefineClass <type: 0x13e,  intrinsic::XML> 
    1305: [0] 23 ......................... CloseBlock 
    1306: [0] 93 17 00 ................... OpenBlock <slot: 23> <0> 
    1309: [0] 33 f3 9e 01 fa 02 10 ....... Debug 

    # xml/XMLList.es:378        }

    1316: [0] 01 82 9f 01 ................ AddNamespace <internal-26> 
    1320: [0] 01 1d ...................... AddNamespace <ejs> 
    1322: [0] 33 f3 9e 01 07 21 .......... Debug 

    # xml/XMLList.es:7          module ejs {

    1328: [0] 33 f3 9e 01 09 2e .......... Debug 

    # xml/XMLList.es:9          	use default namespace intrinsic

    1334: [0] 83 25 ...................... GetGlobalSlot <37> 
    1336: [1] 02 ......................... AddNamespaceRef 
    1337: [0] 33 f3 9e 01 10 8e 9f 01 .... Debug 

    # xml/XMLList.es:16         	native final class XMLList extends Object {

    1345: [0] 34 c2 02 ................... DefineClass <type: 0x142,  intrinsic::XMLList> 
    1348: [0] 23 ......................... CloseBlock 
    1349: [0] 3d ......................... EndCode 
    

BLOCK:      [__initializer__-00]  block_0014_1 (Slots 0)

BLOCK:      [__initializer__-01]  block_0007_3 (Slots 0)

BLOCK:      [__initializer__-02]  block_0007_5 (Slots 0)

BLOCK:      [__initializer__-03]  block_0007_7 (Slots 0)

BLOCK:      [__initializer__-04]  block_0007_10 (Slots 0)

BLOCK:      [__initializer__-05]  block_0007_16 (Slots 0)

BLOCK:      [__initializer__-06]  block_0007_18 (Slots 0)

BLOCK:      [__initializer__-07]  block_0007_20 (Slots 0)

BLOCK:      [__initializer__-08]  block_0007_37 (Slots 0)

BLOCK:      [__initializer__-09]  block_0007_39 (Slots 0)

BLOCK:      [__initializer__-10]  block_0007_41 (Slots 0)

BLOCK:      [__initializer__-11]  block_0007_43 (Slots 0)

BLOCK:      [__initializer__-12]  block_0009_45 (Slots 0)

BLOCK:      [__initializer__-13]  block_0007_47 (Slots 0)

BLOCK:      [__initializer__-14]  block_0007_49 (Slots 0)

BLOCK:      [__initializer__-15]  block_0007_51 (Slots 0)

BLOCK:      [__initializer__-16]  block_0009_53 (Slots 0)

BLOCK:      [__initializer__-17]  block_0007_55 (Slots 0)

BLOCK:      [__initializer__-18]  block_0007_57 (Slots 0)

BLOCK:      [__initializer__-19]  block_0007_59 (Slots 0)

BLOCK:      [__initializer__-20]  block_0007_61 (Slots 0)

BLOCK:      [__initializer__-21]  block_0034_63 (Slots 0)

BLOCK:      [__initializer__-22]  block_0011_82 (Slots 0)

BLOCK:      [__initializer__-23]  block_0007_84 (Slots 0)

CLASS:      class Iterable
            #  Class Details: 2 class traits, 0 instance traits, requested slot 26

FUNCTION:   [Iterable-00]  iterator function get(deep) : void

     ARG:   [arg-00]   private deep

    

VARIABLE:   [get-00]  private var deep

FUNCTION:   [Iterable-01]  iterator function getValues(deep) : void

     ARG:   [arg-00]   private deep

    

VARIABLE:   [getValues-00]  private var deep

CLASS:      dynamic class Object
            #  Class Details: 5 class traits, 0 instance traits, requested slot 0

FUNCTION:   [Object-00]  public native function clone(deep) : void

     ARG:   [arg-00]   private deep

    

VARIABLE:   [clone-00]  private var deep

FUNCTION:   [Object-01]  iterator native function get(deep, namespaces) : void

     ARG:   [arg-00]   private deep
     ARG:   [arg-01]   private namespaces

    

VARIABLE:   [get-00]  private var deep

VARIABLE:   [get-01]  private var namespaces

FUNCTION:   [Object-02]  iterator native function getValues(deep, namespaces) : void

     ARG:   [arg-00]   private deep
     ARG:   [arg-01]   private namespaces

    

VARIABLE:   [getValues-00]  private var deep

VARIABLE:   [getValues-01]  private var namespaces

FUNCTION:   [Object-03]  public get function length() : void


    

FUNCTION:   [Object-04]  public native function toString(locale) : void

     ARG:   [arg-00]   private locale

    

VARIABLE:   [toString-00]  private var locale

CLASS:      final class Boolean extends Object
            #  Class Details: 6 class traits, 0 instance traits, requested slot 1

FUNCTION:   [Boolean-05]  -constructor- native function Boolean(value) : void

     ARG:   [arg-00]   private value

    

VARIABLE:   [Boolean-00]  private var value

CLASS:      final class Null extends Object
            #  Class Details: 3 class traits, 0 instance traits, requested slot 2

FUNCTION:   [Null-01]  iterator override function get(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [Null-02]  iterator override function getValues(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

CLASS:      final class Number extends Object
            #  Class Details: 20 class traits, 0 instance traits, requested slot 3

FUNCTION:   [Number-01]  iterator override function get(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [Number-02]  iterator override function getValues(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

FUNCTION:   [Number-05]  -constructor- native function Number(value) : void

     ARG:   [arg-00]   private value

    

VARIABLE:   [Number-00]  private var value

FUNCTION:   [Number-06]  -initializer- function Number-initializer() : void


    0000: [0] 33 fb 07 21 82 01 .......... Debug 

    # core/Number.es:33                 use default namespace public

    0006: [0] 83 23 ...................... GetGlobalSlot <35> 
    0008: [1] 02 ......................... AddNamespaceRef 
    0009: [0] 33 fb 07 29 b2 08 .......... Debug 

    # core/Number.es:41         		native function Number(...value)

    0015: [0] 33 fb 07 51 d5 08 .......... Debug 

    # core/Number.es:81         		native static const MaxValue: Number

    0021: [0] 33 fb 07 59 85 09 .......... Debug 

    # core/Number.es:89         		native static const MinValue: Number

    0027: [0] 33 fb 07 61 b5 09 .......... Debug 

    # core/Number.es:97         		native function get ceil(): Number 

    0033: [0] 33 fb 07 69 e0 09 .......... Debug 

    # core/Number.es:105        		native function get floor(): Number

    0039: [0] 33 fb 07 71 8c 0a .......... Debug 

    # core/Number.es:113        		native function get isFinite(): Boolean

    0045: [0] 33 fb 07 7a bf 0a .......... Debug 

    # core/Number.es:122        		native function get isNaN(): Boolean

    0051: [0] 33 fb 07 83 01 ec 0a ....... Debug 

    # core/Number.es:131        		native function get round(): Number

    0058: [0] 33 fb 07 93 01 98 0b ....... Debug 

    # core/Number.es:147        		native function toFixed(fractionDigits: Number = 0): String

    0065: [0] 33 fb 07 9c 01 ed 0b ....... Debug 

    # core/Number.es:156        		native function toPrecision(numDigits: Number = SOME_DEFAULT): String

    0072: [0] 33 fb 07 a4 01 cb 0c ....... Debug 

    # core/Number.es:164        		native function get abs(): Number

    0079: [0] 33 fb 07 c6 01 d1 06 ....... Debug 

    # core/Number.es:198        		override iterator native function get(deep: Boolean = false): Iterator

    0086: [0] 33 fb 07 d2 01 9a 07 ....... Debug 

    # core/Number.es:210        		override iterator native function getValues(deep: Boolean = false): Iterator

    0093: [0] 33 fb 07 db 01 f3 0c ....... Debug 

    # core/Number.es:219        		function max(other: Number): Number {

    0100: [0] 33 fb 07 e6 01 cb 0d ....... Debug 

    # core/Number.es:230        		function min(other: Number): Number {

    0107: [0] 33 fb 07 f1 01 9d 0e ....... Debug 

    # core/Number.es:241        		function power(power: Number): Number {

    0114: [0] c4 ......................... Return 
    

VARIABLE:   [Number-07]  public static var MaxValue : Number

VARIABLE:   [Number-08]  public static var MinValue : Number

FUNCTION:   [Number-09]  public get function ceil() : Number


    

FUNCTION:   [Number-10]  public get function floor() : Number


    

FUNCTION:   [Number-11]  public get function isFinite() : Boolean


    

FUNCTION:   [Number-12]  public get function isNaN() : Boolean


    

FUNCTION:   [Number-13]  public get function round() : Number


    

FUNCTION:   [Number-14]  public native function toFixed(fractionDigits: Number) : void

     ARG:   [arg-00]   private fractionDigits : Number

    

VARIABLE:   [toFixed-00]  private var fractionDigits : Number

FUNCTION:   [Number-15]  public native function toPrecision(numDigits: Number) : void

     ARG:   [arg-00]   private numDigits : Number

    

VARIABLE:   [toPrecision-00]  private var numDigits : Number

FUNCTION:   [Number-16]  public get function abs() : Number


    

FUNCTION:   [Number-17]  public function max(other: Number) : Number

     ARG:   [arg-00]   private other : Number

    0000: [0] 33 fb 07 dc 01 9b 0d ....... Debug 

    # core/Number.es:220        			return this > other ? this : other

    0007: [0] 5d ......................... LoadThis 
    0008: [1] 61 ......................... GetLocalSlot_0 
    0009: [2] 29 ......................... CompareGT 
    0010: [1] 12 03 ...................... BranchFalse.8 <addr: 15> 
    0012: [0] 5d ......................... LoadThis 
    0013: [1] 40 01 ...................... Goto.8 <addr: 16> 
    0015: [1] 61 ......................... GetLocalSlot_0 
    0016: [2] c5 ......................... ReturnValue 
    

VARIABLE:   [max-00]  private var other : Number

FUNCTION:   [Number-18]  public function min(other: Number) : Number

     ARG:   [arg-00]   private other : Number

    0000: [0] 33 fb 07 e7 01 f3 0d ....... Debug 

    # core/Number.es:231        			return this < other ? this : other

    0007: [0] 5d ......................... LoadThis 
    0008: [1] 61 ......................... GetLocalSlot_0 
    0009: [2] 2b ......................... CompareLT 
    0010: [1] 12 03 ...................... BranchFalse.8 <addr: 15> 
    0012: [0] 5d ......................... LoadThis 
    0013: [1] 40 01 ...................... Goto.8 <addr: 16> 
    0015: [1] 61 ......................... GetLocalSlot_0 
    0016: [2] c5 ......................... ReturnValue 
    

VARIABLE:   [min-00]  private var other : Number

FUNCTION:   [Number-19]  public function power(power: Number) : Number

     ARG:   [arg-00]   private power : Number
   LOCAL:   [local-01] var result : Number
   LOCAL:   [local-02] var i

    0000: [0] 33 fb 07 f2 01 ce 0e ....... Debug 

    # core/Number.es:242        			var result: Number = this

    0007: [0] 5d ......................... LoadThis 
    0008: [1] 9b ......................... PutLocalSlot_1 
    0009: [0] 33 fb 07 f3 01 eb 0e ....... Debug 

    # core/Number.es:243        			for (i in power) {

    0016: [0] 61 ......................... GetLocalSlot_0 
    0017: [1] 17 01 00 ................... CallObjSlot <slot: 1> <argc: 0> 
    0020: [0] 99 ......................... PushResult 
    0021: [1] 3b ......................... Dup 
    0022: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0025: [1] 99 ......................... PushResult 
    0026: [2] 9c ......................... PutLocalSlot_2 
    0027: [1] 33 fb 07 f4 01 8e 0f ....... Debug 

    # core/Number.es:244        				result *= result

    0034: [1] 62 ......................... GetLocalSlot_1 
    0035: [2] 62 ......................... GetLocalSlot_1 
    0036: [3] 8c ......................... Mul 
    0037: [2] 9b ......................... PutLocalSlot_1 
    0038: [1] 40 ed ...................... Goto.8 <addr: 21> 
    0040: [1] 96 ......................... Pop 
    0041: [0] 33 fb 07 f6 01 a3 0f ....... Debug 

    # core/Number.es:246        			return result

    0048: [0] 62 ......................... GetLocalSlot_1 
    0049: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     22      25         40           40       

VARIABLE:   [power-00]  private var power : Number

VARIABLE:   [power-01]  private var result : Number

VARIABLE:   [power-02]  -hoisted-2 var i

CLASS:      final class String extends Object
            #  Class Details: 41 class traits, 0 instance traits, requested slot 4

FUNCTION:   [String-01]  iterator override function get(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [String-02]  iterator override function getValues(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

FUNCTION:   [String-03]  public get function length() : Number


    

FUNCTION:   [String-04]  public override function toString(locale: String) : String

     ARG:   [arg-00]   private locale : String

    

VARIABLE:   [toString-00]  private var locale : String

FUNCTION:   [String-05]  -constructor- native function String(str) : void

     ARG:   [arg-00]   private str

    

VARIABLE:   [String-00]  private var str

FUNCTION:   [String-06]  public native function caseCompare(compare: String) : Number

     ARG:   [arg-00]   private compare : String

    

VARIABLE:   [caseCompare-00]  private var compare : String

FUNCTION:   [String-07]  public native function charAt(index: Number) : String

     ARG:   [arg-00]   private index : Number

    

VARIABLE:   [charAt-00]  private var index : Number

FUNCTION:   [String-08]  public native function charCodeAt(index: Number) : Number

     ARG:   [arg-00]   private index : Number

    

VARIABLE:   [charCodeAt-00]  private var index : Number

FUNCTION:   [String-09]  public native function concat(args) : String

     ARG:   [arg-00]   private args

    

VARIABLE:   [concat-00]  private var args

FUNCTION:   [String-10]  public native function contains(pattern: Object) : Boolean

     ARG:   [arg-00]   private pattern : Object

    

VARIABLE:   [contains-00]  private var pattern : Object

FUNCTION:   [String-11]  public native function endsWith(test: String) : Boolean

     ARG:   [arg-00]   private test : String

    

VARIABLE:   [endsWith-00]  private var test : String

FUNCTION:   [String-12]  public native function format(args) : String

     ARG:   [arg-00]   private args

    

VARIABLE:   [format-00]  private var args

FUNCTION:   [String-13]  public static function fromCharCode(codes) : String

     ARG:   [arg-00]   private codes

    

VARIABLE:   [fromCharCode-00]  private var codes

FUNCTION:   [String-14]  public native function indexOf(pattern: String, startIndex: Number) : Number

     ARG:   [arg-00]   private pattern : String
     ARG:   [arg-01]   private startIndex : Number

    

VARIABLE:   [indexOf-00]  private var pattern : String

VARIABLE:   [indexOf-01]  private var startIndex : Number

FUNCTION:   [String-15]  public get function isDigit() : Boolean


    

FUNCTION:   [String-16]  public get function isAlpha() : Boolean


    

FUNCTION:   [String-17]  public get function isLower() : Boolean


    

FUNCTION:   [String-18]  public get function isSpace() : Boolean


    

FUNCTION:   [String-19]  public get function isUpper() : Boolean


    

FUNCTION:   [String-20]  public native function lastIndexOf(pattern: String, location: Number) : Number

     ARG:   [arg-00]   private pattern : String
     ARG:   [arg-01]   private location : Number

    

VARIABLE:   [lastIndexOf-00]  private var pattern : String

VARIABLE:   [lastIndexOf-01]  private var location : Number

FUNCTION:   [String-21]  public native function match(pattern) : void

     ARG:   [arg-00]   private pattern

    

VARIABLE:   [match-00]  private var pattern

FUNCTION:   [String-22]  public native function toCamel() : String


    

FUNCTION:   [String-23]  public native function toPascal() : String


    

FUNCTION:   [String-24]  public native function printable() : String


    

FUNCTION:   [String-25]  public native function quote() : String


    

FUNCTION:   [String-26]  public native function remove(start: Number, end: Number) : String

     ARG:   [arg-00]   private start : Number
     ARG:   [arg-01]   private end : Number

    

VARIABLE:   [remove-00]  private var start : Number

VARIABLE:   [remove-01]  private var end : Number

FUNCTION:   [String-27]  public native function replace(pattern: Object, replacement: String) : String

     ARG:   [arg-00]   private pattern : Object
     ARG:   [arg-01]   private replacement : String

    

VARIABLE:   [replace-00]  private var pattern : Object

VARIABLE:   [replace-01]  private var replacement : String

FUNCTION:   [String-28]  public native function reverse() : String


    

FUNCTION:   [String-29]  public native function search(pattern: Object) : Number

     ARG:   [arg-00]   private pattern : Object

    

VARIABLE:   [search-00]  private var pattern : Object

FUNCTION:   [String-30]  public native function slice(start: Number, end: Number, step: Number) : String

     ARG:   [arg-00]   private start : Number
     ARG:   [arg-01]   private end : Number
     ARG:   [arg-02]   private step : Number

    

VARIABLE:   [slice-00]  private var start : Number

VARIABLE:   [slice-01]  private var end : Number

VARIABLE:   [slice-02]  private var step : Number

FUNCTION:   [String-31]  public native function split(delimiter: Object, limit: Number) : void

     ARG:   [arg-00]   private delimiter : Object
     ARG:   [arg-01]   private limit : Number

    

VARIABLE:   [split-00]  private var delimiter : Object

VARIABLE:   [split-01]  private var limit : Number

FUNCTION:   [String-32]  public native function startsWith(test: String) : Boolean

     ARG:   [arg-00]   private test : String

    

VARIABLE:   [startsWith-00]  private var test : String

FUNCTION:   [String-33]  public native function substring(startIndex: Number, end: Number) : String

     ARG:   [arg-00]   private startIndex : Number
     ARG:   [arg-01]   private end : Number

    

VARIABLE:   [substring-00]  private var startIndex : Number

VARIABLE:   [substring-01]  private var end : Number

FUNCTION:   [String-34]  public function times(times: Number) : String

     ARG:   [arg-00]   private times : Number
   LOCAL:   [local-01] var s : String
   LOCAL:   [local-02] var i

    0000: [0] 33 82 10 f5 02 c3 1f ....... Debug 

    # core/String.es:373        			var s: String = ""

    0007: [0] 5c ba 0f ................... LoadString <> 
    0010: [1] 9b ......................... PutLocalSlot_1 
    0011: [0] 33 82 10 f7 02 d9 1f ....... Debug 

    # core/String.es:375        			for (i in times) {

    0018: [0] 61 ......................... GetLocalSlot_0 
    0019: [1] 17 01 00 ................... CallObjSlot <slot: 1> <argc: 0> 
    0022: [0] 99 ......................... PushResult 
    0023: [1] 3b ......................... Dup 
    0024: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0027: [1] 99 ......................... PushResult 
    0028: [2] 9c ......................... PutLocalSlot_2 
    0029: [1] 33 82 10 f8 02 ef 1f ....... Debug 

    # core/String.es:376        				s += this

    0036: [1] 62 ......................... GetLocalSlot_1 
    0037: [2] 5d ......................... LoadThis 
    0038: [3] 00 ......................... Add 
    0039: [2] 9b ......................... PutLocalSlot_1 
    0040: [1] 40 ed ...................... Goto.8 <addr: 23> 
    0042: [1] 96 ......................... Pop 
    0043: [0] 33 82 10 fa 02 fd 1f ....... Debug 

    # core/String.es:378        			return s

    0050: [0] 62 ......................... GetLocalSlot_1 
    0051: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     24      27         42           42       

VARIABLE:   [times-00]  private var times : Number

VARIABLE:   [times-01]  private var s : String

VARIABLE:   [times-02]  -hoisted-2 var i

FUNCTION:   [String-35]  public native function tokenize(format: String) : void

     ARG:   [arg-00]   private format : String

    

VARIABLE:   [tokenize-00]  private var format : String

FUNCTION:   [String-36]  public native function toLower(locale: String) : String

     ARG:   [arg-00]   private locale : String

    

VARIABLE:   [toLower-00]  private var locale : String

FUNCTION:   [String-37]  public native function toUpper(locale: String) : String

     ARG:   [arg-00]   private locale : String

    

VARIABLE:   [toUpper-00]  private var locale : String

FUNCTION:   [String-38]  public native function trim(str: String) : String

     ARG:   [arg-00]   private str : String

    

VARIABLE:   [trim-00]  private var str : String

FUNCTION:   [String-39]  public function -(str: String) : String

     ARG:   [arg-00]   private str : String
   LOCAL:   [local-01] var i : Number

    0000: [0] 33 82 10 f4 03 ec 22 ....... Debug 

    # core/String.es:500        			var i: Number = indexOf(str)

    0007: [0] 61 ......................... GetLocalSlot_0 
    0008: [1] 18 0e 01 ................... CallThisSlot <slot: 14> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] 9b ......................... PutLocalSlot_1 
    0013: [0] 33 82 10 f5 03 8c 23 ....... Debug 

    # core/String.es:501        			return remove(i, i + str.length)

    0020: [0] 62 ......................... GetLocalSlot_1 
    0021: [1] 62 ......................... GetLocalSlot_1 
    0022: [2] 61 ......................... GetLocalSlot_0 
    0023: [3] 87 03 01 ................... GetTypeSlot <slot: 3> <1> 
    0026: [3] 00 ......................... Add 
    0027: [2] 18 1a 02 ................... CallThisSlot <slot: 26> <argc: 2> 
    0030: [0] 99 ......................... PushResult 
    0031: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [--00]  private var str : String

VARIABLE:   [--01]  private var i : Number

FUNCTION:   [String-40]  public function %(obj: Object) : String

     ARG:   [arg-00]   private obj : Object

    0000: [0] 33 82 10 a9 04 d7 23 ....... Debug 

    # core/String.es:553        			return format(obj)

    0007: [0] 61 ......................... GetLocalSlot_0 
    0008: [1] 18 0c 01 ................... CallThisSlot <slot: 12> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [%-00]  private var obj : Object

CLASS:      final class Void extends Object
            #  Class Details: 3 class traits, 0 instance traits, requested slot 5

FUNCTION:   [Void-01]  iterator override function get(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [Void-02]  iterator override function getValues(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

CLASS:      final class Function extends Object
            #  Class Details: 7 class traits, 0 instance traits, requested slot 6

FUNCTION:   [Function-05]  public native function apply(thisObject: Object, args) : Object

     ARG:   [arg-00]   private thisObject : Object
     ARG:   [arg-01]   private args

    

VARIABLE:   [apply-00]  private var thisObject : Object

VARIABLE:   [apply-01]  private var args

FUNCTION:   [Function-06]  public native function call(thisObject: Object, args) : Object

     ARG:   [arg-00]   private thisObject : Object
     ARG:   [arg-01]   private args

    

VARIABLE:   [call-00]  private var thisObject : Object

VARIABLE:   [call-01]  private var args

CLASS:      dynamic class Array extends Object
            #  Class Details: 35 class traits, 0 instance traits, requested slot 7

FUNCTION:   [Array-00]  public override function clone(deep: Boolean) : Array

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [clone-00]  private var deep : Boolean

FUNCTION:   [Array-01]  iterator override function get(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [Array-02]  iterator override function getValues(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

FUNCTION:   [Array-03]  public get function length() : Number


    

FUNCTION:   [Array-04]  public override function toString(locale: String) : String

     ARG:   [arg-00]   private locale : String

    

VARIABLE:   [toString-00]  private var locale : String

FUNCTION:   [Array-05]  -constructor- native function Array(values: Array) : void

     ARG:   [arg-00]   private values : Array

    

VARIABLE:   [Array-00]  private var values : Array

FUNCTION:   [Array-06]  public native function append(obj: Object) : Array

     ARG:   [arg-00]   private obj : Object

    

VARIABLE:   [append-00]  private var obj : Object

FUNCTION:   [Array-07]  public native function clear() : Void


    

FUNCTION:   [Array-08]  public native function compact() : Array


    

FUNCTION:   [Array-09]  public native function concat(args: Array) : Array

     ARG:   [arg-00]   private args : Array

    

VARIABLE:   [concat-00]  private var args : Array

FUNCTION:   [Array-10]  public function contains(element: Object) : Boolean

     ARG:   [arg-00]   private element : Object

    0000: [0] 33 a0 26 5a a1 29 .......... Debug 

    # core/Array.es:90                      if (indexOf(element) >= 0) {

    0006: [0] 61 ......................... GetLocalSlot_0 
    0007: [1] 18 10 01 ................... CallThisSlot <slot: 16> <argc: 1> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] 46 ......................... Load0 
    0012: [2] 28 ......................... CompareGE 
    0013: [1] 12 0b ...................... BranchFalse.8 <addr: 26> 
    0015: [0] 33 a0 26 5b ca 29 .......... Debug 

    # core/Array.es:91                          return true

    0021: [0] 83 39 ...................... GetGlobalSlot <57> 
    0023: [1] c5 ......................... ReturnValue 
    0024: [0] 40 0f ...................... Goto.8 <addr: 41> 
    0026: [0] 33 a0 26 5c e6 29 .......... Debug 

    # core/Array.es:92                      } else {

    0032: [0] 33 a0 26 5d fb 29 .......... Debug 

    # core/Array.es:93                          return false

    0038: [0] 83 32 ...................... GetGlobalSlot <50> 
    0040: [1] c5 ......................... ReturnValue 
    0041: [0] 5a ......................... LoadNull 
    0042: [1] c5 ......................... ReturnValue 
    0043: [0] 33 a0 26 5f 98 2a .......... Debug 

    # core/Array.es:95                  }
    

VARIABLE:   [contains-00]  private var element : Object

FUNCTION:   [Array-11]  public function every(match: Function) : Boolean

     ARG:   [arg-00]   private match : Function
   LOCAL:   [local-01] var i : Number

    0000: [0] 33 a0 26 6d d7 2a .......... Debug 

    # core/Array.es:109         			for (let i: Number in this) {

    0006: [0] 5d ......................... LoadThis 
    0007: [1] 1d e9 02 ed 02 00 .......... CallObjName <get> <iterator> <argc: 0> 
    0013: [0] 99 ......................... PushResult 
    0014: [1] 3b ......................... Dup 
    0015: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0018: [1] 99 ......................... PushResult 
    0019: [2] 9b ......................... PutLocalSlot_1 
    0020: [1] 33 a0 26 6e 83 2b .......... Debug 

    # core/Array.es:110         				if (!match(this[i], i, this)) {

    0026: [1] 5d ......................... LoadThis 
    0027: [2] 62 ......................... GetLocalSlot_1 
    0028: [3] 81 ......................... GetObjNameExpr 
    0029: [2] 62 ......................... GetLocalSlot_1 
    0030: [3] 5d ......................... LoadThis 
    0031: [4] 19 00 00 03 ................ CallBlockSlot <slot: 0> <0> <argc: 3> 
    0035: [1] 99 ......................... PushResult 
    0036: [2] 8b ......................... LogicalNot 
    0037: [2] 12 0b ...................... BranchFalse.8 <addr: 50> 
    0039: [1] 33 a0 26 6f a7 2b .......... Debug 

    # core/Array.es:111         					return false

    0045: [1] 83 32 ...................... GetGlobalSlot <50> 
    0047: [2] c5 ......................... ReturnValue 
    0048: [0] 40 00 ...................... Goto.8 <addr: 50> 
    0050: [0] 40 da ...................... Goto.8 <addr: 14> 
    0052: [0] 96 ......................... Pop 
    0053: [-1] 33 a0 26 72 b9 2b .......... Debug 

    # core/Array.es:114         			return true

    0059: [-1] 83 39 ...................... GetGlobalSlot <57> 
    0061: [0] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     15      18         52           52       

VARIABLE:   [every-00]  private var match : Function

VARIABLE:   [every-01]  -hoisted-1 var i : Number

FUNCTION:   [Array-12]  public function filter(match: Function) : Array

     ARG:   [arg-00]   private match : Function

    0000: [0] 33 a0 26 82 01 fa 2b ....... Debug 

    # core/Array.es:130         			return findAll(match)

    0007: [0] 61 ......................... GetLocalSlot_0 
    0008: [1] 18 0e 01 ................... CallThisSlot <slot: 14> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [filter-00]  private var match : Function

FUNCTION:   [Array-13]  public function find(match: Function) : Object

     ARG:   [arg-00]   private match : Function
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i : Number

    0000: [0] 33 a0 26 91 01 c5 2c ....... Debug 

    # core/Array.es:145         			var result: Array = new Array

    0007: [0] 83 07 ...................... GetGlobalSlot <7> 
    0009: [1] 8e ......................... New 
    0010: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0012: [1] 9b ......................... PutLocalSlot_1 
    0013: [0] 33 a0 26 92 01 d7 2a ....... Debug 

    # core/Array.es:146         			for (let i: Number in this) {

    0020: [0] 5d ......................... LoadThis 
    0021: [1] 1d e9 02 ed 02 00 .......... CallObjName <get> <iterator> <argc: 0> 
    0027: [0] 99 ......................... PushResult 
    0028: [1] 3b ......................... Dup 
    0029: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0032: [1] 99 ......................... PushResult 
    0033: [2] 9c ......................... PutLocalSlot_2 
    0034: [1] 33 a0 26 93 01 e6 2c ....... Debug 

    # core/Array.es:147         				if (match(this[i], i, this)) {

    0041: [1] 5d ......................... LoadThis 
    0042: [2] 63 ......................... GetLocalSlot_2 
    0043: [3] 81 ......................... GetObjNameExpr 
    0044: [2] 63 ......................... GetLocalSlot_2 
    0045: [3] 5d ......................... LoadThis 
    0046: [4] 19 00 00 03 ................ CallBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 99 ......................... PushResult 
    0051: [2] 12 0d ...................... BranchFalse.8 <addr: 66> 
    0053: [1] 33 a0 26 94 01 89 2d ....... Debug 

    # core/Array.es:148         					return this[i]

    0060: [1] 5d ......................... LoadThis 
    0061: [2] 63 ......................... GetLocalSlot_2 
    0062: [3] 81 ......................... GetObjNameExpr 
    0063: [2] c5 ......................... ReturnValue 
    0064: [0] 40 00 ...................... Goto.8 <addr: 66> 
    0066: [0] 40 d8 ...................... Goto.8 <addr: 28> 
    0068: [0] 96 ......................... Pop 
    0069: [-1] 33 a0 26 97 01 a3 0f ....... Debug 

    # core/Array.es:151         			return result

    0076: [-1] 62 ......................... GetLocalSlot_1 
    0077: [0] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     29      32         68           68       

VARIABLE:   [find-00]  private var match : Function

VARIABLE:   [find-01]  private var result : Array

VARIABLE:   [find-02]  -hoisted-2 var i : Number

FUNCTION:   [Array-14]  public function findAll(match: Function) : Array

     ARG:   [arg-00]   private match : Function
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i : Number

    0000: [0] 33 a0 26 a5 01 c5 2c ....... Debug 

    # core/Array.es:165         			var result: Array = new Array

    0007: [0] 83 07 ...................... GetGlobalSlot <7> 
    0009: [1] 8e ......................... New 
    0010: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0012: [1] 9b ......................... PutLocalSlot_1 
    0013: [0] 33 a0 26 a6 01 d7 2a ....... Debug 

    # core/Array.es:166         			for (let i: Number in this) {

    0020: [0] 5d ......................... LoadThis 
    0021: [1] 1d e9 02 ed 02 00 .......... CallObjName <get> <iterator> <argc: 0> 
    0027: [0] 99 ......................... PushResult 
    0028: [1] 3b ......................... Dup 
    0029: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0032: [1] 99 ......................... PushResult 
    0033: [2] 9c ......................... PutLocalSlot_2 
    0034: [1] 33 a0 26 a7 01 e6 2c ....... Debug 

    # core/Array.es:167         				if (match(this[i], i, this)) {

    0041: [1] 5d ......................... LoadThis 
    0042: [2] 63 ......................... GetLocalSlot_2 
    0043: [3] 81 ......................... GetObjNameExpr 
    0044: [2] 63 ......................... GetLocalSlot_2 
    0045: [3] 5d ......................... LoadThis 
    0046: [4] 19 00 00 03 ................ CallBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 99 ......................... PushResult 
    0051: [2] 12 10 ...................... BranchFalse.8 <addr: 69> 
    0053: [1] 33 a0 26 a8 01 cf 2d ....... Debug 

    # core/Array.es:168         					result.append(this[i])

    0060: [1] 62 ......................... GetLocalSlot_1 
    0061: [2] 5d ......................... LoadThis 
    0062: [3] 63 ......................... GetLocalSlot_2 
    0063: [4] 81 ......................... GetObjNameExpr 
    0064: [3] 17 06 01 ................... CallObjSlot <slot: 6> <argc: 1> 
    0067: [1] 40 00 ...................... Goto.8 <addr: 69> 
    0069: [1] 40 d5 ...................... Goto.8 <addr: 28> 
    0071: [1] 96 ......................... Pop 
    0072: [0] 33 a0 26 ab 01 a3 0f ....... Debug 

    # core/Array.es:171         			return result

    0079: [0] 62 ......................... GetLocalSlot_1 
    0080: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     29      32         71           71       

VARIABLE:   [findAll-00]  private var match : Function

VARIABLE:   [findAll-01]  private var result : Array

VARIABLE:   [findAll-02]  -hoisted-2 var i : Number

FUNCTION:   [Array-15]  public function forEach(modifier: Function, thisObj: Object) : Void

     ARG:   [arg-00]   private modifier : Function
     ARG:   [arg-01]   private thisObj : Object

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 34 ...................... GetGlobalSlot <52> 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 a0 26 ba 01 ba 2e ....... Debug 

    # core/Array.es:186         			transform(modifier)

    0014: [0] 61 ......................... GetLocalSlot_0 
    0015: [1] 18 20 01 ................... CallThisSlot <slot: 32> <argc: 1> 
    0018: [0] 5a ......................... LoadNull 
    0019: [1] c5 ......................... ReturnValue 
    0020: [0] 33 a0 26 bb 01 d1 2e ....... Debug 

    # core/Array.es:187         		}
    

VARIABLE:   [forEach-00]  private var modifier : Function

VARIABLE:   [forEach-01]  private var thisObj : Object

FUNCTION:   [Array-16]  public native function indexOf(element: Object, startIndex: Number) : Number

     ARG:   [arg-00]   private element : Object
     ARG:   [arg-01]   private startIndex : Number

    

VARIABLE:   [indexOf-00]  private var element : Object

VARIABLE:   [indexOf-01]  private var startIndex : Number

FUNCTION:   [Array-17]  public native function insert(pos: Number, args: Array) : Array

     ARG:   [arg-00]   private pos : Number
     ARG:   [arg-01]   private args : Array

    

VARIABLE:   [insert-00]  private var pos : Number

VARIABLE:   [insert-01]  private var args : Array

FUNCTION:   [Array-18]  public native function join(sep: String) : String

     ARG:   [arg-00]   private sep : String

    

VARIABLE:   [join-00]  private var sep : String

FUNCTION:   [Array-19]  public native function lastIndexOf(element: Object, fromIndex: Number) : Number

     ARG:   [arg-00]   private element : Object
     ARG:   [arg-01]   private fromIndex : Number

    

VARIABLE:   [lastIndexOf-00]  private var element : Object

VARIABLE:   [lastIndexOf-01]  private var fromIndex : Number

FUNCTION:   [Array-20]  public set function set-length(value: Number) : Void

     ARG:   [arg-00]   private value : Number

    

VARIABLE:   [set-length-00]  private var value : Number

FUNCTION:   [Array-21]  public function map(mapper: Function) : Array

     ARG:   [arg-00]   private mapper : Function
   LOCAL:   [local-01] var result : Array

    0000: [0] 33 a0 26 99 02 fa 31 ....... Debug 

    # core/Array.es:281         			var result: Array  = clone()

    0007: [0] 18 00 00 ................... CallThisSlot <slot: 0> <argc: 0> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] 9b ......................... PutLocalSlot_1 
    0012: [0] 33 a0 26 9a 02 9a 32 ....... Debug 

    # core/Array.es:282         			result.transform(mapper)

    0019: [0] 62 ......................... GetLocalSlot_1 
    0020: [1] 61 ......................... GetLocalSlot_0 
    0021: [2] 17 20 01 ................... CallObjSlot <slot: 32> <argc: 1> 
    0024: [0] 33 a0 26 9b 02 a3 0f ....... Debug 

    # core/Array.es:283         			return result

    0031: [0] 62 ......................... GetLocalSlot_1 
    0032: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [map-00]  private var mapper : Function

VARIABLE:   [map-01]  private var result : Array

FUNCTION:   [Array-22]  public native function pop() : Object


    

FUNCTION:   [Array-23]  public native function push(items: Array) : Number

     ARG:   [arg-00]   private items : Array

    

VARIABLE:   [push-00]  private var items : Array

FUNCTION:   [Array-24]  public function reject(match: Function) : Array

     ARG:   [arg-00]   private match : Function
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i : Number

    0000: [0] 33 a0 26 bb 02 c5 2c ....... Debug 

    # core/Array.es:315         			var result: Array = new Array

    0007: [0] 83 07 ...................... GetGlobalSlot <7> 
    0009: [1] 8e ......................... New 
    0010: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0012: [1] 9b ......................... PutLocalSlot_1 
    0013: [0] 33 a0 26 bc 02 d7 2a ....... Debug 

    # core/Array.es:316         			for (let i: Number in this) {

    0020: [0] 5d ......................... LoadThis 
    0021: [1] 1d e9 02 ed 02 00 .......... CallObjName <get> <iterator> <argc: 0> 
    0027: [0] 99 ......................... PushResult 
    0028: [1] 3b ......................... Dup 
    0029: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0032: [1] 99 ......................... PushResult 
    0033: [2] 9c ......................... PutLocalSlot_2 
    0034: [1] 33 a0 26 bd 02 83 2b ....... Debug 

    # core/Array.es:317         				if (!match(this[i], i, this)) {

    0041: [1] 5d ......................... LoadThis 
    0042: [2] 63 ......................... GetLocalSlot_2 
    0043: [3] 81 ......................... GetObjNameExpr 
    0044: [2] 63 ......................... GetLocalSlot_2 
    0045: [3] 5d ......................... LoadThis 
    0046: [4] 19 00 00 03 ................ CallBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 99 ......................... PushResult 
    0051: [2] 8b ......................... LogicalNot 
    0052: [2] 12 10 ...................... BranchFalse.8 <addr: 70> 
    0054: [1] 33 a0 26 be 02 cf 2d ....... Debug 

    # core/Array.es:318         					result.append(this[i])

    0061: [1] 62 ......................... GetLocalSlot_1 
    0062: [2] 5d ......................... LoadThis 
    0063: [3] 63 ......................... GetLocalSlot_2 
    0064: [4] 81 ......................... GetObjNameExpr 
    0065: [3] 17 06 01 ................... CallObjSlot <slot: 6> <argc: 1> 
    0068: [1] 40 00 ...................... Goto.8 <addr: 70> 
    0070: [1] 40 d4 ...................... Goto.8 <addr: 28> 
    0072: [1] 96 ......................... Pop 
    0073: [0] 33 a0 26 c1 02 a3 0f ....... Debug 

    # core/Array.es:321         			return result

    0080: [0] 62 ......................... GetLocalSlot_1 
    0081: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     29      32         72           72       

VARIABLE:   [reject-00]  private var match : Function

VARIABLE:   [reject-01]  private var result : Array

VARIABLE:   [reject-02]  -hoisted-2 var i : Number

FUNCTION:   [Array-25]  public function remove(start: Number, end: Number) : Void

     ARG:   [arg-00]   private start : Number
     ARG:   [arg-01]   private end : Number

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 47 ......................... Load1 
    0005: [1] 8d ......................... Neg 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 a0 26 ce 02 89 34 ....... Debug 

    # core/Array.es:334         			if (start < 0) {

    0014: [0] 61 ......................... GetLocalSlot_0 
    0015: [1] 46 ......................... Load0 
    0016: [2] 2b ......................... CompareLT 
    0017: [1] 12 0f ...................... BranchFalse.8 <addr: 34> 
    0019: [0] 33 a0 26 cf 02 9d 34 ....... Debug 

    # core/Array.es:335         				start += length

    0026: [0] 61 ......................... GetLocalSlot_0 
    0027: [1] 88 03 01 ................... GetThisTypeSlot <slot: 3> <1> 
    0030: [2] 00 ......................... Add 
    0031: [1] 9a ......................... PutLocalSlot_0 
    0032: [0] 40 00 ...................... Goto.8 <addr: 34> 
    0034: [0] 33 a0 26 d1 02 b1 34 ....... Debug 

    # core/Array.es:337         			if (end < 0) {

    0041: [0] 62 ......................... GetLocalSlot_1 
    0042: [1] 46 ......................... Load0 
    0043: [2] 2b ......................... CompareLT 
    0044: [1] 12 0f ...................... BranchFalse.8 <addr: 61> 
    0046: [0] 33 a0 26 d2 02 c3 34 ....... Debug 

    # core/Array.es:338         				end += length

    0053: [0] 62 ......................... GetLocalSlot_1 
    0054: [1] 88 03 01 ................... GetThisTypeSlot <slot: 3> <1> 
    0057: [2] 00 ......................... Add 
    0058: [1] 9b ......................... PutLocalSlot_1 
    0059: [0] 40 00 ...................... Goto.8 <addr: 61> 
    0061: [0] 33 a0 26 d3 02 d5 34 ....... Debug 

    # core/Array.es:339         			}

    0068: [0] 33 a0 26 d4 02 da 34 ....... Debug 

    # core/Array.es:340         			splice(start, end - start + 1)

    0075: [0] 61 ......................... GetLocalSlot_0 
    0076: [1] 62 ......................... GetLocalSlot_1 
    0077: [2] 61 ......................... GetLocalSlot_0 
    0078: [3] c9 ......................... Sub 
    0079: [2] 47 ......................... Load1 
    0080: [3] 00 ......................... Add 
    0081: [2] 18 1f 02 ................... CallThisSlot <slot: 31> <argc: 2> 
    0084: [0] 5a ......................... LoadNull 
    0085: [1] c5 ......................... ReturnValue 
    0086: [0] 33 a0 26 d5 02 d1 2e ....... Debug 

    # core/Array.es:341         		}
    

VARIABLE:   [remove-00]  private var start : Number

VARIABLE:   [remove-01]  private var end : Number

FUNCTION:   [Array-26]  public native function reverse() : Array


    

FUNCTION:   [Array-27]  public native function shift() : Object


    

FUNCTION:   [Array-28]  public native function slice(start: Number, end: Number, step: Number) : Array

     ARG:   [arg-00]   private start : Number
     ARG:   [arg-01]   private end : Number
     ARG:   [arg-02]   private step : Number

    

VARIABLE:   [slice-00]  private var start : Number

VARIABLE:   [slice-01]  private var end : Number

VARIABLE:   [slice-02]  private var step : Number

FUNCTION:   [Array-29]  public function some(match: Function) : Boolean

     ARG:   [arg-00]   private match : Function
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i : Number

    0000: [0] 33 a0 26 84 03 c5 2c ....... Debug 

    # core/Array.es:388         			var result: Array = new Array

    0007: [0] 83 07 ...................... GetGlobalSlot <7> 
    0009: [1] 8e ......................... New 
    0010: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0012: [1] 9b ......................... PutLocalSlot_1 
    0013: [0] 33 a0 26 85 03 d7 2a ....... Debug 

    # core/Array.es:389         			for (let i: Number in this) {

    0020: [0] 5d ......................... LoadThis 
    0021: [1] 1d e9 02 ed 02 00 .......... CallObjName <get> <iterator> <argc: 0> 
    0027: [0] 99 ......................... PushResult 
    0028: [1] 3b ......................... Dup 
    0029: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0032: [1] 99 ......................... PushResult 
    0033: [2] 9c ......................... PutLocalSlot_2 
    0034: [1] 33 a0 26 86 03 e6 2c ....... Debug 

    # core/Array.es:390         				if (match(this[i], i, this)) {

    0041: [1] 5d ......................... LoadThis 
    0042: [2] 63 ......................... GetLocalSlot_2 
    0043: [3] 81 ......................... GetObjNameExpr 
    0044: [2] 63 ......................... GetLocalSlot_2 
    0045: [3] 5d ......................... LoadThis 
    0046: [4] 19 00 00 03 ................ CallBlockSlot <slot: 0> <0> <argc: 3> 
    0050: [1] 99 ......................... PushResult 
    0051: [2] 12 0c ...................... BranchFalse.8 <addr: 65> 
    0053: [1] 33 a0 26 87 03 c8 36 ....... Debug 

    # core/Array.es:391         					return true

    0060: [1] 83 39 ...................... GetGlobalSlot <57> 
    0062: [2] c5 ......................... ReturnValue 
    0063: [0] 40 00 ...................... Goto.8 <addr: 65> 
    0065: [0] 40 d9 ...................... Goto.8 <addr: 28> 
    0067: [0] 96 ......................... Pop 
    0068: [-1] 33 a0 26 8a 03 d9 36 ....... Debug 

    # core/Array.es:394         			return false

    0075: [-1] 83 32 ...................... GetGlobalSlot <50> 
    0077: [0] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     29      32         67           67       

VARIABLE:   [some-00]  private var match : Function

VARIABLE:   [some-01]  private var result : Array

VARIABLE:   [some-02]  -hoisted-2 var i : Number

FUNCTION:   [Array-30]  public native function sort(compare: Function, order: Number) : Array

     ARG:   [arg-00]   private compare : Function
     ARG:   [arg-01]   private order : Number

    

VARIABLE:   [sort-00]  private var compare : Function

VARIABLE:   [sort-01]  private var order : Number

FUNCTION:   [Array-31]  public native function splice(start: Number, deleteCount: Number, values: Array) : Array

     ARG:   [arg-00]   private start : Number
     ARG:   [arg-01]   private deleteCount : Number
     ARG:   [arg-02]   private values : Array

    

VARIABLE:   [splice-00]  private var start : Number

VARIABLE:   [splice-01]  private var deleteCount : Number

VARIABLE:   [splice-02]  private var values : Array

FUNCTION:   [Array-32]  public function transform(mapper: Function) : Void

     ARG:   [arg-00]   private mapper : Function
   LOCAL:   [local-01] var i : Number

    0000: [0] 33 a0 26 c2 03 d7 2a ....... Debug 

    # core/Array.es:450         			for (let i: Number in this) {

    0007: [0] 5d ......................... LoadThis 
    0008: [1] 1d e9 02 ed 02 00 .......... CallObjName <get> <iterator> <argc: 0> 
    0014: [0] 99 ......................... PushResult 
    0015: [1] 3b ......................... Dup 
    0016: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0019: [1] 99 ......................... PushResult 
    0020: [2] 9b ......................... PutLocalSlot_1 
    0021: [1] 33 a0 26 c3 03 9b 39 ....... Debug 

    # core/Array.es:451         				this[i] = mapper(this[i], i, this);

    0028: [1] 5d ......................... LoadThis 
    0029: [2] 62 ......................... GetLocalSlot_1 
    0030: [3] 81 ......................... GetObjNameExpr 
    0031: [2] 62 ......................... GetLocalSlot_1 
    0032: [3] 5d ......................... LoadThis 
    0033: [4] 19 00 00 03 ................ CallBlockSlot <slot: 0> <0> <argc: 3> 
    0037: [1] 99 ......................... PushResult 
    0038: [2] 5d ......................... LoadThis 
    0039: [3] 62 ......................... GetLocalSlot_1 
    0040: [4] b8 ......................... PutObjNameExpr 
    0041: [1] 40 e4 ...................... Goto.8 <addr: 15> 
    0043: [1] 96 ......................... Pop 
    0044: [0] 5a ......................... LoadNull 
    0045: [1] c5 ......................... ReturnValue 
    0046: [0] 33 a0 26 c5 03 d1 2e ....... Debug 

    # core/Array.es:453         		}
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     16      19         43           43       

VARIABLE:   [transform-00]  private var mapper : Function

VARIABLE:   [transform-01]  -hoisted-1 var i : Number

FUNCTION:   [Array-33]  public native function unique() : Array


    

FUNCTION:   [Array-34]  public function unshift(items: Array) : Object

     ARG:   [arg-00]   private items : Array

    0000: [0] 33 a0 26 d8 03 9d 3a ....... Debug 

    # core/Array.es:472         			return insert(0, items)

    0007: [0] 46 ......................... Load0 
    0008: [1] 61 ......................... GetLocalSlot_0 
    0009: [2] 18 11 02 ................... CallThisSlot <slot: 17> <argc: 2> 
    0012: [0] 99 ......................... PushResult 
    0013: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [unshift-00]  private var items : Array

CLASS:      final class Block extends Object
            #  Class Details: 0 class traits, 0 instance traits, requested slot 8

CLASS:      class Stream
            #  Class Details: 4 class traits, 0 instance traits, requested slot 33

FUNCTION:   [Stream-00]  public function close(graceful: Boolean) : Void

     ARG:   [arg-00]   private graceful : Boolean

    

VARIABLE:   [close-00]  private var graceful : Boolean

FUNCTION:   [Stream-01]  public function flush() : Void


    

FUNCTION:   [Stream-02]  public function read(buffer, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number

    

VARIABLE:   [read-00]  private var buffer

VARIABLE:   [read-01]  private var offset : Number

VARIABLE:   [read-02]  private var count : Number

FUNCTION:   [Stream-03]  public function write(data: Array) : Number

     ARG:   [arg-00]   private data : Array

    

VARIABLE:   [write-00]  private var data : Array

CLASS:      final class ByteArray extends Object
            #  Class Details: 42 class traits, 0 instance traits, requested slot 9

FUNCTION:   [ByteArray-01]  iterator override function get(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [ByteArray-02]  iterator override function getValues(deep: Boolean) : void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

FUNCTION:   [ByteArray-03]  public get function length() : Number


    

FUNCTION:   [ByteArray-04]  public override function toString(locale: String) : String

     ARG:   [arg-00]   private locale : String

    

VARIABLE:   [toString-00]  private var locale : String

FUNCTION:   [ByteArray-05]  -constructor- native function ByteArray(size: Number, growable: Boolean) : void

     ARG:   [arg-00]   private size : Number
     ARG:   [arg-01]   private growable : Boolean

    

VARIABLE:   [ByteArray-00]  private var size : Number

VARIABLE:   [ByteArray-01]  private var growable : Boolean

FUNCTION:   [ByteArray-06]  -initializer- function ByteArray-initializer() : Void


    0000: [0] 33 91 3b 27 82 01 .......... Debug 

    # core/ByteArray.es:39              use default namespace public

    0006: [0] 83 23 ...................... GetGlobalSlot <35> 
    0008: [1] 02 ......................... AddNamespaceRef 
    0009: [0] 33 91 3b 2c ec 3b .......... Debug 

    # core/ByteArray.es:44      		static const LittleEndian: Number 	= 0

    0015: [0] 46 ......................... Load0 
    0016: [1] 83 09 ...................... GetGlobalSlot <9> 
    0018: [2] ab ......................... PutObjSlot_7 
    0019: [0] 33 91 3b 2d a2 3c .......... Debug 

    # core/ByteArray.es:45      		static const BigEndian: Number 		= 1

    0025: [0] 47 ......................... Load1 
    0026: [1] 83 09 ...................... GetGlobalSlot <9> 
    0028: [2] ac ......................... PutObjSlot_8 
    0029: [0] 33 91 3b 36 d3 3c .......... Debug 

    # core/ByteArray.es:54      		native function ByteArray(size: Number = -1, growable: Boolean = false)

    0035: [0] 33 91 3b 3d b5 3d .......... Debug 

    # core/ByteArray.es:61      		native function get available(): Number 

    0041: [0] 33 91 3b 43 ea 3d .......... Debug 

    # core/ByteArray.es:67      		function close(graceful: Boolean = false): Void

    0047: [0] 33 91 3b 56 bf 3e .......... Debug 

    # core/ByteArray.es:86              native function copyIn(destOffset: Number, src: ByteArray, srcOffset: Number = 0, count: Number = -1): Void

    0053: [0] 33 91 3b 61 d9 3f .......... Debug 

    # core/ByteArray.es:97      		native function copyOut(srcOffset: Number, dest: ByteArray, destOffset: Number = 0, count: Number = -1): Number

    0059: [0] 33 91 3b 68 d8 40 .......... Debug 

    # core/ByteArray.es:104     		native function get endian(): Number

    0065: [0] 33 91 3b 6f 86 41 .......... Debug 

    # core/ByteArray.es:111     		native function set endian(value: Number): Void

    0071: [0] 33 91 3b 76 c3 41 .......... Debug 

    # core/ByteArray.es:118     		native function flush(): Void

    0077: [0] 33 91 3b 80 01 d1 06 ....... Debug 

    # core/ByteArray.es:128     		override iterator native function get(deep: Boolean = false): Iterator

    0084: [0] 33 91 3b 89 01 9a 07 ....... Debug 

    # core/ByteArray.es:137     		override iterator native function getValues(deep: Boolean = false): Iterator

    0091: [0] 33 91 3b 91 01 e9 41 ....... Debug 

    # core/ByteArray.es:145     		native function set input(value: Function): Void

    0098: [0] 33 91 3b 93 01 a6 42 ....... Debug 

    # core/ByteArray.es:147     		native function get input(): Function

    0105: [0] 33 91 3b 9a 01 97 18 ....... Debug 

    # core/ByteArray.es:154     		override native function get length(): Number

    0112: [0] 33 91 3b a2 01 d4 42 ....... Debug 

    # core/ByteArray.es:162     		native function set output(callback: Function): Void

    0119: [0] 33 91 3b a4 01 9f 43 ....... Debug 

    # core/ByteArray.es:164     		native function get output(): Function

    0126: [0] 33 91 3b b0 01 cf 43 ....... Debug 

    # core/ByteArray.es:176     		native function read(buffer: ByteArray, offset: Number = -1, count: Number = -1): Number

    0133: [0] 33 91 3b b8 01 bd 44 ....... Debug 

    # core/ByteArray.es:184     		native function readBoolean(): Boolean

    0140: [0] 33 91 3b c0 01 f2 44 ....... Debug 

    # core/ByteArray.es:192     		native function readByte(): Number

    0147: [0] 33 91 3b c8 01 a0 45 ....... Debug 

    # core/ByteArray.es:200     		native function readDate(): Date

    0154: [0] 33 91 3b d1 01 d1 45 ....... Debug 

    # core/ByteArray.es:209     		native function readDouble(): Date

    0161: [0] 33 91 3b da 01 81 46 ....... Debug 

    # core/ByteArray.es:218     		native function readInteger(): Number

    0168: [0] 33 91 3b e3 01 b5 46 ....... Debug 

    # core/ByteArray.es:227     		native function readLong(): Number

    0175: [0] 33 91 3b ea 01 e3 46 ....... Debug 

    # core/ByteArray.es:234     		native function get readPosition(): Number

    0182: [0] 33 91 3b f1 01 9d 47 ....... Debug 

    # core/ByteArray.es:241     		native function set readPosition(position: Number): Void

    0189: [0] 33 91 3b fa 01 f2 47 ....... Debug 

    # core/ByteArray.es:250     		native function readShort(): Number

    0196: [0] 33 91 3b 84 02 a2 48 ....... Debug 

    # core/ByteArray.es:260     		native function readString(count: Number = -1): String

    0203: [0] 33 91 3b 8c 02 e6 48 ....... Debug 

    # core/ByteArray.es:268     		native function readXML(): XML

    0210: [0] 33 91 3b 92 02 93 49 ....... Debug 

    # core/ByteArray.es:274             native function reset(): Void

    0217: [0] 33 91 3b 99 02 bf 49 ....... Debug 

    # core/ByteArray.es:281     		native function get room(): Number 

    0224: [0] 33 91 3b a1 02 a8 38 ....... Debug 

    # core/ByteArray.es:289     		override native function toString(locale: String = null): String 

    0231: [0] 33 91 3b b3 02 ea 49 ....... Debug 

    # core/ByteArray.es:307     		native function write(...data): Number

    0238: [0] 33 91 3b ba 02 9e 4a ....... Debug 

    # core/ByteArray.es:314     		native function writeByte(data: Number): Void

    0245: [0] 33 91 3b c1 02 d8 4a ....... Debug 

    # core/ByteArray.es:321     		native function writeShort(data: Number): Void

    0252: [0] 33 91 3b c8 02 94 4b ....... Debug 

    # core/ByteArray.es:328     		native function writeDouble(data: Number): Void

    0259: [0] 33 91 3b cf 02 d2 4b ....... Debug 

    # core/ByteArray.es:335     		native function writeInteger(data: Number): Void

    0266: [0] 33 91 3b d7 02 92 4c ....... Debug 

    # core/ByteArray.es:343     		native function writeLong(data: Number): Void

    0273: [0] 33 91 3b de 02 cc 4c ....... Debug 

    # core/ByteArray.es:350     		native function get writePosition(): Number

    0280: [0] 33 91 3b e5 02 88 4d ....... Debug 

    # core/ByteArray.es:357     		native function set writePosition(position: Number): Void

    0287: [0] c4 ......................... Return 
    

VARIABLE:   [ByteArray-07]  public static var LittleEndian : Number

VARIABLE:   [ByteArray-08]  public static var BigEndian : Number

FUNCTION:   [ByteArray-09]  public get function available() : Number


    

FUNCTION:   [ByteArray-10]  public function close(graceful: Boolean) : Void

     ARG:   [arg-00]   private graceful : Boolean

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 32 ...................... GetGlobalSlot <50> 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 91 3b 44 9c 3e .......... Debug 

    # core/ByteArray.es:68                  flush()

    0013: [0] 18 0f 00 ................... CallThisSlot <slot: 15> <argc: 0> 
    0016: [0] 99 ......................... PushResult 
    0017: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [close-00]  private var graceful : Boolean

FUNCTION:   [ByteArray-11]  public native function copyIn(destOffset: Number, src: ByteArray, srcOffset: Number, count: Number) : Void

     ARG:   [arg-00]   private destOffset : Number
     ARG:   [arg-01]   private src : ByteArray
     ARG:   [arg-02]   private srcOffset : Number
     ARG:   [arg-03]   private count : Number

    

VARIABLE:   [copyIn-00]  private var destOffset : Number

VARIABLE:   [copyIn-01]  private var src : ByteArray

VARIABLE:   [copyIn-02]  private var srcOffset : Number

VARIABLE:   [copyIn-03]  private var count : Number

FUNCTION:   [ByteArray-12]  public native function copyOut(srcOffset: Number, dest: ByteArray, destOffset: Number, count: Number) : Number

     ARG:   [arg-00]   private srcOffset : Number
     ARG:   [arg-01]   private dest : ByteArray
     ARG:   [arg-02]   private destOffset : Number
     ARG:   [arg-03]   private count : Number

    

VARIABLE:   [copyOut-00]  private var srcOffset : Number

VARIABLE:   [copyOut-01]  private var dest : ByteArray

VARIABLE:   [copyOut-02]  private var destOffset : Number

VARIABLE:   [copyOut-03]  private var count : Number

FUNCTION:   [ByteArray-13]  public get function endian() : Number


    

FUNCTION:   [ByteArray-14]  public set function set-endian(value: Number) : Void

     ARG:   [arg-00]   private value : Number

    

VARIABLE:   [set-endian-00]  private var value : Number

FUNCTION:   [ByteArray-15]  public native function flush() : Void


    

FUNCTION:   [ByteArray-16]  public set function set-input(value: Function) : Void

     ARG:   [arg-00]   private value : Function

    

VARIABLE:   [set-input-00]  private var value : Function

FUNCTION:   [ByteArray-17]  public get function input() : Function


    

FUNCTION:   [ByteArray-18]  public set function set-output(callback: Function) : Void

     ARG:   [arg-00]   private callback : Function

    

VARIABLE:   [set-output-00]  private var callback : Function

FUNCTION:   [ByteArray-19]  public get function output() : Function


    

FUNCTION:   [ByteArray-20]  public native function read(buffer: ByteArray, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number

    

VARIABLE:   [read-00]  private var buffer : ByteArray

VARIABLE:   [read-01]  private var offset : Number

VARIABLE:   [read-02]  private var count : Number

FUNCTION:   [ByteArray-21]  public native function readBoolean() : Boolean


    

FUNCTION:   [ByteArray-22]  public native function readByte() : Number


    

FUNCTION:   [ByteArray-23]  public native function readDate() : void


    

FUNCTION:   [ByteArray-24]  public native function readDouble() : void


    

FUNCTION:   [ByteArray-25]  public native function readInteger() : Number


    

FUNCTION:   [ByteArray-26]  public native function readLong() : Number


    

FUNCTION:   [ByteArray-27]  public get function readPosition() : Number


    

FUNCTION:   [ByteArray-28]  public set function set-readPosition(position: Number) : Void

     ARG:   [arg-00]   private position : Number

    

VARIABLE:   [set-readPosition-00]  private var position : Number

FUNCTION:   [ByteArray-29]  public native function readShort() : Number


    

FUNCTION:   [ByteArray-30]  public native function readString(count: Number) : String

     ARG:   [arg-00]   private count : Number

    

VARIABLE:   [readString-00]  private var count : Number

FUNCTION:   [ByteArray-31]  public native function readXML() : void


    

FUNCTION:   [ByteArray-32]  public native function reset() : Void


    

FUNCTION:   [ByteArray-33]  public get function room() : Number


    

FUNCTION:   [ByteArray-34]  public native function write(data: Array) : Number

     ARG:   [arg-00]   private data : Array

    

VARIABLE:   [write-00]  private var data : Array

FUNCTION:   [ByteArray-35]  public native function writeByte(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    

VARIABLE:   [writeByte-00]  private var data : Number

FUNCTION:   [ByteArray-36]  public native function writeShort(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    

VARIABLE:   [writeShort-00]  private var data : Number

FUNCTION:   [ByteArray-37]  public native function writeDouble(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    

VARIABLE:   [writeDouble-00]  private var data : Number

FUNCTION:   [ByteArray-38]  public native function writeInteger(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    

VARIABLE:   [writeInteger-00]  private var data : Number

FUNCTION:   [ByteArray-39]  public native function writeLong(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    

VARIABLE:   [writeLong-00]  private var data : Number

FUNCTION:   [ByteArray-40]  public get function writePosition() : Number


    

FUNCTION:   [ByteArray-41]  public set function set-writePosition(position: Number) : Void

     ARG:   [arg-00]   private position : Number

    

VARIABLE:   [set-writePosition-00]  private var position : Number

CLASS:      final class Date extends Object
            #  Class Details: 30 class traits, 0 instance traits, requested slot 10

FUNCTION:   [Date-04]  public override function toString(locale: String) : String

     ARG:   [arg-00]   private locale : String

    

VARIABLE:   [toString-00]  private var locale : String

FUNCTION:   [Date-05]  -constructor- native function Date(args: Array) : void

     ARG:   [arg-00]   private args : Array

    

VARIABLE:   [Date-00]  private var args : Array

FUNCTION:   [Date-06]  public get function day() : Number


    

FUNCTION:   [Date-07]  public get function dayOfYear() : Number


    

FUNCTION:   [Date-08]  public get function date() : Number


    

FUNCTION:   [Date-09]  public get function elapsed() : Number


    

FUNCTION:   [Date-10]  public get function fullYear() : Number


    

FUNCTION:   [Date-11]  public set function set-fullYear(year: Number) : Void

     ARG:   [arg-00]   private year : Number

    

VARIABLE:   [set-fullYear-00]  private var year : Number

FUNCTION:   [Date-12]  public native function format(layout: String) : String

     ARG:   [arg-00]   private layout : String

    

VARIABLE:   [format-00]  private var layout : String

FUNCTION:   [Date-13]  public get function hours() : Number


    

FUNCTION:   [Date-14]  public set function set-hours(hour: Number) : Void

     ARG:   [arg-00]   private hour : Number

    

VARIABLE:   [set-hours-00]  private var hour : Number

FUNCTION:   [Date-15]  public get function milliseconds() : Number


    

FUNCTION:   [Date-16]  public set function set-milliseconds(ms: Number) : Void

     ARG:   [arg-00]   private ms : Number

    

VARIABLE:   [set-milliseconds-00]  private var ms : Number

FUNCTION:   [Date-17]  public get function minutes() : Number


    

FUNCTION:   [Date-18]  public set function set-minutes(min: Number) : Void

     ARG:   [arg-00]   private min : Number

    

VARIABLE:   [set-minutes-00]  private var min : Number

FUNCTION:   [Date-19]  public get function month() : Number


    

FUNCTION:   [Date-20]  public set function set-month(month: Number) : Void

     ARG:   [arg-00]   private month : Number

    

VARIABLE:   [set-month-00]  private var month : Number

FUNCTION:   [Date-21]  public native function nextDay(inc: Number) : Date

     ARG:   [arg-00]   private inc : Number

    

VARIABLE:   [nextDay-00]  private var inc : Number

FUNCTION:   [Date-22]  public static function now() : Number


    

FUNCTION:   [Date-23]  public static function parseDate(arg: String, defaultDate: Date) : Date

     ARG:   [arg-00]   private arg : String
     ARG:   [arg-01]   private defaultDate : Date

    

VARIABLE:   [parseDate-00]  private var arg : String

VARIABLE:   [parseDate-01]  private var defaultDate : Date

FUNCTION:   [Date-24]  public get function seconds() : Number


    

FUNCTION:   [Date-25]  public set function set-seconds(sec: Number) : Void

     ARG:   [arg-00]   private sec : Number

    

VARIABLE:   [set-seconds-00]  private var sec : Number

FUNCTION:   [Date-26]  public get function time() : Number


    

FUNCTION:   [Date-27]  public set function set-time(value: Number) : Number

     ARG:   [arg-00]   private value : Number

    

VARIABLE:   [set-time-00]  private var value : Number

FUNCTION:   [Date-28]  public get function year() : Number


    

FUNCTION:   [Date-29]  public set function set-year(year: Number) : Void

     ARG:   [arg-00]   private year : Number

    

VARIABLE:   [set-year-00]  private var year : Number

CLASS:      dynamic class Error extends Object
            #  Class Details: 8 class traits, 2 instance traits, requested slot 15

FUNCTION:   [Error-05]  -constructor- native function Error(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [Error-00]  private var message : String

FUNCTION:   [Error-06]  internal-11 get function code() : Number


    

FUNCTION:   [Error-07]  internal-11 set function set-code(value: Number) : Void

     ARG:   [arg-00]   private value : Number

    

VARIABLE:   [set-code-00]  private var value : Number

VARIABLE:   [ErrorInstanceType-00]  internal-11 native var message : String

VARIABLE:   [ErrorInstanceType-01]  internal-11 native var stack : String

CLASS:      dynamic class ArgError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 11

FUNCTION:   [ArgError-08]  -constructor- native function ArgError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [ArgError-00]  private var message : String

CLASS:      dynamic class ArithmeticError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 12

FUNCTION:   [ArithmeticError-08]  -constructor- native function ArithmeticError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [ArithmeticError-00]  private var message : String

CLASS:      dynamic class AssertError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 13

FUNCTION:   [AssertError-08]  -constructor- native function AssertError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [AssertError-00]  private var message : String

CLASS:      dynamic class InstructionError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 14

FUNCTION:   [InstructionError-08]  -constructor- native function InstructionError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [InstructionError-00]  private var message : String

CLASS:      dynamic class IOError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 16

FUNCTION:   [IOError-08]  -constructor- native function IOError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [IOError-00]  private var message : String

CLASS:      dynamic class InternalError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 17

FUNCTION:   [InternalError-08]  -constructor- native function InternalError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [InternalError-00]  private var message : String

CLASS:      dynamic class MemoryError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 18

FUNCTION:   [MemoryError-08]  -constructor- native function MemoryError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [MemoryError-00]  private var message : String

CLASS:      dynamic class OutOfBoundsError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 19

FUNCTION:   [OutOfBoundsError-08]  -constructor- native function OutOfBoundsError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [OutOfBoundsError-00]  private var message : String

CLASS:      dynamic class ReferenceError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 20

FUNCTION:   [ReferenceError-08]  -constructor- native function ReferenceError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [ReferenceError-00]  private var message : String

CLASS:      dynamic class ResourceError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 21

FUNCTION:   [ResourceError-08]  -constructor- native function ResourceError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [ResourceError-00]  private var message : String

CLASS:      dynamic class StateError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 22

FUNCTION:   [StateError-08]  -constructor- native function StateError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [StateError-00]  private var message : String

CLASS:      dynamic class SyntaxError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 23

FUNCTION:   [SyntaxError-08]  -constructor- native function SyntaxError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [SyntaxError-00]  private var message : String

CLASS:      dynamic class TypeError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 24

FUNCTION:   [TypeError-08]  -constructor- native function TypeError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [TypeError-00]  private var message : String

CLASS:      dynamic class URIError extends Error
            #  Class Details: 9 class traits, 0 instance traits, requested slot 25

FUNCTION:   [URIError-08]  -constructor- native function URIError(message: String) : void

     ARG:   [arg-00]   private message : String

    

VARIABLE:   [URIError-00]  private var message : String

CLASS:      final class Iterator extends Object
            #  Class Details: 6 class traits, 0 instance traits, requested slot 27

FUNCTION:   [Iterator-05]  public native function next() : Object


    

CLASS:      final class JSON extends Object
            #  Class Details: 7 class traits, 0 instance traits, requested slot 28

FUNCTION:   [JSON-05]  public static function parse(data: String, filter: Function) : Object

     ARG:   [arg-00]   private data : String
     ARG:   [arg-01]   private filter : Function

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 34 ...................... GetGlobalSlot <52> 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 f2 69 19 e8 6a .......... Debug 

    # core/JSON.es:25                       return deserialize(data)

    0013: [0] 61 ......................... GetLocalSlot_0 
    0014: [1] 16 3f 01 ................... CallGlobalSlot <slot: 63> <argc: 1> 
    0017: [0] 99 ......................... PushResult 
    0018: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [parse-00]  private var data : String

VARIABLE:   [parse-01]  private var filter : Function

FUNCTION:   [JSON-06]  public static function stringify(obj: Object, replacer: Object, indent: Number) : String

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private replacer : Object
     ARG:   [arg-02]   private indent : Number

    0000: [0] 43 03 03 06 08 ............. InitDefaultArgs.8 <3> <5> <8> <10> 
    0005: [0] 83 34 ...................... GetGlobalSlot <52> 
    0007: [1] 9b ......................... PutLocalSlot_1 
    0008: [0] 46 ......................... Load0 
    0009: [1] 9c ......................... PutLocalSlot_2 
    0010: [0] 33 f2 69 28 f3 6b .......... Debug 

    # core/JSON.es:40                       return serialize(obj)

    0016: [0] 61 ......................... GetLocalSlot_0 
    0017: [1] 16 48 01 ................... CallGlobalSlot <slot: 72> <argc: 1> 
    0020: [0] 99 ......................... PushResult 
    0021: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [stringify-00]  private var obj : Object

VARIABLE:   [stringify-01]  private var replacer : Object

VARIABLE:   [stringify-02]  private var indent : Number

CLASS:      final class Namespace extends Object
            #  Class Details: 0 class traits, 2 instance traits, requested slot 29

VARIABLE:   [NamespaceInstanceType-00]  public native var name : String

VARIABLE:   [NamespaceInstanceType-01]  public native var uri : String

CLASS:      final class Reflect extends Object
            #  Class Details: 9 class traits, 1 instance traits, requested slot 30

FUNCTION:   [Reflect-05]  -constructor- native function Reflect(o: Object) : void

     ARG:   [arg-00]   private o : Object

    

VARIABLE:   [Reflect-00]  private var o : Object

FUNCTION:   [Reflect-06]  public get function name() : String


    

FUNCTION:   [Reflect-07]  public get function type() : void


    

FUNCTION:   [Reflect-08]  public get function typeName() : String


    

VARIABLE:   [ReflectInstanceType-00]  [intrinsic::Reflect,private] native var obj : Object

FUNCTION:   [global-31]  intrinsic function typeOf(o) : String

     ARG:   [arg-00]   private o

    0000: [0] 33 a2 6e 43 8f 71 .......... Debug 

    # core/Reflect.es:67                return Reflect(o).typeName()

    0006: [0] 61 ......................... GetLocalSlot_0 
    0007: [1] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] 17 08 00 ................... CallObjSlot <slot: 8> <argc: 0> 
    0014: [0] 99 ......................... PushResult 
    0015: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [typeOf-00]  private var o

CLASS:      final class RegExp extends Object
            #  Class Details: 19 class traits, 0 instance traits, requested slot 32

FUNCTION:   [RegExp-04]  public override function toString(locale: String) : String

     ARG:   [arg-00]   private locale : String

    

VARIABLE:   [toString-00]  private var locale : String

FUNCTION:   [RegExp-05]  -constructor- native function RegExp(pattern: String, flags: String) : void

     ARG:   [arg-00]   private pattern : String
     ARG:   [arg-01]   private flags : String

    

VARIABLE:   [RegExp-00]  private var pattern : String

VARIABLE:   [RegExp-01]  private var flags : String

FUNCTION:   [RegExp-06]  public get function lastIndex() : Number


    

FUNCTION:   [RegExp-07]  public set function set-lastIndex(value: Number) : Void

     ARG:   [arg-00]   private value : Number

    

VARIABLE:   [set-lastIndex-00]  private var value : Number

FUNCTION:   [RegExp-08]  public native function exec(str: String, start: Number) : Array

     ARG:   [arg-00]   private str : String
     ARG:   [arg-01]   private start : Number

    

VARIABLE:   [exec-00]  private var str : String

VARIABLE:   [exec-01]  private var start : Number

FUNCTION:   [RegExp-09]  public get function global() : Boolean


    

FUNCTION:   [RegExp-10]  public get function ignoreCase() : Boolean


    

FUNCTION:   [RegExp-11]  public get function multiline() : Boolean


    

FUNCTION:   [RegExp-12]  public get function source() : String


    

FUNCTION:   [RegExp-13]  public get function matched() : String


    

FUNCTION:   [RegExp-14]  public function replace(str: String, replacement: Object) : String

     ARG:   [arg-00]   private str : String
     ARG:   [arg-01]   private replacement : Object

    0000: [0] 33 c9 71 8d 01 b9 76 ....... Debug 

    # core/RegExp.es:141                    return str(this, replacement)

    0007: [0] 5d ......................... LoadThis 
    0008: [1] 62 ......................... GetLocalSlot_1 
    0009: [2] 19 00 00 02 ................ CallBlockSlot <slot: 0> <0> <argc: 2> 
    0013: [0] 99 ......................... PushResult 
    0014: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [replace-00]  private var str : String

VARIABLE:   [replace-01]  private var replacement : Object

FUNCTION:   [RegExp-15]  public function split(target: String) : Array

     ARG:   [arg-00]   private target : String

    0000: [0] 33 c9 71 98 01 8d 77 ....... Debug 

    # core/RegExp.es:152                    return target.split(this)

    0007: [0] 61 ......................... GetLocalSlot_0 
    0008: [1] 5d ......................... LoadThis 
    0009: [2] 17 1f 01 ................... CallObjSlot <slot: 31> <argc: 1> 
    0012: [0] 99 ......................... PushResult 
    0013: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [split-00]  private var target : String

FUNCTION:   [RegExp-16]  public get function start() : Number


    

FUNCTION:   [RegExp-17]  public get function sticky() : Boolean


    

FUNCTION:   [RegExp-18]  public native function test(str: String) : Boolean

     ARG:   [arg-00]   private str : String

    

VARIABLE:   [test-00]  private var str : String

CLASS:      final class Type extends Object
            #  Class Details: 0 class traits, 0 instance traits, requested slot 34

VARIABLE:   [global-35]  public var public : Namespace

VARIABLE:   [global-36]  public var internal : Namespace

VARIABLE:   [global-37]  public var intrinsic : Namespace

VARIABLE:   [global-38]  public var iterator : Namespace

VARIABLE:   [global-39]  public var CONFIG : Namespace

VARIABLE:   [global-40]  intrinsic const var TODO : Boolean

VARIABLE:   [global-41]  intrinsic const var FUTURE : Boolean

VARIABLE:   [global-42]  intrinsic const var ASC : Boolean

VARIABLE:   [global-43]  intrinsic const var DOC_ONLY : Boolean

VARIABLE:   [global-44]  intrinsic const var DEPRECATED : Boolean

VARIABLE:   [global-45]  intrinsic const var REGEXP : Boolean

VARIABLE:   [global-46]  intrinsic const var boolean : Type

VARIABLE:   [global-47]  intrinsic const var double : Type

VARIABLE:   [global-48]  intrinsic const var num : Type

VARIABLE:   [global-49]  intrinsic const var string : Type

VARIABLE:   [global-50]  intrinsic const var false : Boolean

VARIABLE:   [global-51]  intrinsic native var global : Object

VARIABLE:   [global-52]  intrinsic const var null : Null

VARIABLE:   [global-53]  intrinsic const var Infinity : Number

VARIABLE:   [global-54]  intrinsic const var NegativeInfinity : Number

VARIABLE:   [global-55]  intrinsic const var NaN : Number

CLASS:      final class StopIteration extends Object
            #  Class Details: 0 class traits, 0 instance traits, requested slot 56

VARIABLE:   [global-57]  intrinsic const var true : Boolean

VARIABLE:   [global-58]  intrinsic const var undefined : Void

VARIABLE:   [global-59]  intrinsic const var void : Type

FUNCTION:   [global-60]  intrinsic native function assert(condition: Boolean) : Boolean

     ARG:   [arg-00]   private condition : Boolean

    

VARIABLE:   [assert-00]  private var condition : Boolean

FUNCTION:   [global-61]  intrinsic native function breakpoint() : Void


    

FUNCTION:   [global-62]  intrinsic native function cloneBase(klass: Type) : Void

     ARG:   [arg-00]   private klass : Type

    

VARIABLE:   [cloneBase-00]  private var klass : Type

FUNCTION:   [global-63]  intrinsic native function deserialize(obj: String) : Object

     ARG:   [arg-00]   private obj : String

    

VARIABLE:   [deserialize-00]  private var obj : String

FUNCTION:   [global-64]  intrinsic function dump(args: Array) : Void

     ARG:   [arg-00]   private args : Array
   LOCAL:   [local-01] var e : Object

    0000: [0] 33 f4 79 fe 01 f7 83 01 .... Debug 

    # core/Global.es:254        		for each (var e: Object in args) {

    0008: [0] 61 ......................... GetLocalSlot_0 
    0009: [1] 17 02 00 ................... CallObjSlot <slot: 2> <argc: 0> 
    0012: [0] 99 ......................... PushResult 
    0013: [1] 3b ......................... Dup 
    0014: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0017: [1] 99 ......................... PushResult 
    0018: [2] 9b ......................... PutLocalSlot_1 
    0019: [1] 33 f4 79 ff 01 9e 84 01 .... Debug 

    # core/Global.es:255        			print(serialize(e))

    0027: [1] 62 ......................... GetLocalSlot_1 
    0028: [2] 16 48 01 ................... CallGlobalSlot <slot: 72> <argc: 1> 
    0031: [1] 99 ......................... PushResult 
    0032: [2] 16 45 01 ................... CallGlobalSlot <slot: 69> <argc: 1> 
    0035: [1] 40 e8 ...................... Goto.8 <addr: 13> 
    0037: [1] 96 ......................... Pop 
    0038: [0] 5a ......................... LoadNull 
    0039: [1] c5 ......................... ReturnValue 
    0040: [0] 33 f4 79 81 02 b5 84 01 .... Debug 

    # core/Global.es:257        	}
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     14      17         37           37       StopIteration

VARIABLE:   [dump-00]  private var args : Array

VARIABLE:   [dump-01]  private var e : Object

FUNCTION:   [global-65]  intrinsic native function eprint(args: Array) : Void

     ARG:   [arg-00]   private args : Array

    

VARIABLE:   [eprint-00]  private var args : Array

FUNCTION:   [global-66]  intrinsic native function formatStack() : String


    

FUNCTION:   [global-67]  intrinsic native function hashcode(o: Object) : Number

     ARG:   [arg-00]   private o : Object

    

VARIABLE:   [hashcode-00]  private var o : Object

FUNCTION:   [global-68]  intrinsic native function load(file: String) : Void

     ARG:   [arg-00]   private file : String

    

VARIABLE:   [load-00]  private var file : String

FUNCTION:   [global-69]  intrinsic native function print(args: Array) : Void

     ARG:   [arg-00]   private args : Array

    

VARIABLE:   [print-00]  private var args : Array

FUNCTION:   [global-70]  intrinsic native function printv(args: Array) : Void

     ARG:   [arg-00]   private args : Array

    

VARIABLE:   [printv-00]  private var args : Array

FUNCTION:   [global-71]  intrinsic native function parse(input: String, preferredType: Type) : Object

     ARG:   [arg-00]   private input : String
     ARG:   [arg-01]   private preferredType : Type

    

VARIABLE:   [parse-00]  private var input : String

VARIABLE:   [parse-01]  private var preferredType : Type

FUNCTION:   [global-72]  intrinsic native function serialize(obj: Object, maxDepth: Number, all: Boolean, base: Boolean) : String

     ARG:   [arg-00]   private obj : Object
     ARG:   [arg-01]   private maxDepth : Number
     ARG:   [arg-02]   private all : Boolean
     ARG:   [arg-03]   private base : Boolean

    

VARIABLE:   [serialize-00]  private var obj : Object

VARIABLE:   [serialize-01]  private var maxDepth : Number

VARIABLE:   [serialize-02]  private var all : Boolean

VARIABLE:   [serialize-03]  private var base : Boolean

FUNCTION:   [global-73]  intrinsic function printHash(name: String, o: Object) : Void

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private o : Object

    0000: [0] 33 f4 79 89 03 84 89 01 .... Debug 

    # core/Global.es:393                print("%20s %X" % [name, hashcode(o)])

    0008: [0] 5c b3 89 01 ................ LoadString <%20s %X> 
    0012: [1] 83 07 ...................... GetGlobalSlot <7> 
    0014: [2] 8e ......................... New 
    0015: [2] 3b ......................... Dup 
    0016: [3] 61 ......................... GetLocalSlot_0 
    0017: [4] cb ......................... Swap 
    0018: [4] 46 ......................... Load0 
    0019: [5] b8 ......................... PutObjNameExpr 
    0020: [2] 3b ......................... Dup 
    0021: [3] 62 ......................... GetLocalSlot_1 
    0022: [4] 16 43 01 ................... CallGlobalSlot <slot: 67> <argc: 1> 
    0025: [3] 99 ......................... PushResult 
    0026: [4] cb ......................... Swap 
    0027: [4] 47 ......................... Load1 
    0028: [5] b8 ......................... PutObjNameExpr 
    0029: [2] c3 ......................... Rem 
    0030: [1] 16 45 01 ................... CallGlobalSlot <slot: 69> <argc: 1> 
    0033: [0] 5a ......................... LoadNull 
    0034: [1] c5 ......................... ReturnValue 
    0035: [0] 33 f4 79 8a 03 bb 89 01 .... Debug 

    # core/Global.es:394            }
    

VARIABLE:   [printHash-00]  private var name : String

VARIABLE:   [printHash-01]  private var o : Object

CLASS:      final class XML extends Object
            #  Class Details: 48 class traits, 0 instance traits, requested slot 79

FUNCTION:   [XML-01]  iterator override function get(deep: Boolean) : Iterator

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [XML-02]  iterator override function getValues(deep: Boolean) : Iterator

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

FUNCTION:   [XML-03]  public override function length() : Number


    

FUNCTION:   [XML-04]  public override function toString() : String


    

FUNCTION:   [XML-05]  -constructor- native function XML(value: Object) : void

     ARG:   [arg-00]   private value : Object

    

VARIABLE:   [XML-00]  private var value : Object

FUNCTION:   [XML-06]  public native function load(filename: String) : Void

     ARG:   [arg-00]   private filename : String

    

VARIABLE:   [load-00]  private var filename : String

FUNCTION:   [XML-07]  public native function save(filename: String) : Void

     ARG:   [arg-00]   private filename : String

    

VARIABLE:   [save-00]  private var filename : String

VARIABLE:   [XML-08]  public static var ignoreComments : Boolean

VARIABLE:   [XML-09]  public static var ignoreProcessingInstructions : Boolean

VARIABLE:   [XML-10]  public static var ignoreWhitespace : Boolean

VARIABLE:   [XML-11]  public static var prettyPrinting : Boolean

VARIABLE:   [XML-12]  public static var prettyIndent : Boolean

FUNCTION:   [XML-13]  public native function addNamespace(ns: Namespace) : XML

     ARG:   [arg-00]   private ns : Namespace

    

VARIABLE:   [addNamespace-00]  private var ns : Namespace

FUNCTION:   [XML-14]  public native function appendChild(child: XML) : XML

     ARG:   [arg-00]   private child : XML

    

VARIABLE:   [appendChild-00]  private var child : XML

FUNCTION:   [XML-15]  public native function attribute(name: String) : void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [attribute-00]  private var name : String

FUNCTION:   [XML-16]  public native function attributes() : void


    

FUNCTION:   [XML-17]  public native function child(name: String) : void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [child-00]  private var name : String

FUNCTION:   [XML-18]  public native function childIndex() : Number


    

FUNCTION:   [XML-19]  public native function children() : void


    

FUNCTION:   [XML-20]  public native function comments() : void


    

FUNCTION:   [XML-21]  public native function contains(obj: Object) : Boolean

     ARG:   [arg-00]   private obj : Object

    

VARIABLE:   [contains-00]  private var obj : Object

FUNCTION:   [XML-22]  public native function copy() : XML


    

FUNCTION:   [XML-23]  public native function defaultSettings() : Object


    

FUNCTION:   [XML-24]  public native function descendants(name: String) : Object

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [descendants-00]  private var name : String

FUNCTION:   [XML-25]  public native function elements(name: String) : void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [elements-00]  private var name : String

FUNCTION:   [XML-26]  public native function hasComplexContent() : Boolean


    

FUNCTION:   [XML-27]  public native function hasSimpleContent() : Boolean


    

FUNCTION:   [XML-28]  public native function inScopeNamespaces() : Array


    

FUNCTION:   [XML-29]  public native function insertChildAfter(marker: Object, child: Object) : XML

     ARG:   [arg-00]   private marker : Object
     ARG:   [arg-01]   private child : Object

    

VARIABLE:   [insertChildAfter-00]  private var marker : Object

VARIABLE:   [insertChildAfter-01]  private var child : Object

FUNCTION:   [XML-30]  public native function insertChildBefore(marker: Object, child: Object) : XML

     ARG:   [arg-00]   private marker : Object
     ARG:   [arg-01]   private child : Object

    

VARIABLE:   [insertChildBefore-00]  private var marker : Object

VARIABLE:   [insertChildBefore-01]  private var child : Object

FUNCTION:   [XML-31]  public native function localName() : String


    

FUNCTION:   [XML-32]  public native function name() : String


    

FUNCTION:   [XML-33]  public native function namespace(prefix: String) : Object

     ARG:   [arg-00]   private prefix : String

    

VARIABLE:   [namespace-00]  private var prefix : String

FUNCTION:   [XML-34]  public native function namespaceDeclarations() : Array


    

FUNCTION:   [XML-35]  public native function nodeKind() : String


    

FUNCTION:   [XML-36]  public native function normalize() : XML


    

FUNCTION:   [XML-37]  public native function parent() : XML


    

FUNCTION:   [XML-38]  public native function prependChild(child: Object) : XML

     ARG:   [arg-00]   private child : Object

    

VARIABLE:   [prependChild-00]  private var child : Object

FUNCTION:   [XML-39]  public native function processingInstructions(name: String) : void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [processingInstructions-00]  private var name : String

FUNCTION:   [XML-40]  public native function replace(property: Object, value: Object) : Void

     ARG:   [arg-00]   private property : Object
     ARG:   [arg-01]   private value : Object

    

VARIABLE:   [replace-00]  private var property : Object

VARIABLE:   [replace-01]  private var value : Object

FUNCTION:   [XML-41]  public native function setChildren(properties: Object) : XML

     ARG:   [arg-00]   private properties : Object

    

VARIABLE:   [setChildren-00]  private var properties : Object

FUNCTION:   [XML-42]  public native function setLocalName(name: String) : Void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [setLocalName-00]  private var name : String

FUNCTION:   [XML-43]  public native function setName(name: String) : Void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [setName-00]  private var name : String

FUNCTION:   [XML-44]  public native function settings() : Object


    

FUNCTION:   [XML-45]  public native function setSettings(settings: Object) : Void

     ARG:   [arg-00]   private settings : Object

    

VARIABLE:   [setSettings-00]  private var settings : Object

FUNCTION:   [XML-46]  public native function text(name: String) : void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [text-00]  private var name : String

FUNCTION:   [XML-47]  public native function toXMLString() : String


    

CLASS:      final class XMLList extends Object
            #  Class Details: 37 class traits, 0 instance traits, requested slot 80

FUNCTION:   [XMLList-01]  iterator override function get(deep: Boolean) : Iterator

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [XMLList-02]  iterator override function getValues(deep: Boolean) : Iterator

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

FUNCTION:   [XMLList-03]  public override function length() : Number


    

FUNCTION:   [XMLList-04]  public override function toString() : String


    

FUNCTION:   [XMLList-05]  -constructor- native function XMLList() : void


    

FUNCTION:   [XMLList-06]  public native function appendChild(child: XML) : XML

     ARG:   [arg-00]   private child : XML

    

VARIABLE:   [appendChild-00]  private var child : XML

FUNCTION:   [XMLList-07]  public native function attribute(name: String) : XMLList

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [attribute-00]  private var name : String

FUNCTION:   [XMLList-08]  public native function attributes() : XMLList


    

FUNCTION:   [XMLList-09]  public native function child(name: String) : XMLList

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [child-00]  private var name : String

FUNCTION:   [XMLList-10]  public native function childIndex() : Number


    

FUNCTION:   [XMLList-11]  public native function children() : XMLList


    

FUNCTION:   [XMLList-12]  public native function comments() : XMLList


    

FUNCTION:   [XMLList-13]  public native function contains(obj: Object) : Boolean

     ARG:   [arg-00]   private obj : Object

    

VARIABLE:   [contains-00]  private var obj : Object

FUNCTION:   [XMLList-14]  public native function copy() : XML


    

FUNCTION:   [XMLList-15]  public native function defaultSettings() : Object


    

FUNCTION:   [XMLList-16]  public native function descendants(name: String) : Object

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [descendants-00]  private var name : String

FUNCTION:   [XMLList-17]  public native function elements(name: String) : XMLList

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [elements-00]  private var name : String

FUNCTION:   [XMLList-18]  public native function hasComplexContent() : Boolean


    

FUNCTION:   [XMLList-19]  public native function hasSimpleContent() : Boolean


    

FUNCTION:   [XMLList-20]  public native function insertChildAfter(marker: Object, child: Object) : XML

     ARG:   [arg-00]   private marker : Object
     ARG:   [arg-01]   private child : Object

    

VARIABLE:   [insertChildAfter-00]  private var marker : Object

VARIABLE:   [insertChildAfter-01]  private var child : Object

FUNCTION:   [XMLList-21]  public native function insertChildBefore(marker: Object, child: Object) : XML

     ARG:   [arg-00]   private marker : Object
     ARG:   [arg-01]   private child : Object

    

VARIABLE:   [insertChildBefore-00]  private var marker : Object

VARIABLE:   [insertChildBefore-01]  private var child : Object

FUNCTION:   [XMLList-22]  public native function localName() : String


    

FUNCTION:   [XMLList-23]  public native function name() : String


    

FUNCTION:   [XMLList-24]  public native function nodeKind() : String


    

FUNCTION:   [XMLList-25]  public native function normalize() : XML


    

FUNCTION:   [XMLList-26]  public native function parent() : XML


    

FUNCTION:   [XMLList-27]  public native function prependChild(child: Object) : XML

     ARG:   [arg-00]   private child : Object

    

VARIABLE:   [prependChild-00]  private var child : Object

FUNCTION:   [XMLList-28]  public native function processingInstructions(name: String) : XMLList

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [processingInstructions-00]  private var name : String

FUNCTION:   [XMLList-29]  public native function replace(property: Object, value: Object) : Void

     ARG:   [arg-00]   private property : Object
     ARG:   [arg-01]   private value : Object

    

VARIABLE:   [replace-00]  private var property : Object

VARIABLE:   [replace-01]  private var value : Object

FUNCTION:   [XMLList-30]  public native function setChildren(properties: Object) : XML

     ARG:   [arg-00]   private properties : Object

    

VARIABLE:   [setChildren-00]  private var properties : Object

FUNCTION:   [XMLList-31]  public native function setLocalName(name: String) : Void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [setLocalName-00]  private var name : String

FUNCTION:   [XMLList-32]  public native function setName(name: String) : Void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [setName-00]  private var name : String

FUNCTION:   [XMLList-33]  public native function settings() : Object


    

FUNCTION:   [XMLList-34]  public native function setSettings(settings: Object) : Void

     ARG:   [arg-00]   private settings : Object

    

VARIABLE:   [setSettings-00]  private var settings : Object

FUNCTION:   [XMLList-35]  public native function text(name: String) : XMLList

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [text-00]  private var name : String

FUNCTION:   [XMLList-36]  public native function toXMLString() : String


    

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 111, num inherited 0)
#
0000    intrinsic var Object: Type
0001    intrinsic var Boolean: Type
0002    intrinsic var Null: Type
0003    intrinsic var Number: Type
0004    intrinsic var String: Type
0005    intrinsic var Void: Type
0006    intrinsic var Function: Type
0007    intrinsic var Array: Type
0008    intrinsic var Block: Type
0009    intrinsic var ByteArray: Type
0010    intrinsic var Date: Type
0011    intrinsic var ArgError: Type
0012    intrinsic var ArithmeticError: Type
0013    intrinsic var AssertError: Type
0014    intrinsic var InstructionError: Type
0015    intrinsic var Error: Type
0016    intrinsic var IOError: Type
0017    intrinsic var InternalError: Type
0018    intrinsic var MemoryError: Type
0019    intrinsic var OutOfBoundsError: Type
0020    intrinsic var ReferenceError: Type
0021    intrinsic var ResourceError: Type
0022    intrinsic var StateError: Type
0023    intrinsic var SyntaxError: Type
0024    intrinsic var TypeError: Type
0025    intrinsic var URIError: Type
0026    iterator var Iterable: Type
0027    iterator var Iterator: Type
0028    intrinsic var JSON: Type
0029    intrinsic var Namespace: Type
0030    intrinsic var Reflect: Type
0031    intrinsic function typeOf
0032    intrinsic var RegExp: Type
0033    intrinsic var Stream: Type
0034    intrinsic var Type: Type
0035    public var public: Namespace
0036    public var internal: Namespace
0037    public var intrinsic: Namespace
0038    public var iterator: Namespace
0039    public var CONFIG: Namespace
0040    intrinsic var TODO: Boolean
0041    intrinsic var FUTURE: Boolean
0042    intrinsic var ASC: Boolean
0043    intrinsic var DOC_ONLY: Boolean
0044    intrinsic var DEPRECATED: Boolean
0045    intrinsic var REGEXP: Boolean
0046    intrinsic var boolean: Type
0047    intrinsic var double: Type
0048    intrinsic var num: Type
0049    intrinsic var string: Type
0050    intrinsic var false: Boolean
0051    intrinsic var global: Object
0052    intrinsic var null: Null
0053    intrinsic var Infinity: Number
0054    intrinsic var NegativeInfinity: Number
0055    intrinsic var NaN: Number
0056    iterator var StopIteration: Type
0057    intrinsic var true: Boolean
0058    intrinsic var undefined: Void
0059    intrinsic var void: Type
0060    intrinsic function assert
0061    intrinsic function breakpoint
0062    intrinsic function cloneBase
0063    intrinsic function deserialize
0064    intrinsic function dump
0065    intrinsic function eprint
0066    intrinsic function formatStack
0067    intrinsic function hashcode
0068    intrinsic function load
0069    intrinsic function print
0070    intrinsic function printv
0071    intrinsic function parse
0072    intrinsic function serialize
0073    intrinsic function printHash
0074    ejs.events var Event: Type
0075    ejs.events var Dispatcher: Type
0076    internal-23 var Endpoint: Type
0077    ejs.events var Timer: Type
0078    ejs.events var TimerEvent: Type
0079    intrinsic var XML: Type
0080    intrinsic var XMLList: Type
0081    ejs.io var BinaryStream: Type
0082    ejs.io var File: Type
0083    ejs.io var Http: Type
0084    ejs.io var HttpDataEvent: Type
0085    ejs.io var HttpErrorEvent: Type
0086    ejs.io var TextStream: Type
0087    ejs.io var XMLHttp: Type
0088    ejs.sys var App: Type
0089    public var Config: Type
0090    ejs.sys var GC: Type
0091    ejs.sys var Memory: Type
0092    ejs.sys var System: Type
0093    public function basename
0094    public function close
0095    public function cp
0096    public function dirname
0097    public function exists
0098    public function extension
0099    public function freeSpace
0100    public function isDir
0101    public function ls
0102    public function mkdir
0103    public function mv
0104    public function open
0105    public function pwd
0106    public function read
0107    public function rm
0108    public function rmdir
0109    public function tempname
0110    public function write

#
#  Initializer slot assignments (Num prop 24)
#
0000    -block- var block_0014_1: Block
0001    -block- var block_0007_3: Block
0002    -block- var block_0007_5: Block
0003    -block- var block_0007_7: Block
0004    -block- var block_0007_10: Block
0005    -block- var block_0007_16: Block
0006    -block- var block_0007_18: Block
0007    -block- var block_0007_20: Block
0008    -block- var block_0007_37: Block
0009    -block- var block_0007_39: Block
0010    -block- var block_0007_41: Block
0011    -block- var block_0007_43: Block
0012    -block- var block_0009_45: Block
0013    -block- var block_0007_47: Block
0014    -block- var block_0007_49: Block
0015    -block- var block_0007_51: Block
0016    -block- var block_0009_53: Block
0017    -block- var block_0007_55: Block
0018    -block- var block_0007_57: Block
0019    -block- var block_0007_59: Block
0020    -block- var block_0007_61: Block
0021    -block- var block_0034_63: Block
0022    -block- var block_0011_82: Block
0023    -block- var block_0007_84: Block

#
#  Class slot assignments for the "Object" class (Num slots 5, num inherited 0)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString

#
#  Instance slot assignments for the "Object" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Class slot assignments for the "Boolean" class (Num slots 6, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Boolean

#
#  Instance slot assignments for the "Boolean" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "Boolean" function (Num slots 1)
#
0000    private var value

#
#  Class slot assignments for the "Null" class (Num slots 3, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues

#
#  Instance slot assignments for the "Null" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Class slot assignments for the "Number" class (Num slots 20, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Number
0006    -initializer- function Number-initializer
0007    public var MaxValue: Number
0008    public var MinValue: Number
0009    public function ceil
0010    public function floor
0011    public function isFinite
0012    public function isNaN
0013    public function round
0014    public function toFixed
0015    public function toPrecision
0016    public function abs
0017    public function max
0018    public function min
0019    public function power

#
#  Instance slot assignments for the "Number" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "Number" function (Num slots 1)
#
0000    private var value

#
#  Local slot assignments for the "toFixed" function (Num slots 1)
#
0000    private var fractionDigits: Number

#
#  Local slot assignments for the "toPrecision" function (Num slots 1)
#
0000    private var numDigits: Number

#
#  Local slot assignments for the "max" function (Num slots 1)
#
0000    private var other: Number

#
#  Local slot assignments for the "min" function (Num slots 1)
#
0000    private var other: Number

#
#  Local slot assignments for the "power" function (Num slots 3)
#
0000    private var power: Number
0001    private var result: Number
0002    -hoisted-2 var i

#
#  Class slot assignments for the "String" class (Num slots 41, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function String
0006    public function caseCompare
0007    public function charAt
0008    public function charCodeAt
0009    public function concat
0010    public function contains
0011    public function endsWith
0012    public function format
0013    public function fromCharCode
0014    public function indexOf
0015    public function isDigit
0016    public function isAlpha
0017    public function isLower
0018    public function isSpace
0019    public function isUpper
0020    public function lastIndexOf
0021    public function match
0022    public function toCamel
0023    public function toPascal
0024    public function printable
0025    public function quote
0026    public function remove
0027    public function replace
0028    public function reverse
0029    public function search
0030    public function slice
0031    public function split
0032    public function startsWith
0033    public function substring
0034    public function times
0035    public function tokenize
0036    public function toLower
0037    public function toUpper
0038    public function trim
0039    public function -
0040    public function %

#
#  Instance slot assignments for the "String" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale: String

#
#  Local slot assignments for the "String" function (Num slots 1)
#
0000    private var str

#
#  Local slot assignments for the "caseCompare" function (Num slots 1)
#
0000    private var compare: String

#
#  Local slot assignments for the "charAt" function (Num slots 1)
#
0000    private var index: Number

#
#  Local slot assignments for the "charCodeAt" function (Num slots 1)
#
0000    private var index: Number

#
#  Local slot assignments for the "concat" function (Num slots 1)
#
0000    private var args

#
#  Local slot assignments for the "contains" function (Num slots 1)
#
0000    private var pattern: Object

#
#  Local slot assignments for the "endsWith" function (Num slots 1)
#
0000    private var test: String

#
#  Local slot assignments for the "format" function (Num slots 1)
#
0000    private var args

#
#  Local slot assignments for the "fromCharCode" function (Num slots 1)
#
0000    private var codes

#
#  Local slot assignments for the "indexOf" function (Num slots 2)
#
0000    private var pattern: String
0001    private var startIndex: Number

#
#  Local slot assignments for the "lastIndexOf" function (Num slots 2)
#
0000    private var pattern: String
0001    private var location: Number

#
#  Local slot assignments for the "match" function (Num slots 1)
#
0000    private var pattern

#
#  Local slot assignments for the "remove" function (Num slots 2)
#
0000    private var start: Number
0001    private var end: Number

#
#  Local slot assignments for the "replace" function (Num slots 2)
#
0000    private var pattern: Object
0001    private var replacement: String

#
#  Local slot assignments for the "search" function (Num slots 1)
#
0000    private var pattern: Object

#
#  Local slot assignments for the "slice" function (Num slots 3)
#
0000    private var start: Number
0001    private var end: Number
0002    private var step: Number

#
#  Local slot assignments for the "split" function (Num slots 2)
#
0000    private var delimiter: Object
0001    private var limit: Number

#
#  Local slot assignments for the "startsWith" function (Num slots 1)
#
0000    private var test: String

#
#  Local slot assignments for the "substring" function (Num slots 2)
#
0000    private var startIndex: Number
0001    private var end: Number

#
#  Local slot assignments for the "times" function (Num slots 3)
#
0000    private var times: Number
0001    private var s: String
0002    -hoisted-2 var i

#
#  Local slot assignments for the "tokenize" function (Num slots 1)
#
0000    private var format: String

#
#  Local slot assignments for the "toLower" function (Num slots 1)
#
0000    private var locale: String

#
#  Local slot assignments for the "toUpper" function (Num slots 1)
#
0000    private var locale: String

#
#  Local slot assignments for the "trim" function (Num slots 1)
#
0000    private var str: String

#
#  Local slot assignments for the "-" function (Num slots 2)
#
0000    private var str: String
0001    private var i: Number

#
#  Local slot assignments for the "%" function (Num slots 1)
#
0000    private var obj: Object

#
#  Class slot assignments for the "Void" class (Num slots 3, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues

#
#  Instance slot assignments for the "Void" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Class slot assignments for the "Function" class (Num slots 7, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function apply
0006    public function call

#
#  Instance slot assignments for the "Function" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "apply" function (Num slots 2)
#
0000    private var thisObject: Object
0001    private var args

#
#  Local slot assignments for the "call" function (Num slots 2)
#
0000    private var thisObject: Object
0001    private var args

#
#  Class slot assignments for the "Array" class (Num slots 35, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Array
0006    public function append
0007    public function clear
0008    public function compact
0009    public function concat
0010    public function contains
0011    public function every
0012    public function filter
0013    public function find
0014    public function findAll
0015    public function forEach
0016    public function indexOf
0017    public function insert
0018    public function join
0019    public function lastIndexOf
0020    public function set-length
0021    public function map
0022    public function pop
0023    public function push
0024    public function reject
0025    public function remove
0026    public function reverse
0027    public function shift
0028    public function slice
0029    public function some
0030    public function sort
0031    public function splice
0032    public function transform
0033    public function unique
0034    public function unshift

#
#  Instance slot assignments for the "Array" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale: String

#
#  Local slot assignments for the "Array" function (Num slots 1)
#
0000    private var values: Array

#
#  Local slot assignments for the "append" function (Num slots 1)
#
0000    private var obj: Object

#
#  Local slot assignments for the "concat" function (Num slots 1)
#
0000    private var args: Array

#
#  Local slot assignments for the "contains" function (Num slots 1)
#
0000    private var element: Object

#
#  Local slot assignments for the "every" function (Num slots 2)
#
0000    private function match
0001    -hoisted-1 var i: Number

#
#  Local slot assignments for the "filter" function (Num slots 1)
#
0000    private function match

#
#  Local slot assignments for the "find" function (Num slots 3)
#
0000    private function match
0001    private var result: Array
0002    -hoisted-2 var i: Number

#
#  Local slot assignments for the "findAll" function (Num slots 3)
#
0000    private function match
0001    private var result: Array
0002    -hoisted-2 var i: Number

#
#  Local slot assignments for the "forEach" function (Num slots 2)
#
0000    private function modifier
0001    private var thisObj: Object

#
#  Local slot assignments for the "indexOf" function (Num slots 2)
#
0000    private var element: Object
0001    private var startIndex: Number

#
#  Local slot assignments for the "insert" function (Num slots 2)
#
0000    private var pos: Number
0001    private var args: Array

#
#  Local slot assignments for the "join" function (Num slots 1)
#
0000    private var sep: String

#
#  Local slot assignments for the "lastIndexOf" function (Num slots 2)
#
0000    private var element: Object
0001    private var fromIndex: Number

#
#  Local slot assignments for the "set-length" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "map" function (Num slots 2)
#
0000    private function mapper
0001    private var result: Array

#
#  Local slot assignments for the "push" function (Num slots 1)
#
0000    private var items: Array

#
#  Local slot assignments for the "reject" function (Num slots 3)
#
0000    private function match
0001    private var result: Array
0002    -hoisted-2 var i: Number

#
#  Local slot assignments for the "remove" function (Num slots 2)
#
0000    private var start: Number
0001    private var end: Number

#
#  Local slot assignments for the "slice" function (Num slots 3)
#
0000    private var start: Number
0001    private var end: Number
0002    private var step: Number

#
#  Local slot assignments for the "some" function (Num slots 3)
#
0000    private function match
0001    private var result: Array
0002    -hoisted-2 var i: Number

#
#  Local slot assignments for the "sort" function (Num slots 2)
#
0000    private function compare
0001    private var order: Number

#
#  Local slot assignments for the "splice" function (Num slots 3)
#
0000    private var start: Number
0001    private var deleteCount: Number
0002    private var values: Array

#
#  Local slot assignments for the "transform" function (Num slots 2)
#
0000    private function mapper
0001    -hoisted-1 var i: Number

#
#  Local slot assignments for the "unshift" function (Num slots 1)
#
0000    private var items: Array

#
#  Class slot assignments for the "Block" class (Num slots 0, num inherited 5)
#

#
#  Instance slot assignments for the "Block" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "ByteArray" class (Num slots 42, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function ByteArray
0006    -initializer- function ByteArray-initializer
0007    public var LittleEndian: Number
0008    public var BigEndian: Number
0009    public function available
0010    public function close
0011    public function copyIn
0012    public function copyOut
0013    public function endian
0014    public function set-endian
0015    public function flush
0016    public function set-input
0017    public function input
0018    public function set-output
0019    public function output
0020    public function read
0021    public function readBoolean
0022    public function readByte
0023    public function readDate
0024    public function readDouble
0025    public function readInteger
0026    public function readLong
0027    public function readPosition
0028    public function set-readPosition
0029    public function readShort
0030    public function readString
0031    public function readXML
0032    public function reset
0033    public function room
0034    public function write
0035    public function writeByte
0036    public function writeShort
0037    public function writeDouble
0038    public function writeInteger
0039    public function writeLong
0040    public function writePosition
0041    public function set-writePosition

#
#  Instance slot assignments for the "ByteArray" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale: String

#
#  Local slot assignments for the "ByteArray" function (Num slots 2)
#
0000    private var size: Number
0001    private var growable: Boolean

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "copyIn" function (Num slots 4)
#
0000    private var destOffset: Number
0001    private var src: ByteArray
0002    private var srcOffset: Number
0003    private var count: Number

#
#  Local slot assignments for the "copyOut" function (Num slots 4)
#
0000    private var srcOffset: Number
0001    private var dest: ByteArray
0002    private var destOffset: Number
0003    private var count: Number

#
#  Local slot assignments for the "set-endian" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "set-input" function (Num slots 1)
#
0000    private function value

#
#  Local slot assignments for the "set-output" function (Num slots 1)
#
0000    private function callback

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "set-readPosition" function (Num slots 1)
#
0000    private var position: Number

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Local slot assignments for the "writeByte" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeShort" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeDouble" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeInteger" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeLong" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "set-writePosition" function (Num slots 1)
#
0000    private var position: Number

#
#  Class slot assignments for the "Date" class (Num slots 30, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    public function toString
0005    -constructor- function Date
0006    public function day
0007    public function dayOfYear
0008    public function date
0009    public function elapsed
0010    public function fullYear
0011    public function set-fullYear
0012    public function format
0013    public function hours
0014    public function set-hours
0015    public function milliseconds
0016    public function set-milliseconds
0017    public function minutes
0018    public function set-minutes
0019    public function month
0020    public function set-month
0021    public function nextDay
0022    public function now
0023    public function parseDate
0024    public function seconds
0025    public function set-seconds
0026    public function time
0027    public function set-time
0028    public function year
0029    public function set-year

#
#  Instance slot assignments for the "Date" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale: String

#
#  Local slot assignments for the "Date" function (Num slots 1)
#
0000    private var args: Array

#
#  Local slot assignments for the "set-fullYear" function (Num slots 1)
#
0000    private var year: Number

#
#  Local slot assignments for the "format" function (Num slots 1)
#
0000    private var layout: String

#
#  Local slot assignments for the "set-hours" function (Num slots 1)
#
0000    private var hour: Number

#
#  Local slot assignments for the "set-milliseconds" function (Num slots 1)
#
0000    private var ms: Number

#
#  Local slot assignments for the "set-minutes" function (Num slots 1)
#
0000    private var min: Number

#
#  Local slot assignments for the "set-month" function (Num slots 1)
#
0000    private var month: Number

#
#  Local slot assignments for the "nextDay" function (Num slots 1)
#
0000    private var inc: Number

#
#  Local slot assignments for the "parseDate" function (Num slots 2)
#
0000    private var arg: String
0001    private var defaultDate: Date

#
#  Local slot assignments for the "set-seconds" function (Num slots 1)
#
0000    private var sec: Number

#
#  Local slot assignments for the "set-time" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "set-year" function (Num slots 1)
#
0000    private var year: Number

#
#  Class slot assignments for the "ArgError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function ArgError

#
#  Instance slot assignments for the "ArgError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "ArgError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "ArithmeticError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function ArithmeticError

#
#  Instance slot assignments for the "ArithmeticError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "ArithmeticError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "AssertError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function AssertError

#
#  Instance slot assignments for the "AssertError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "AssertError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "InstructionError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function InstructionError

#
#  Instance slot assignments for the "InstructionError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "InstructionError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "Error" class (Num slots 8, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Error
0006    internal-11 function code
0007    internal-11 function set-code

#
#  Instance slot assignments for the "Error" class (Num prop 2, num inherited 0)
#
0000    internal-11 var message: String
0001    internal-11 var stack: String

#
#  Local slot assignments for the "Error" function (Num slots 1)
#
0000    private var message: String

#
#  Local slot assignments for the "set-code" function (Num slots 1)
#
0000    private var value: Number

#
#  Class slot assignments for the "IOError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function IOError

#
#  Instance slot assignments for the "IOError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "IOError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "InternalError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function InternalError

#
#  Instance slot assignments for the "InternalError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "InternalError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "MemoryError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function MemoryError

#
#  Instance slot assignments for the "MemoryError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "MemoryError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "OutOfBoundsError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function OutOfBoundsError

#
#  Instance slot assignments for the "OutOfBoundsError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "OutOfBoundsError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "ReferenceError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function ReferenceError

#
#  Instance slot assignments for the "ReferenceError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "ReferenceError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "ResourceError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function ResourceError

#
#  Instance slot assignments for the "ResourceError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "ResourceError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "StateError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function StateError

#
#  Instance slot assignments for the "StateError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "StateError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "SyntaxError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function SyntaxError

#
#  Instance slot assignments for the "SyntaxError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "SyntaxError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "TypeError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function TypeError

#
#  Instance slot assignments for the "TypeError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "TypeError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "URIError" class (Num slots 9, num inherited 8)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    reserved slot for static super property
0006    reserved slot for static super property
0007    reserved slot for static super property
0008    -constructor- function URIError

#
#  Instance slot assignments for the "URIError" class (Num prop 0, num inherited 2)
#

#
#  Local slot assignments for the "URIError" function (Num slots 1)
#
0000    private var message: String

#
#  Class slot assignments for the "Iterable" class (Num slots 2, num inherited 0)
#
0000    iterator function get
0001    iterator function getValues

#
#  Instance slot assignments for the "Iterable" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep

#
#  Class slot assignments for the "Iterator" class (Num slots 6, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function next

#
#  Instance slot assignments for the "Iterator" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "JSON" class (Num slots 7, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    public function parse
0006    public function stringify

#
#  Instance slot assignments for the "JSON" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "parse" function (Num slots 2)
#
0000    private var data: String
0001    private function filter

#
#  Local slot assignments for the "stringify" function (Num slots 3)
#
0000    private var obj: Object
0001    private var replacer: Object
0002    private var indent: Number

#
#  Class slot assignments for the "Namespace" class (Num slots 0, num inherited 5)
#

#
#  Instance slot assignments for the "Namespace" class (Num prop 2, num inherited 0)
#
0000    public var name: String
0001    public var uri: String

#
#  Class slot assignments for the "Reflect" class (Num slots 9, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Reflect
0006    public function name
0007    public function type
0008    public function typeName

#
#  Instance slot assignments for the "Reflect" class (Num prop 1, num inherited 0)
#
0000    [intrinsic::Reflect,private] var obj: Object

#
#  Local slot assignments for the "Reflect" function (Num slots 1)
#
0000    private var o: Object

#
#  Local slot assignments for the "typeOf" function (Num slots 1)
#
0000    private var o

#
#  Class slot assignments for the "RegExp" class (Num slots 19, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    public function toString
0005    -constructor- function RegExp
0006    public function lastIndex
0007    public function set-lastIndex
0008    public function exec
0009    public function global
0010    public function ignoreCase
0011    public function multiline
0012    public function source
0013    public function matched
0014    public function replace
0015    public function split
0016    public function start
0017    public function sticky
0018    public function test

#
#  Instance slot assignments for the "RegExp" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale: String

#
#  Local slot assignments for the "RegExp" function (Num slots 2)
#
0000    private var pattern: String
0001    private var flags: String

#
#  Local slot assignments for the "set-lastIndex" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "exec" function (Num slots 2)
#
0000    private var str: String
0001    private var start: Number

#
#  Local slot assignments for the "replace" function (Num slots 2)
#
0000    private var str: String
0001    private var replacement: Object

#
#  Local slot assignments for the "split" function (Num slots 1)
#
0000    private var target: String

#
#  Local slot assignments for the "test" function (Num slots 1)
#
0000    private var str: String

#
#  Class slot assignments for the "Stream" class (Num slots 4, num inherited 0)
#
0000    public function close
0001    public function flush
0002    public function read
0003    public function write

#
#  Instance slot assignments for the "Stream" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Class slot assignments for the "Type" class (Num slots 0, num inherited 5)
#

#
#  Instance slot assignments for the "Type" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "StopIteration" class (Num slots 0, num inherited 5)
#

#
#  Instance slot assignments for the "StopIteration" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "assert" function (Num slots 1)
#
0000    private var condition: Boolean

#
#  Local slot assignments for the "cloneBase" function (Num slots 1)
#
0000    private var klass: Type

#
#  Local slot assignments for the "deserialize" function (Num slots 1)
#
0000    private var obj: String

#
#  Local slot assignments for the "dump" function (Num slots 2)
#
0000    private var args: Array
0001    private var e: Object

#
#  Local slot assignments for the "eprint" function (Num slots 1)
#
0000    private var args: Array

#
#  Local slot assignments for the "hashcode" function (Num slots 1)
#
0000    private var o: Object

#
#  Local slot assignments for the "load" function (Num slots 1)
#
0000    private var file: String

#
#  Local slot assignments for the "print" function (Num slots 1)
#
0000    private var args: Array

#
#  Local slot assignments for the "printv" function (Num slots 1)
#
0000    private var args: Array

#
#  Local slot assignments for the "parse" function (Num slots 2)
#
0000    private var input: String
0001    private var preferredType: Type

#
#  Local slot assignments for the "serialize" function (Num slots 4)
#
0000    private var obj: Object
0001    private var maxDepth: Number
0002    private var all: Boolean
0003    private var base: Boolean

#
#  Local slot assignments for the "printHash" function (Num slots 2)
#
0000    private var name: String
0001    private var o: Object

#
#  Class slot assignments for the "Event" class (Num slots 10, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    public var PRI_LOW: Number
0008    public var PRI_NORMAL: Number
0009    public var PRI_HIGH: Number

#
#  Instance slot assignments for the "Event" class (Num prop 4, num inherited 0)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "Dispatcher" class (Num slots 9, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Dispatcher
0006    public function addListener
0007    public function dispatch
0008    public function removeListener

#
#  Instance slot assignments for the "Dispatcher" class (Num prop 1, num inherited 0)
#
0000    internal-23 var events: Object

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "addListener" function (Num slots 5)
#
0000    private function callback
0001    private var eventType: Type
0002    private var name
0003    private var listeners: Array
0004    private var e

#
#  Local slot assignments for the "dispatch" function (Num slots 4)
#
0000    private var event: Event
0001    private var eventListeners: Array
0002    private var name
0003    private var e

#
#  Local slot assignments for the "removeListener" function (Num slots 6)
#
0000    private function callback
0001    private var eventType: Type
0002    private var name
0003    private var listeners: Array
0004    private var e
0005    -hoisted-5 var i

#
#  Class slot assignments for the "Endpoint" class (Num slots 6, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Endpoint

#
#  Instance slot assignments for the "Endpoint" class (Num prop 2, num inherited 0)
#
0000    public function callback
0001    public var eventType: Type

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "Endpoint" function (Num slots 2)
#
0000    private function callback
0001    private var eventType: Type

#
#  Class slot assignments for the "Timer" class (Num slots 12, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Timer
0006    public function drift
0007    public function set-drift
0008    public function period
0009    public function set-period
0010    public function restart
0011    public function stop

#
#  Instance slot assignments for the "Timer" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "Timer" function (Num slots 3)
#
0000    private var period: Number
0001    private function callback
0002    private var drift: Boolean

#
#  Local slot assignments for the "set-drift" function (Num slots 1)
#
0000    private var enable: Boolean

#
#  Local slot assignments for the "set-period" function (Num slots 1)
#
0000    private var period: Number

#
#  Class slot assignments for the "TimerEvent" class (Num slots 12, num inherited 10)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    reserved slot for static super property
0008    reserved slot for static super property
0009    reserved slot for static super property
0010    -constructor- function TimerEvent
0011    -initializer- function TimerEvent-initializer

#
#  Instance slot assignments for the "TimerEvent" class (Num prop 4, num inherited 4)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "XML" class (Num slots 48, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function XML
0006    public function load
0007    public function save
0008    public var ignoreComments: Boolean
0009    public var ignoreProcessingInstructions: Boolean
0010    public var ignoreWhitespace: Boolean
0011    public var prettyPrinting: Boolean
0012    public var prettyIndent: Boolean
0013    public function addNamespace
0014    public function appendChild
0015    public function attribute
0016    public function attributes
0017    public function child
0018    public function childIndex
0019    public function children
0020    public function comments
0021    public function contains
0022    public function copy
0023    public function defaultSettings
0024    public function descendants
0025    public function elements
0026    public function hasComplexContent
0027    public function hasSimpleContent
0028    public function inScopeNamespaces
0029    public function insertChildAfter
0030    public function insertChildBefore
0031    public function localName
0032    public function name
0033    public function namespace
0034    public function namespaceDeclarations
0035    public function nodeKind
0036    public function normalize
0037    public function parent
0038    public function prependChild
0039    public function processingInstructions
0040    public function replace
0041    public function setChildren
0042    public function setLocalName
0043    public function setName
0044    public function settings
0045    public function setSettings
0046    public function text
0047    public function toXMLString

#
#  Instance slot assignments for the "XML" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "XML" function (Num slots 1)
#
0000    private var value: Object

#
#  Local slot assignments for the "load" function (Num slots 1)
#
0000    private var filename: String

#
#  Local slot assignments for the "save" function (Num slots 1)
#
0000    private var filename: String

#
#  Local slot assignments for the "addNamespace" function (Num slots 1)
#
0000    private var ns: Namespace

#
#  Local slot assignments for the "appendChild" function (Num slots 1)
#
0000    private var child: XML

#
#  Local slot assignments for the "attribute" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "child" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "contains" function (Num slots 1)
#
0000    private var obj: Object

#
#  Local slot assignments for the "descendants" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "elements" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "insertChildAfter" function (Num slots 2)
#
0000    private var marker: Object
0001    private var child: Object

#
#  Local slot assignments for the "insertChildBefore" function (Num slots 2)
#
0000    private var marker: Object
0001    private var child: Object

#
#  Local slot assignments for the "namespace" function (Num slots 1)
#
0000    private var prefix: String

#
#  Local slot assignments for the "prependChild" function (Num slots 1)
#
0000    private var child: Object

#
#  Local slot assignments for the "processingInstructions" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "replace" function (Num slots 2)
#
0000    private var property: Object
0001    private var value: Object

#
#  Local slot assignments for the "setChildren" function (Num slots 1)
#
0000    private var properties: Object

#
#  Local slot assignments for the "setLocalName" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "setName" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "setSettings" function (Num slots 1)
#
0000    private var settings: Object

#
#  Local slot assignments for the "text" function (Num slots 1)
#
0000    private var name: String

#
#  Class slot assignments for the "XMLList" class (Num slots 37, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function XMLList
0006    public function appendChild
0007    public function attribute
0008    public function attributes
0009    public function child
0010    public function childIndex
0011    public function children
0012    public function comments
0013    public function contains
0014    public function copy
0015    public function defaultSettings
0016    public function descendants
0017    public function elements
0018    public function hasComplexContent
0019    public function hasSimpleContent
0020    public function insertChildAfter
0021    public function insertChildBefore
0022    public function localName
0023    public function name
0024    public function nodeKind
0025    public function normalize
0026    public function parent
0027    public function prependChild
0028    public function processingInstructions
0029    public function replace
0030    public function setChildren
0031    public function setLocalName
0032    public function setName
0033    public function settings
0034    public function setSettings
0035    public function text
0036    public function toXMLString

#
#  Instance slot assignments for the "XMLList" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "appendChild" function (Num slots 1)
#
0000    private var child: XML

#
#  Local slot assignments for the "attribute" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "child" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "contains" function (Num slots 1)
#
0000    private var obj: Object

#
#  Local slot assignments for the "descendants" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "elements" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "insertChildAfter" function (Num slots 2)
#
0000    private var marker: Object
0001    private var child: Object

#
#  Local slot assignments for the "insertChildBefore" function (Num slots 2)
#
0000    private var marker: Object
0001    private var child: Object

#
#  Local slot assignments for the "prependChild" function (Num slots 1)
#
0000    private var child: Object

#
#  Local slot assignments for the "processingInstructions" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "replace" function (Num slots 2)
#
0000    private var property: Object
0001    private var value: Object

#
#  Local slot assignments for the "setChildren" function (Num slots 1)
#
0000    private var properties: Object

#
#  Local slot assignments for the "setLocalName" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "setName" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "setSettings" function (Num slots 1)
#
0000    private var settings: Object

#
#  Local slot assignments for the "text" function (Num slots 1)
#
0000    private var name: String

#
#  Class slot assignments for the "BinaryStream" class (Num slots 29, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function BinaryStream
0006    -initializer- function BinaryStream-initializer
0007    public var BigEndian: Number
0008    public var LittleEndian: Number
0009    public function close
0010    public function endian
0011    public function set-endian
0012    public function flush
0013    public function read
0014    public function readBoolean
0015    public function readByte
0016    public function readByteArray
0017    public function readDate
0018    public function readDouble
0019    public function readInteger
0020    public function readLong
0021    public function readString
0022    public function readXML
0023    public function write
0024    public function writeByte
0025    public function writeShort
0026    public function writeDouble
0027    public function writeInteger
0028    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs.io::BinaryStream,private] var inbuf: ByteArray
0001    [ejs.io::BinaryStream,private] var outbuf: ByteArray
0002    [ejs.io::BinaryStream,private] var nextStream: Stream

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "BinaryStream" function (Num slots 3)
#
0000    private var stream: Stream
0001    private function --fun_6051--
0002    private function --fun_6072--

#
#  Local slot assignments for the "--fun_6051--" function (Num slots 1)
#
0000    private var buffer: ByteArray

#
#  Local slot assignments for the "--fun_6072--" function (Num slots 1)
#
0000    private var buffer: ByteArray

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-endian" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readByteArray" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readXML" function (Num slots 2)
#
0000    private var data: String
0001    private var s: String

#
#  Local slot assignments for the "write" function (Num slots 3)
#
0000    private var items: Array
0001    private var count: Number
0002    -hoisted-2 var i

#
#  Local slot assignments for the "writeByte" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeShort" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeDouble" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeInteger" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeLong" function (Num slots 1)
#
0000    private var data: Number

#
#  Class slot assignments for the "File" class (Num slots 62, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    reserved slot for static super property
0005    -constructor- function File
0006    -initializer- function File-initializer
0007    public var Closed: Number
0008    public var Open: Number
0009    public var Read: Number
0010    public var Write: Number
0011    public var Append: Number
0012    public var Create: Number
0013    public var Truncate: Number
0014    public function absolutePath
0015    public function basename
0016    public function close
0017    public function copy
0018    public function createTempFile
0019    public function created
0020    public function dirname
0021    public function exists
0022    public function extension
0023    public function flush
0024    public function freeSpace
0025    public function getFiles
0026    public function getBytes
0027    public function getLines
0028    public function getString
0029    public function getXML
0030    public function hasDriveSpec
0031    public function isDir
0032    public function isOpen
0033    public function isRegular
0034    public function lastAccess
0035    public function makeDir
0036    public function mode
0037    public function modified
0038    public function name
0039    public function newline
0040    public function set-newline
0041    public function open
0042    public function openFileStream
0043    public function openTextStream
0044    public function openBinaryStream
0045    public function pathDelimiter
0046    public function set-pathDelimiter
0047    public function parent
0048    public function permissions
0049    public function set-permissions
0050    public function position
0051    public function set-position
0052    public function put
0053    public function relativePath
0054    public function read
0055    public function readBytes
0056    public function remove
0057    public function removeDir
0058    public function rename
0059    public function setCallback
0060    public function unixPath
0061    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "File" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "copy" function (Num slots 1)
#
0000    private var toPath: String

#
#  Local slot assignments for the "createTempFile" function (Num slots 1)
#
0000    private var directory: String

#
#  Local slot assignments for the "freeSpace" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "getFiles" function (Num slots 1)
#
0000    private var enumDirs: Boolean

#
#  Local slot assignments for the "getBytes" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "getLines" function (Num slots 2)
#
0000    private var path: String
0001    private var encoding: String

#
#  Local slot assignments for the "getString" function (Num slots 2)
#
0000    private var path: String
0001    private var encoding: String

#
#  Local slot assignments for the "getXML" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "makeDir" function (Num slots 1)
#
0000    private var permissions: Number

#
#  Local slot assignments for the "set-newline" function (Num slots 1)
#
0000    private var terminator: String

#
#  Local slot assignments for the "open" function (Num slots 2)
#
0000    private var mode: Number
0001    private var permissions: Number

#
#  Local slot assignments for the "openFileStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "openTextStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "openBinaryStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "set-pathDelimiter" function (Num slots 1)
#
0000    private var delim: String

#
#  Local slot assignments for the "set-permissions" function (Num slots 1)
#
0000    private var mask: Number

#
#  Local slot assignments for the "set-position" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "put" function (Num slots 3)
#
0000    private var path: String
0001    private var permissions: Number
0002    private var args: Array

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readBytes" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "removeDir" function (Num slots 1)
#
0000    private var recursive: Boolean

#
#  Local slot assignments for the "rename" function (Num slots 1)
#
0000    private var toFile: String

#
#  Local slot assignments for the "setCallback" function (Num slots 1)
#
0000    private function callback

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var items: Array

#
#  Class slot assignments for the "Http" class (Num slots 92, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Http
0006    -initializer- function Http-initializer
0007    public var Continue: Number
0008    public var Ok: Number
0009    public var Created: Number
0010    public var Accepted: Number
0011    public var NotAuthoritative: Number
0012    public var NoContent: Number
0013    public var Reset: Number
0014    public var Partial: Number
0015    public var MultipleChoice: Number
0016    public var MovedPermanently: Number
0017    public var MovedTemporarily: Number
0018    public var SeeOther: Number
0019    public var NotModified: Number
0020    public var UseProxy: Number
0021    public var BadRequest: Number
0022    public var Unauthorized: Number
0023    public var PaymentRequired: Number
0024    public var Forbidden: Number
0025    public var NotFound: Number
0026    public var BadMethod: Number
0027    public var NotAccepted: Number
0028    public var ProxyAuth: Number
0029    public var ClientTimeout: Number
0030    public var Conflict: Number
0031    public var Gone: Number
0032    public var LengthRequired: Number
0033    public var PrecondFailed: Number
0034    public var EntityTooLarge: Number
0035    public var ReqTooLong: Number
0036    public var UnsupportedType: Number
0037    public var ServerError: Number
0038    public var NotImplemented: Number
0039    public var BadGateway: Number
0040    public var Unavailable: Number
0041    public var GatewayTimeout: Number
0042    public var Version: Number
0043    public function addRequestHeader
0044    public function available
0045    public function set-callback
0046    public function callback
0047    public function close
0048    public function connect
0049    public function certificateFile
0050    public function set-certificateFile
0051    public function code
0052    public function codeString
0053    public function contentEncoding
0054    public function contentLength
0055    public function contentType
0056    public function date
0057    public function del
0058    public function expires
0059    public function flush
0060    public function followRedirects
0061    public function set-followRedirects
0062    public function form
0063    public function get
0064    public function head
0065    public function header
0066    public function headers
0067    public function isSecure
0068    public function keyFile
0069    public function set-keyFile
0070    public function lastModified
0071    public function method
0072    public function set-method
0073    public function post
0074    public function set-postLength
0075    public function postLength
0076    public function set-postData
0077    public function put
0078    public function read
0079    public function readString
0080    public function readLines
0081    public function readXml
0082    public function requestStream
0083    public function response
0084    public function responseStream
0085    public function setCredentials
0086    public function timeout
0087    public function set-timeout
0088    public function upload
0089    public function uri
0090    public function set-uri
0091    public function write

#
#  Instance slot assignments for the "Http" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "Http" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "addRequestHeader" function (Num slots 3)
#
0000    private var key: String
0001    private var value: String
0002    private var overwrite: Boolean

#
#  Local slot assignments for the "set-callback" function (Num slots 1)
#
0000    private function cb

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-certificateFile" function (Num slots 1)
#
0000    private var certFile: String

#
#  Local slot assignments for the "del" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "set-followRedirects" function (Num slots 1)
#
0000    private var flag: Boolean

#
#  Local slot assignments for the "form" function (Num slots 2)
#
0000    private var uri: String
0001    private var postData: Object

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "head" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "header" function (Num slots 1)
#
0000    private var key: String

#
#  Local slot assignments for the "set-keyFile" function (Num slots 1)
#
0000    private var keyFile: String

#
#  Local slot assignments for the "set-method" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "post" function (Num slots 2)
#
0000    private var uri: String
0001    private var data: Array

#
#  Local slot assignments for the "set-postLength" function (Num slots 1)
#
0000    private var length: Number

#
#  Local slot assignments for the "set-postData" function (Num slots 1)
#
0000    private var items: Object

#
#  Local slot assignments for the "put" function (Num slots 2)
#
0000    private var uri: String
0001    private var putData: Array

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readLines" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "setCredentials" function (Num slots 2)
#
0000    private var username: String
0001    private var password: String

#
#  Local slot assignments for the "set-timeout" function (Num slots 1)
#
0000    private var timeout: Number

#
#  Local slot assignments for the "upload" function (Num slots 2)
#
0000    private var uri: String
0001    private var filename: String

#
#  Local slot assignments for the "set-uri" function (Num slots 1)
#
0000    private var uriString: String

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Class slot assignments for the "HttpDataEvent" class (Num slots 12, num inherited 10)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    reserved slot for static super property
0008    reserved slot for static super property
0009    reserved slot for static super property
0010    -constructor- function HttpDataEvent
0011    -initializer- function HttpDataEvent-initializer

#
#  Instance slot assignments for the "HttpDataEvent" class (Num prop 4, num inherited 4)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "HttpErrorEvent" class (Num slots 12, num inherited 10)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    reserved slot for static super property
0008    reserved slot for static super property
0009    reserved slot for static super property
0010    -constructor- function HttpErrorEvent
0011    -initializer- function HttpErrorEvent-initializer

#
#  Instance slot assignments for the "HttpErrorEvent" class (Num prop 4, num inherited 4)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "TextStream" class (Num slots 21, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function TextStream
0006    -initializer- function TextStream-initializer
0007    public var LATIN1: String
0008    public var UTF_8: String
0009    public var UTF_16: String
0010    public function close
0011    public function encoding
0012    public function set-encoding
0013    [ejs.io::TextStream,private] function fill
0014    public function flush
0015    public function read
0016    public function readLine
0017    public function readLines
0018    public function readString
0019    public function write
0020    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs.io::TextStream,private] var newline: String
0001    [ejs.io::TextStream,private] var inbuf: ByteArray
0002    [ejs.io::TextStream,private] var format: String
0003    [ejs.io::TextStream,private] var nextStream: Stream

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "TextStream" function (Num slots 1)
#
0000    private var stream: Stream

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-encoding" function (Num slots 1)
#
0000    private var encoding: String

#
#  Local slot assignments for the "fill" function (Num slots 1)
#
0000    private var was

#
#  Local slot assignments for the "read" function (Num slots 6)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number
0003    private var total
0004    private var where
0005    -hoisted-5 var len

#
#  Local slot assignments for the "readLine" function (Num slots 3)
#
0000    private var start
0001    -hoisted-1 var c
0002    -hoisted-2 var i

#
#  Local slot assignments for the "readLines" function (Num slots 3)
#
0000    private var numLines: Number
0001    private var result: Array
0002    -hoisted-2 var i

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Local slot assignments for the "writeLine" function (Num slots 4)
#
0000    private var lines: Array
0001    private var written
0002    private var count
0003    -hoisted-3 var line

#
#  Class slot assignments for the "XMLHttp" class (Num slots 27, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function XMLHttp
0006    -initializer- function XMLHttp-initializer
0007    public var Uninitialized
0008    public var Open
0009    public var Sent
0010    public var Receiving
0011    public var Loaded
0012    public function abort
0013    public function http
0014    public function readyState
0015    public function responseText
0016    public function responseXML
0017    public function responseBody
0018    public function status
0019    public function statusText
0020    public function getAllResponseHeaders
0021    public function getResponseHeader
0022    public function open
0023    public function send
0024    public function setRequestHeader
0025    [ejs.io::XMLHttp,private] function callback
0026    [ejs.io::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs.io::XMLHttp,private] var hp: Http
0001    [ejs.io::XMLHttp,private] var state: Number
0002    [ejs.io::XMLHttp,private] var response: ByteArray
0003    public function onreadystatechange

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "getAllResponseHeaders" function (Num slots 2)
#
0000    private var result: String
0001    -hoisted-1 var key

#
#  Local slot assignments for the "getResponseHeader" function (Num slots 1)
#
0000    private var key: String

#
#  Local slot assignments for the "open" function (Num slots 7)
#
0000    private var method: String
0001    private var url: String
0002    private var async: Boolean
0003    private var user: String
0004    private var password: String
0005    -hoisted-5 var timeout
0006    -hoisted-6 var when: Date

#
#  Local slot assignments for the "send" function (Num slots 1)
#
0000    private var content: String

#
#  Local slot assignments for the "setRequestHeader" function (Num slots 2)
#
0000    private var key: String
0001    private var value: String

#
#  Local slot assignments for the "callback" function (Num slots 3)
#
0000    private var e: Event
0001    private var hp: Http
0002    private var count

#
#  Class slot assignments for the "App" class (Num slots 20, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function App-initializer
0006    public var UTF_8: Number
0007    public var UTF_16: Number
0008    public function args
0009    public function dir
0010    public function getEnv
0011    public function exit
0012    public function name
0013    public function noexit
0014    public function serviceEvents
0015    public function sleep
0016    public function title
0017    public function version
0018    public function workingDir
0019    public function set-workingDir

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "getEnv" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "exit" function (Num slots 1)
#
0000    private var status: Number

#
#  Local slot assignments for the "noexit" function (Num slots 1)
#
0000    private var exit: Boolean

#
#  Local slot assignments for the "serviceEvents" function (Num slots 2)
#
0000    private var count: Number
0001    private var timeout: Number

#
#  Local slot assignments for the "sleep" function (Num slots 1)
#
0000    private var delay: Number

#
#  Local slot assignments for the "set-workingDir" function (Num slots 1)
#
0000    private var value: String

#
#  Class slot assignments for the "Config" class (Num slots 22, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public var Debug: Boolean
0006    public var CPU: String
0007    public var DB: Boolean
0008    public var E4X: Boolean
0009    public var Floating: Boolean
0010    public var Http: Boolean
0011    public var Lang: String
0012    public var Legacy: Boolean
0013    public var Multithread: Boolean
0014    public var NumberType: String
0015    public var OS: String
0016    public var Product: String
0017    public var RegularExpressions: Boolean
0018    public var Title: String
0019    public var Version: String
0020    public var LibDir: String
0021    public var BinDir: String

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 15, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function allocatedMemory
0006    public function enabled
0007    public function set-enabled
0008    public function maxMemory
0009    public function set-maxMemory
0010    public function printStats
0011    public function peakMemory
0012    public function workQuota
0013    public function set-workQuota
0014    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "set-enabled" function (Num slots 1)
#
0000    private var on: Boolean

#
#  Local slot assignments for the "set-maxMemory" function (Num slots 1)
#
0000    private var limit: Number

#
#  Local slot assignments for the "set-workQuota" function (Num slots 1)
#
0000    private var quota: Number

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Class slot assignments for the "Memory" class (Num slots 6, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function printStats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 10, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function System-initializer
0006    public var Bufsize: Number
0007    public function hostname
0008    public function run
0009    public function runx

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "hostname" function (Num slots 1)
#
0000    private var fullyQualified: Boolean

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "runx" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "basename" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "close" function (Num slots 2)
#
0000    private var file: File
0001    private var graceful: Boolean

#
#  Local slot assignments for the "cp" function (Num slots 2)
#
0000    private var fromPath: String
0001    private var toPath: String

#
#  Local slot assignments for the "dirname" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "exists" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "extension" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "freeSpace" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "isDir" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "ls" function (Num slots 2)
#
0000    private var path: String
0001    private var enumDirs: Boolean

#
#  Local slot assignments for the "mkdir" function (Num slots 2)
#
0000    private var path: String
0001    private var permissions: Number

#
#  Local slot assignments for the "mv" function (Num slots 2)
#
0000    private var fromFile: String
0001    private var toFile: String

#
#  Local slot assignments for the "open" function (Num slots 4)
#
0000    private var path: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "read" function (Num slots 2)
#
0000    private var file: File
0001    private var count: Number

#
#  Local slot assignments for the "rm" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "rmdir" function (Num slots 2)
#
0000    private var path: String
0001    private var recursive: Boolean

#
#  Local slot assignments for the "tempname" function (Num slots 1)
#
0000    private var directory: String

#
#  Local slot assignments for the "write" function (Num slots 2)
#
0000    private var file: File
0001    private var items: Array

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 20470 bytes)
#
0000   ""
0001   "core/Object.es"
0002   "}"
0003   "internal-0"
0004   "ejs"
0005   "module ejs {"
0006   "	use default namespace intrinsic"
0007   "	dynamic native class Object implements Iterable {"
0008   "        use default namespace public"
0009   "		native function clone(deep: Boolean = true) : Array"
0010   "clone"
0011   "public"
0012   "deep"
0013   "private"
0014   "Boolean"
0015   "intrinsic"
0016   "Array"
0017   "		iterator native function get(deep: Boolean = false, namespaces: Array = null): Iterator"
0018   "get"
0019   "iterator"
0020   "namespaces"
0021   "Iterator"
0022   "		iterator native function getValues(deep: Boolean = false, namespaces: Array = null): Iterator"
0023   "getValues"
0024   "		native function get length(): Number "
0025   "length"
0026   "Number"
0027   "		native function toString(locale: String = null): String"
0028   "toString"
0029   "locale"
0030   "String"
0031   "Object"
0032   "Function"
0033   "block_0014_1"
0034   "-block-"
0035   "core/Boolean.es"
0036   "internal-1"
0037   "	native final class Boolean {"
0038   "		native function Boolean(...value)"
0039   "-constructor-"
0040   "value"
0041   "block_0007_3"
0042   "core/Null.es"
0043   "internal-2"
0044   "	native final class Null {"
0045   "		override iterator native function get(deep: Boolean = false): Iterator"
0046   "		override iterator native function getValues(deep: Boolean = false): Iterator"
0047   "Null"
0048   "block_0007_5"
0049   "core/Number.es"
0050   "internal-3"
0051   "	native final class Number {"
0052   "		native function Number(...value)"
0053   "		native static const MaxValue: Number"
0054   "MaxValue"
0055   "		native static const MinValue: Number"
0056   "MinValue"
0057   "		native function get ceil(): Number "
0058   "ceil"
0059   "		native function get floor(): Number"
0060   "floor"
0061   "		native function get isFinite(): Boolean"
0062   "isFinite"
0063   "		native function get isNaN(): Boolean"
0064   "isNaN"
0065   "		native function get round(): Number"
0066   "round"
0067   "		native function toFixed(fractionDigits: Number = 0): String"
0068   "toFixed"
0069   "fractionDigits"
0070   "		native function toPrecision(numDigits: Number = SOME_DEFAULT): String"
0071   "toPrecision"
0072   "numDigits"
0073   "		native function get abs(): Number"
0074   "abs"
0075   "		function max(other: Number): Number {"
0076   "			return this > other ? this : other"
0077   "max"
0078   "other"
0079   "		function min(other: Number): Number {"
0080   "			return this < other ? this : other"
0081   "min"
0082   "		function power(power: Number): Number {"
0083   "result"
0084   "			var result: Number = this"
0085   "			for (i in power) {"
0086   "i"
0087   "-hoisted-2"
0088   "				result *= result"
0089   "			return result"
0090   "power"
0091   ""
0092   "Block"
0093   "StopIteration"
0094   "Number-initializer"
0095   "-initializer-"
0096   "Void"
0097   "block_0007_7"
0098   "core/String.es"
0099   "internal-4"
0100   "	native final class String {"
0101   "		native function String(...str)"
0102   "str"
0103   "		native function caseCompare(compare: String): Number"
0104   "caseCompare"
0105   "compare"
0106   "		native function charAt(index: Number): String"
0107   "charAt"
0108   "index"
0109   "		native function charCodeAt(index: Number = 0): Number"
0110   "charCodeAt"
0111   "		native function concat(...args): String"
0112   "concat"
0113   "args"
0114   "		native function contains(pattern: Object): Boolean"
0115   "contains"
0116   "pattern"
0117   "		native function endsWith(test: String): Boolean"
0118   "endsWith"
0119   "test"
0120   "		native function format(...args): String"
0121   "format"
0122   "		native static function fromCharCode(...codes): String"
0123   "fromCharCode"
0124   "codes"
0125   "		native function indexOf(pattern: String, startIndex: Number = 0): Number"
0126   "indexOf"
0127   "startIndex"
0128   "		native function get isDigit(): Boolean"
0129   "isDigit"
0130   "		native function get isAlpha(): Boolean"
0131   "isAlpha"
0132   "		native function get isLower(): Boolean"
0133   "isLower"
0134   "		native function get isSpace(): Boolean"
0135   "isSpace"
0136   "		native function get isUpper(): Boolean"
0137   "isUpper"
0138   "		native function lastIndexOf(pattern: String, location: Number = -1): Number"
0139   "lastIndexOf"
0140   "location"
0141   "		override native function get length(): Number"
0142   "		native function match(pattern: RegExp): Array"
0143   "match"
0144   "RegExp"
0145   "		native function toCamel(): String"
0146   "toCamel"
0147   "		native function toPascal(): String"
0148   "toPascal"
0149   "		native function printable(): String"
0150   "printable"
0151   "		native function quote(): String"
0152   "quote"
0153   "		native function remove(start: Number, end: Number = -1): String"
0154   "remove"
0155   "start"
0156   "end"
0157   "		native function replace(pattern: Object, replacement: String): String"
0158   "replace"
0159   "replacement"
0160   "		native function reverse(): String"
0161   "reverse"
0162   "		native function search(pattern: Object): Number"
0163   "search"
0164   "		native function slice(start: Number, end: Number = -1, step: Number = 1): String"
0165   "slice"
0166   "step"
0167   "		native function split(delimiter: Object, limit: Number = -1): Array"
0168   "split"
0169   "delimiter"
0170   "limit"
0171   "		native function startsWith(test: String): Boolean"
0172   "startsWith"
0173   "		native function substring(startIndex: Number, end: Number = -1): String"
0174   "substring"
0175   "		function times(times: Number): String {"
0176   "s"
0177   "			var s: String = """
0178   "			for (i in times) {"
0179   "				s += this"
0180   "			return s"
0181   "times"
0182   "		native function tokenize(format: String): Array"
0183   "tokenize"
0184   "		native function toLower(locale: String = null): String"
0185   "toLower"
0186   "		override native function toString(locale: String = null): String"
0187   "		native function toUpper(locale: String = null): String"
0188   "toUpper"
0189   "		native function trim(str: String = null): String"
0190   "trim"
0191   "		function - (str: String): String {"
0192   "			var i: Number = indexOf(str)"
0193   "			return remove(i, i + str.length)"
0194   "-"
0195   "		function % (obj: Object): String {"
0196   "			return format(obj)"
0197   "%"
0198   "obj"
0199   "block_0007_10"
0200   "core/Void.es"
0201   "internal-5"
0202   "	native final class Void {"
0203   "block_0007_16"
0204   "core/Function.es"
0205   "internal-6"
0206   "	native final class Function {"
0207   "		native function apply(thisObject: Object, args: Array): Object "
0208   "apply"
0209   "thisObject"
0210   "		native function call(thisObject: Object, ...args): Object "
0211   "call"
0212   "block_0007_18"
0213   "core/Array.es"
0214   "internal-7"
0215   "	dynamic native class Array {"
0216   "		native function Array(...values)"
0217   "values"
0218   "		native function append(obj: Object): Array"
0219   "append"
0220   "		native function clear() : Void"
0221   "clear"
0222   "		override native function clone(deep: Boolean = true) : Array"
0223   "		native function compact() : Array"
0224   "compact"
0225   "		native function concat(...args): Array "
0226   "		function contains(element: Object): Boolean {"
0227   "            if (indexOf(element) >= 0) {"
0228   "                return true"
0229   "            } else {"
0230   "                return false"
0231   "        }"
0232   "element"
0233   "		function every(match: Function): Boolean {"
0234   "			for (let i: Number in this) {"
0235   "-hoisted-1"
0236   "				if (!match(this[i], i, this)) {"
0237   "					return false"
0238   "			return true"
0239   "every"
0240   "		function filter(match: Function): Array {"
0241   "			return findAll(match)"
0242   "filter"
0243   "		function find(match: Function): Object {"
0244   "			var result: Array = new Array"
0245   "				if (match(this[i], i, this)) {"
0246   "					return this[i]"
0247   "find"
0248   "		function findAll(match: Function): Array {"
0249   "					result.append(this[i])"
0250   "findAll"
0251   "		function forEach(modifier: Function, thisObj: Object = null): Void {"
0252   "			transform(modifier)"
0253   "		}"
0254   "forEach"
0255   "modifier"
0256   "thisObj"
0257   "		native function indexOf(element: Object, startIndex: Number = 0): Number"
0258   "		native function insert(pos: Number, ...args): Array"
0259   "insert"
0260   "pos"
0261   "		native function join(sep: String = undefined): String"
0262   "join"
0263   "sep"
0264   "		native function lastIndexOf(element: Object, fromIndex: Number = 0): Number"
0265   "fromIndex"
0266   "		native function set length(value: Number): Void"
0267   "set-length"
0268   "		function map(mapper: Function): Array {"
0269   "			var result: Array  = clone()"
0270   "			result.transform(mapper)"
0271   "map"
0272   "mapper"
0273   "		native function pop(): Object "
0274   "pop"
0275   "		native function push(...items): Number "
0276   "push"
0277   "items"
0278   "		function reject(match: Function): Array {"
0279   "reject"
0280   "		function remove(start: Number, end: Number = -1): Void {"
0281   "			if (start < 0) {"
0282   "				start += length"
0283   "			if (end < 0) {"
0284   "				end += length"
0285   "			}"
0286   "			splice(start, end - start + 1)"
0287   "		native function reverse(): Array "
0288   "		native function shift(): Object "
0289   "shift"
0290   "		native function slice(start: Number, end: Number = -1, step: Number = 1): Array "
0291   "		function some(match: Function): Boolean {"
0292   "					return true"
0293   "			return false"
0294   "some"
0295   "		native function sort(compare: Function = null, order: Number = 1): Array "
0296   "sort"
0297   "order"
0298   "		native function splice(start: Number, deleteCount: Number, ...values): Array "
0299   "splice"
0300   "deleteCount"
0301   "		override native function toString(locale: String = null): String "
0302   "		function transform(mapper: Function): Void {"
0303   "				this[i] = mapper(this[i], i, this);"
0304   "transform"
0305   "		native function unique(): Array"
0306   "unique"
0307   "		function unshift(...items): Object {"
0308   "			return insert(0, items)"
0309   "unshift"
0310   "block_0007_20"
0311   "core/Block.es"
0312   "internal-8"
0313   "	native final class Block {"
0314   "block_0007_37"
0315   "core/ByteArray.es"
0316   "internal-9"
0317   "	use strict"
0318   "	native final class ByteArray implements Stream {"
0319   "		static const LittleEndian: Number 	= 0"
0320   "LittleEndian"
0321   "		static const BigEndian: Number 		= 1"
0322   "BigEndian"
0323   "		native function ByteArray(size: Number = -1, growable: Boolean = false)"
0324   "ByteArray"
0325   "size"
0326   "growable"
0327   "		native function get available(): Number "
0328   "available"
0329   "		function close(graceful: Boolean = false): Void"
0330   "            flush()"
0331   "close"
0332   "graceful"
0333   "        native function copyIn(destOffset: Number, src: ByteArray, srcOffset: Number = 0, count: Number = -1): Void"
0334   "copyIn"
0335   "destOffset"
0336   "src"
0337   "srcOffset"
0338   "count"
0339   "		native function copyOut(srcOffset: Number, dest: ByteArray, destOffset: Number = 0, count: Number = -1): Number"
0340   "copyOut"
0341   "dest"
0342   "		native function get endian(): Number"
0343   "endian"
0344   "		native function set endian(value: Number): Void"
0345   "set-endian"
0346   "		native function flush(): Void"
0347   "flush"
0348   "		native function set input(value: Function): Void"
0349   "set-input"
0350   "		native function get input(): Function"
0351   "input"
0352   "		native function set output(callback: Function): Void"
0353   "set-output"
0354   "callback"
0355   "		native function get output(): Function"
0356   "output"
0357   "		native function read(buffer: ByteArray, offset: Number = -1, count: Number = -1): Number"
0358   "read"
0359   "buffer"
0360   "offset"
0361   "		native function readBoolean(): Boolean"
0362   "readBoolean"
0363   "		native function readByte(): Number"
0364   "readByte"
0365   "		native function readDate(): Date"
0366   "readDate"
0367   "Date"
0368   "		native function readDouble(): Date"
0369   "readDouble"
0370   "		native function readInteger(): Number"
0371   "readInteger"
0372   "		native function readLong(): Number"
0373   "readLong"
0374   "		native function get readPosition(): Number"
0375   "readPosition"
0376   "		native function set readPosition(position: Number): Void"
0377   "set-readPosition"
0378   "position"
0379   "		native function readShort(): Number"
0380   "readShort"
0381   "		native function readString(count: Number = -1): String"
0382   "readString"
0383   "		native function readXML(): XML"
0384   "readXML"
0385   "XML"
0386   "        native function reset(): Void"
0387   "reset"
0388   "		native function get room(): Number "
0389   "room"
0390   "		native function write(...data): Number"
0391   "write"
0392   "data"
0393   "		native function writeByte(data: Number): Void"
0394   "writeByte"
0395   "		native function writeShort(data: Number): Void"
0396   "writeShort"
0397   "		native function writeDouble(data: Number): Void"
0398   "writeDouble"
0399   "		native function writeInteger(data: Number): Void"
0400   "writeInteger"
0401   "		native function writeLong(data: Number): Void"
0402   "writeLong"
0403   "		native function get writePosition(): Number"
0404   "writePosition"
0405   "		native function set writePosition(position: Number): Void"
0406   "set-writePosition"
0407   "ByteArray-initializer"
0408   "block_0007_39"
0409   "core/Date.es"
0410   "internal-10"
0411   "	native final class Date {"
0412   "        native function Date(...args)"
0413   "		native function get day(): Number "
0414   "day"
0415   "		native function get dayOfYear(): Number "
0416   "dayOfYear"
0417   "		native function get date(): Number "
0418   "date"
0419   "		native function get elapsed(): Number"
0420   "elapsed"
0421   "		native function get fullYear(): Number "
0422   "fullYear"
0423   "		native function set fullYear(year: Number): void"
0424   "set-fullYear"
0425   "year"
0426   "		native function format(layout: String): String "
0427   "layout"
0428   "		native function get hours(): Number "
0429   "hours"
0430   "		native function set hours(hour: Number): void"
0431   "set-hours"
0432   "hour"
0433   "		native function get milliseconds(): Number "
0434   "milliseconds"
0435   "		native function set milliseconds(ms: Number): void"
0436   "set-milliseconds"
0437   "ms"
0438   "		native function get minutes(): Number "
0439   "minutes"
0440   "		native function set minutes(min: Number): void"
0441   "set-minutes"
0442   "		native function get month(): Number "
0443   "month"
0444   "		native function set month(month: Number): void"
0445   "set-month"
0446   "		native function nextDay(inc: Number = 1): Date"
0447   "nextDay"
0448   "inc"
0449   "		static native function now(): Number"
0450   "now"
0451   "		static native function parseDate(arg: String, defaultDate: Date = undefined): Date"
0452   "parseDate"
0453   "arg"
0454   "defaultDate"
0455   "		native function get seconds(): Number "
0456   "seconds"
0457   "		native function set seconds(sec: Number): void"
0458   "set-seconds"
0459   "sec"
0460   "		native static function get time(): Number "
0461   "time"
0462   "		native static function set time(value: Number): Number "
0463   "set-time"
0464   "		native function get year(): Number "
0465   "		native function set year(year: Number): void"
0466   "set-year"
0467   "block_0007_41"
0468   "core/Error.es"
0469   "internal-11"
0470   "	native dynamic class ArgError extends Error {"
0471   "		native function ArgError(message: String = null) "
0472   "ArgError"
0473   "message"
0474   "Error"
0475   "code"
0476   "set-code"
0477   "stack"
0478   "	native dynamic class ArithmeticError extends Error {"
0479   "		native function ArithmeticError(message: String = null) "
0480   "ArithmeticError"
0481   "	native dynamic class AssertError extends Error {"
0482   "		native function AssertError(message: String = null) "
0483   "AssertError"
0484   "	native dynamic class InstructionError extends Error {"
0485   "		native function InstructionError(message: String = null) "
0486   "InstructionError"
0487   "	native dynamic class Error {"
0488   "		native var message: String"
0489   "		native function get code(): Number"
0490   "		native function set code(value: Number): Void"
0491   "		native var stack: String "
0492   "		native function Error(message: String = null)"
0493   "	native dynamic class IOError extends Error {"
0494   "		native function IOError(message: String = null) "
0495   "IOError"
0496   "	native dynamic class InternalError extends Error {"
0497   "		native function InternalError(message: String = null) "
0498   "InternalError"
0499   "	native dynamic class MemoryError extends Error {"
0500   "		native function MemoryError(message: String = null) "
0501   "MemoryError"
0502   "	native dynamic class OutOfBoundsError extends Error {"
0503   "		native function OutOfBoundsError(message: String = null) "
0504   "OutOfBoundsError"
0505   "	native dynamic class ReferenceError extends Error {"
0506   "		native function ReferenceError(message: String = null)"
0507   "ReferenceError"
0508   "	native dynamic class ResourceError extends Error {"
0509   "		native function ResourceError(message: String = null) "
0510   "ResourceError"
0511   "	native dynamic class StateError extends Error {"
0512   "		native function StateError(message: String = null) "
0513   "StateError"
0514   "	native dynamic class SyntaxError extends Error {"
0515   "		native function SyntaxError(message: String = null) "
0516   "SyntaxError"
0517   "	native dynamic class TypeError extends Error {"
0518   "		native function TypeError(message: String = null) "
0519   "TypeError"
0520   "	native dynamic class URIError extends Error {"
0521   "		native function URIError(message: String = null) "
0522   "URIError"
0523   "block_0007_43"
0524   "core/Iterator.es"
0525   "internal-12"
0526   "	iterator interface Iterable {"
0527   "Iterable"
0528   "	iterator native final class Iterator {"
0529   "		native function next(): Object"
0530   "next"
0531   "block_0009_45"
0532   "core/JSON.es"
0533   "internal-13"
0534   "	final class JSON {"
0535   "		static function parse(data: String, filter: Function = null): Object {"
0536   "            return deserialize(data)"
0537   "parse"
0538   "		static function stringify(obj: Object, replacer: Object = null, indent: Number = 0): String {"
0539   "            return serialize(obj)"
0540   "stringify"
0541   "replacer"
0542   "indent"
0543   "JSON"
0544   "block_0007_47"
0545   "core/Math.es"
0546   "internal-14"
0547   "block_0007_49"
0548   "core/Name.es"
0549   "internal-15"
0550   "block_0007_51"
0551   "core/Namespace.es"
0552   "internal-16"
0553   "	native final class Namespace {"
0554   "		native var name: String"
0555   "name"
0556   "		native var uri: String"
0557   "uri"
0558   "Namespace"
0559   "block_0009_53"
0560   "core/Reflect.es"
0561   "internal-17"
0562   "    native final class Reflect {"
0563   "        native private var obj: Object"
0564   "[intrinsic::Reflect,private]"
0565   "        native function Reflect(o: Object)"
0566   "Reflect"
0567   "o"
0568   "        native function get name(): String"
0569   "        native function get type(): Type"
0570   "type"
0571   "Type"
0572   "        native function get typeName(): String"
0573   "typeName"
0574   "    function typeOf(o): String {"
0575   "        return Reflect(o).typeName()"
0576   "typeOf"
0577   "block_0007_55"
0578   "core/RegExp.es"
0579   "internal-18"
0580   "	native final class RegExp {"
0581   "		native function RegExp(pattern: String, flags: String = null)"
0582   "flags"
0583   "		native function get lastIndex(): Number"
0584   "lastIndex"
0585   "		native function set lastIndex(value: Number): Void"
0586   "set-lastIndex"
0587   "		native function exec(str: String, start: Number = 0): Array"
0588   "exec"
0589   "		native function get global(): Boolean"
0590   "global"
0591   "		native function get ignoreCase(): Boolean"
0592   "ignoreCase"
0593   "		native function get multiline(): Boolean"
0594   "multiline"
0595   "		native function get source(): String"
0596   "source"
0597   "		native function get matched(): String"
0598   "matched"
0599   "		function replace(str: String, replacement: Object): String {"
0600   "            return str(this, replacement)"
0601   "		function split(target: String): Array {"
0602   "            return target.split(this)"
0603   "target"
0604   "		native function get start(): Number"
0605   "		native function get sticky(): Boolean"
0606   "sticky"
0607   "		native function test(str: String): Boolean"
0608   "block_0007_57"
0609   "core/Stream.es"
0610   "internal-19"
0611   "    use default namespace intrinsic"
0612   "	interface Stream {"
0613   "Stream"
0614   "block_0007_59"
0615   "core/Type.es"
0616   "internal-20"
0617   "	native final class Type {"
0618   "block_0007_61"
0619   "core/Global.es"
0620   "internal-21"
0621   "	public namespace public"
0622   "	public namespace internal"
0623   "internal"
0624   "	public namespace intrinsic"
0625   "	public namespace iterator"
0626   "	public namespace CONFIG"
0627   "CONFIG"
0628   "	use namespace iterator"
0629   "	use namespace "ejs.sys""
0630   "ejs.sys"
0631   "TODO"
0632   "	const TODO: Boolean = false"
0633   "	const FUTURE: Boolean = false"
0634   "FUTURE"
0635   "	const ASC: Boolean = false"
0636   "ASC"
0637   "	const DOC_ONLY: Boolean = false"
0638   "DOC_ONLY"
0639   "	const DEPRECATED: Boolean = false"
0640   "DEPRECATED"
0641   "	const REGEXP: Boolean = true"
0642   "REGEXP"
0643   "	native const boolean: Type = Boolean"
0644   "boolean"
0645   "	native const double: Type = Number"
0646   "double"
0647   "	native const num: Type = Number"
0648   "num"
0649   "	native const string: Type = String"
0650   "string"
0651   "	native const false: Boolean"
0652   "false"
0653   "	native var global: Object"
0654   "	native const null: Null"
0655   "null"
0656   "	native const Infinity: Number"
0657   "Infinity"
0658   "	native const NegativeInfinity: Number"
0659   "NegativeInfinity"
0660   "	native const NaN: Number"
0661   "NaN"
0662   "    iterator native final class StopIteration {}"
0663   "	native const true: Boolean"
0664   "true"
0665   "	native const undefined: Void"
0666   "undefined"
0667   "	native const void: Type = Void"
0668   "void"
0669   "	native function assert(condition: Boolean): Boolean"
0670   "assert"
0671   "condition"
0672   "    native function breakpoint(): Void"
0673   "breakpoint"
0674   "	native function cloneBase(klass: Type): Void"
0675   "cloneBase"
0676   "klass"
0677   "	native function deserialize(obj: String): Object"
0678   "deserialize"
0679   "	function dump(...args): Void {"
0680   "		for each (var e: Object in args) {"
0681   "e"
0682   "			print(serialize(e))"
0683   "	}"
0684   "dump"
0685   "	native function eprint(...args): void"
0686   "eprint"
0687   "	native function formatStack(): String"
0688   "formatStack"
0689   "    native function hashcode(o: Object): Number"
0690   "hashcode"
0691   "	native function load(file: String): Void"
0692   "load"
0693   "file"
0694   "	native function print(...args): void"
0695   "print"
0696   "	native function printv(...args): void"
0697   "printv"
0698   "	native function parse(input: String, preferredType: Type = null): Object"
0699   "preferredType"
0700   "	native function serialize(obj: Object, maxDepth: Number = 0, all: Boolean = false, base: Boolean = false): String"
0701   "serialize"
0702   "maxDepth"
0703   "all"
0704   "base"
0705   "    function printHash(name: String, o: Object): Void {"
0706   "        print("%20s %X" % [name, hashcode(o)])"
0707   "%20s %X"
0708   "    }"
0709   "printHash"
0710   "block_0034_63"
0711   "xml/XML.es"
0712   "internal-25"
0713   "	native final class XML extends Object {"
0714   "		native function XML(value: Object = null)"
0715   "		native function load(filename: String): Void"
0716   "filename"
0717   "		native function save(filename: String): Void"
0718   "save"
0719   "		static var ignoreComments: Boolean"
0720   "ignoreComments"
0721   "		static var ignoreProcessingInstructions: Boolean"
0722   "ignoreProcessingInstructions"
0723   "		static var ignoreWhitespace: Boolean"
0724   "ignoreWhitespace"
0725   "		static var prettyPrinting: Boolean"
0726   "prettyPrinting"
0727   "		static var prettyIndent: Boolean"
0728   "prettyIndent"
0729   "		native function addNamespace(ns: Namespace): XML"
0730   "addNamespace"
0731   "ns"
0732   "		native function appendChild(child: XML): XML"
0733   "appendChild"
0734   "child"
0735   "		native function attribute(name: String): XMLList"
0736   "attribute"
0737   "XMLList"
0738   "		native function attributes(): XMLList"
0739   "attributes"
0740   "		native function child(name: String): XMLList"
0741   "		native function childIndex(): Number"
0742   "childIndex"
0743   "		native function children(): XMLList"
0744   "children"
0745   "		native function comments(): XMLList"
0746   "comments"
0747   "		native function contains(obj: Object): Boolean"
0748   "		native function copy(): XML"
0749   "copy"
0750   "		native function defaultSettings(): Object"
0751   "defaultSettings"
0752   "		native function descendants(name: String = "*"): Object"
0753   "descendants"
0754   "		native function elements(name: String = "*"): XMLList"
0755   "elements"
0756   "		native function hasComplexContent(): Boolean"
0757   "hasComplexContent"
0758   "		native function hasSimpleContent(): Boolean"
0759   "hasSimpleContent"
0760   "		native function inScopeNamespaces(): Array"
0761   "inScopeNamespaces"
0762   "		native function insertChildAfter(marker: Object, child: Object): XML"
0763   "insertChildAfter"
0764   "marker"
0765   "		native function insertChildBefore(marker: Object, child: Object): XML"
0766   "insertChildBefore"
0767   "		override native function length(): Number"
0768   "		native function localName(): String"
0769   "localName"
0770   "		native function name(): String"
0771   "		native function namespace(prefix: String = null): Object"
0772   "namespace"
0773   "prefix"
0774   "		native function namespaceDeclarations(): Array"
0775   "namespaceDeclarations"
0776   "		native function nodeKind(): String"
0777   "nodeKind"
0778   "		native function normalize(): XML"
0779   "normalize"
0780   "		native function parent(): XML"
0781   "parent"
0782   "		native function prependChild(child: Object): XML"
0783   "prependChild"
0784   "		native function processingInstructions(name: String = "*"): XMLList"
0785   "processingInstructions"
0786   "		native function replace(property: Object, value: Object): void"
0787   "property"
0788   "		native function setChildren(properties: Object): XML"
0789   "setChildren"
0790   "properties"
0791   "		native function setLocalName(name: String): void"
0792   "setLocalName"
0793   "		native function setName(name: String): void"
0794   "setName"
0795   "		native function settings(): Object"
0796   "settings"
0797   "		native function setSettings(settings: Object): void"
0798   "setSettings"
0799   "		native function text(name: String = "*"): XMLList"
0800   "text"
0801   "		native function toXMLString(): String "
0802   "toXMLString"
0803   "		override native function toString(): String "
0804   "block_0011_82"
0805   "xml/XMLList.es"
0806   "internal-26"
0807   "	native final class XMLList extends Object {"
0808   "		native function XMLList() "
0809   "block_0007_84"
0810   "__initializer__"

==============================================================================================

MODULE:   ejs.events <hasInitializer, boundGlobals>


FUNCTION:   [initializer]  intrinsic function __initializer__() : Void

   LOCAL:   [local-00] var block_0007_66 : Block
   LOCAL:   [local-01] var block_0007_68 : Block
   LOCAL:   [local-02] var block_0007_80 : Block

    0000: [0] 93 00 00 ................... OpenBlock <slot: 0> <0> 
    0003: [0] 33 01 58 11 ................ Debug 

    # events/Event.es:88        }

    0007: [0] 01 13 ...................... AddNamespace <internal-22> 
    0009: [0] 01 1f ...................... AddNamespace <ejs.events> 
    0011: [0] 33 01 07 2a ................ Debug 

    # events/Event.es:7         module ejs.events {

    0015: [0] 33 01 16 3e ................ Debug 

    # events/Event.es:22        	class Event {

    0019: [0] 34 aa 02 ................... DefineClass <type: 0x12a,  ejs.events::Event> 
    0022: [0] 23 ......................... CloseBlock 
    0023: [0] 93 01 00 ................... OpenBlock <slot: 1> <0> 
    0026: [0] 33 8d 07 7b 11 ............. Debug 

    # events/Dispatcher.es:123  }

    0031: [0] 01 a2 07 ................... AddNamespace <internal-23> 
    0034: [0] 01 1f ...................... AddNamespace <ejs.events> 
    0036: [0] 33 8d 07 07 2a ............. Debug 

    # events/Dispatcher.es:7    module ejs.events {

    0041: [0] 33 8d 07 1d ae 07 .......... Debug 

    # events/Dispatcher.es:29   	class Dispatcher {

    0047: [0] 34 ae 02 ................... DefineClass <type: 0x12e,  ejs.events::Dispatcher> 
    0050: [0] 33 8d 07 72 a5 11 .......... Debug 

    # events/Dispatcher.es:114  	internal class Endpoint {

    0056: [0] 34 b2 02 ................... DefineClass <type: 0x132,  internal-23::Endpoint> 
    0059: [0] 23 ......................... CloseBlock 
    0060: [0] 93 02 00 ................... OpenBlock <slot: 2> <0> 
    0063: [0] 33 80 13 55 11 ............. Debug 

    # events/Timer.es:85        }

    0068: [0] 01 90 13 ................... AddNamespace <internal-24> 
    0071: [0] 01 1f ...................... AddNamespace <ejs.events> 
    0073: [0] 33 80 13 07 2a ............. Debug 

    # events/Timer.es:7         module ejs.events {

    0078: [0] 33 80 13 15 9c 13 .......... Debug 

    # events/Timer.es:21        	native class Timer {

    0084: [0] 34 b6 02 ................... DefineClass <type: 0x136,  ejs.events::Timer> 
    0087: [0] 33 80 13 53 b6 16 .......... Debug 

    # events/Timer.es:83        	class TimerEvent extends Event {

    0093: [0] 34 ba 02 ................... DefineClass <type: 0x13a,  ejs.events::TimerEvent> 
    0096: [0] 23 ......................... CloseBlock 
    0097: [0] 3d ......................... EndCode 
    

BLOCK:      [__initializer__-00]  block_0007_66 (Slots 0)

BLOCK:      [__initializer__-01]  block_0007_68 (Slots 0)

BLOCK:      [__initializer__-02]  block_0007_80 (Slots 0)

CLASS:      class Event extends Object
            #  Class Details: 10 class traits, 4 instance traits, requested slot 74

FUNCTION:   [Event-04]  public override function toString() : String


    0000: [0] 33 01 55 b6 05 ............. Debug 

    # events/Event.es:85        			return "[Event: " +  Reflect(this).typeName + "]"

    0005: [0] 5c eb 05 ................... LoadString <[Event: > 
    0008: [1] 5d ......................... LoadThis 
    0009: [2] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0012: [1] 99 ......................... PushResult 
    0013: [2] 87 08 00 ................... GetTypeSlot <slot: 8> <0> 
    0016: [2] 00 ......................... Add 
    0017: [1] 5c f4 05 ................... LoadString <]> 
    0020: [2] 00 ......................... Add 
    0021: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [Event-05]  -constructor- function Event(data: Object, bubbles: Boolean, priority: Number) : void

     ARG:   [arg-00]   private data : Object
     ARG:   [arg-01]   private bubbles : Boolean
     ARG:   [arg-02]   private priority : Number

    0000: [0] 43 04 04 07 0a 0e .......... InitDefaultArgs.8 <4> <6> <9> <12> <16> 
    0006: [0] 83 34 ...................... GetGlobalSlot <52> 
    0008: [1] 9a ......................... PutLocalSlot_0 
    0009: [0] 83 32 ...................... GetGlobalSlot <50> 
    0011: [1] 9b ......................... PutLocalSlot_1 
    0012: [0] 88 08 01 ................... GetThisTypeSlot <slot: 8> <1> 
    0015: [1] 9c ......................... PutLocalSlot_2 
    0016: [0] 33 01 4d fc 03 ............. Debug 

    # events/Event.es:77        			this.timestamp = new Date

    0021: [0] 83 0a ...................... GetGlobalSlot <10> 
    0023: [1] 8e ......................... New 
    0024: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0026: [1] 5d ......................... LoadThis 
    0027: [2] a6 ......................... PutObjSlot_2 
    0028: [0] 33 01 4e 99 04 ............. Debug 

    # events/Event.es:78        			this.data = data

    0033: [0] 61 ......................... GetLocalSlot_0 
    0034: [1] 5d ......................... LoadThis 
    0035: [2] a5 ......................... PutObjSlot_1 
    0036: [0] 33 01 4f ad 04 ............. Debug 

    # events/Event.es:79        			this.priority = priority

    0041: [0] 63 ......................... GetLocalSlot_2 
    0042: [1] 5d ......................... LoadThis 
    0043: [2] a7 ......................... PutObjSlot_3 
    0044: [0] 33 01 50 c9 04 ............. Debug 

    # events/Event.es:80        			this.bubbles = bubbles

    0049: [0] 62 ......................... GetLocalSlot_1 
    0050: [1] 5d ......................... LoadThis 
    0051: [2] a4 ......................... PutObjSlot_0 
    0052: [0] c4 ......................... Return 
    0053: [0] 33 01 51 e3 04 ............. Debug 

    # events/Event.es:81        		}
    

VARIABLE:   [Event-00]  private var data : Object

VARIABLE:   [Event-01]  private var bubbles : Boolean

VARIABLE:   [Event-02]  private var priority : Number

FUNCTION:   [Event-06]  -initializer- function Event-initializer() : Void


    0000: [0] 33 01 18 4d ................ Debug 

    # events/Event.es:24                use default namespace public

    0004: [0] 83 23 ...................... GetGlobalSlot <35> 
    0006: [1] 02 ......................... AddNamespaceRef 
    0007: [0] 33 01 1d 72 ................ Debug 

    # events/Event.es:29        		static const	PRI_LOW: Number		= 25;

    0011: [0] 56 19 ...................... LoadInt.8 <25> 
    0013: [1] 83 4a ...................... GetGlobalSlot <74> 
    0015: [2] ab ......................... PutObjSlot_7 
    0016: [0] 33 01 23 ae 01 ............. Debug 

    # events/Event.es:35        		static const	PRI_NORMAL: Number	= 50;

    0021: [0] 56 32 ...................... LoadInt.8 <50> 
    0023: [1] 83 4a ...................... GetGlobalSlot <74> 
    0025: [2] ac ......................... PutObjSlot_8 
    0026: [0] 33 01 29 e1 01 ............. Debug 

    # events/Event.es:41        		static const	PRI_HIGH: Number	= 75;

    0031: [0] 56 4b ...................... LoadInt.8 <75> 
    0033: [1] 83 4a ...................... GetGlobalSlot <74> 
    0035: [2] ad ......................... PutObjSlot_9 
    0036: [0] 33 01 2f a0 02 ............. Debug 

    # events/Event.es:47        		var bubbles: Boolean

    0041: [0] 33 01 36 b7 02 ............. Debug 

    # events/Event.es:54        		var data: Object

    0046: [0] 33 01 3c d6 02 ............. Debug 

    # events/Event.es:60        		var timestamp: Date

    0051: [0] 33 01 43 fb 02 ............. Debug 

    # events/Event.es:67        		var priority: Number

    0056: [0] 33 01 4c 9b 03 ............. Debug 

    # events/Event.es:76        		function Event(data: Object = null, bubbles: Boolean = false, priority: Number = PRI_NORMAL) {

    0061: [0] 33 01 54 8d 05 ............. Debug 

    # events/Event.es:84        		override function toString(): String {

    0066: [0] c4 ......................... Return 
    

VARIABLE:   [Event-07]  public static var PRI_LOW : Number

VARIABLE:   [Event-08]  public static var PRI_NORMAL : Number

VARIABLE:   [Event-09]  public static var PRI_HIGH : Number

VARIABLE:   [EventInstanceType-00]  public var bubbles : Boolean

VARIABLE:   [EventInstanceType-01]  public var data : Object

VARIABLE:   [EventInstanceType-02]  public var timestamp : Date

VARIABLE:   [EventInstanceType-03]  public var priority : Number

CLASS:      class Dispatcher extends Object
            #  Class Details: 9 class traits, 1 instance traits, requested slot 75

FUNCTION:   [Dispatcher-05]  -constructor- function Dispatcher() : void


    0000: [0] 33 8d 07 26 f8 07 .......... Debug 

    # events/Dispatcher.es:38   			events = new Object

    0006: [0] 83 00 ...................... GetGlobalSlot <0> 
    0008: [1] 8e ......................... New 
    0009: [1] ae ......................... PutThisSlot_0 
    0010: [0] c4 ......................... Return 
    0011: [0] 33 8d 07 27 e3 04 .......... Debug 

    # events/Dispatcher.es:39   		}
    

FUNCTION:   [Dispatcher-06]  public function addListener(callback: Function, eventType: Type) : Void

     ARG:   [arg-00]   private callback : Function
     ARG:   [arg-01]   private eventType : Type
   LOCAL:   [local-02] var name
   LOCAL:   [local-03] var listeners : Array
   LOCAL:   [local-04] var e

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 4a ...................... GetGlobalSlot <74> 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 8d 07 31 eb 08 .......... Debug 

    # events/Dispatcher.es:49               var name = Reflect(eventType).name

    0013: [0] 62 ......................... GetLocalSlot_1 
    0014: [1] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0017: [0] 99 ......................... PushResult 
    0018: [1] 87 06 00 ................... GetTypeSlot <slot: 6> <0> 
    0021: [1] 9c ......................... PutLocalSlot_2 
    0022: [0] 33 8d 07 32 9a 09 .......... Debug 

    # events/Dispatcher.es:50   			var listeners : Array

    0028: [0] 33 8d 07 34 bd 09 .......... Debug 

    # events/Dispatcher.es:52   			listeners = events[name]

    0034: [0] 75 ......................... GetThisSlot_0 
    0035: [1] 63 ......................... GetLocalSlot_2 
    0036: [2] 81 ......................... GetObjNameExpr 
    0037: [1] 9d ......................... PutLocalSlot_3 
    0038: [0] 33 8d 07 36 d9 09 .......... Debug 

    # events/Dispatcher.es:54   			if (listeners == undefined) {

    0044: [0] 64 ......................... GetLocalSlot_3 
    0045: [1] 83 3a ...................... GetGlobalSlot <58> 
    0047: [2] 25 ......................... CompareEQ 
    0048: [1] 12 12 ...................... BranchFalse.8 <addr: 68> 
    0050: [0] 33 8d 07 37 fa 09 .......... Debug 

    # events/Dispatcher.es:55   				listeners = events[name] = new Array

    0056: [0] 83 07 ...................... GetGlobalSlot <7> 
    0058: [1] 8e ......................... New 
    0059: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0061: [1] 3b ......................... Dup 
    0062: [2] 75 ......................... GetThisSlot_0 
    0063: [3] 63 ......................... GetLocalSlot_2 
    0064: [4] b8 ......................... PutObjNameExpr 
    0065: [1] 9d ......................... PutLocalSlot_3 
    0066: [0] 40 39 ...................... Goto.8 <addr: 125> 
    0068: [0] 33 8d 07 39 a3 0a .......... Debug 

    # events/Dispatcher.es:57   			} else {

    0074: [0] 33 8d 07 3a af 0a .......... Debug 

    # events/Dispatcher.es:58   				for each (var e: Endpoint in listeners) {

    0080: [0] 64 ......................... GetLocalSlot_3 
    0081: [1] 17 02 00 ................... CallObjSlot <slot: 2> <argc: 0> 
    0084: [0] 99 ......................... PushResult 
    0085: [1] 3b ......................... Dup 
    0086: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0089: [1] 99 ......................... PushResult 
    0090: [2] 9e ......................... PutLocalSlot_4 
    0091: [1] 33 8d 07 3b e8 0a .......... Debug 

    # events/Dispatcher.es:59   					if (e.callback == callback && e.eventType == eventType) {

    0097: [1] 65 ......................... GetLocalSlot_4 
    0098: [2] 6b ......................... GetObjSlot_0 
    0099: [3] 61 ......................... GetLocalSlot_0 
    0100: [4] 25 ......................... CompareEQ 
    0101: [3] 22 ......................... CastBoolean 
    0102: [3] 3b ......................... Dup 
    0103: [4] 12 06 ...................... BranchFalse.8 <addr: 111> 
    0105: [3] 96 ......................... Pop 
    0106: [2] 65 ......................... GetLocalSlot_4 
    0107: [3] 6c ......................... GetObjSlot_1 
    0108: [4] 62 ......................... GetLocalSlot_1 
    0109: [5] 25 ......................... CompareEQ 
    0110: [4] 22 ......................... CastBoolean 
    0111: [4] 12 09 ...................... BranchFalse.8 <addr: 122> 
    0113: [3] 33 8d 07 3c a7 0b .......... Debug 

    # events/Dispatcher.es:60   						return

    0119: [3] c4 ......................... Return 
    0120: [0] 40 00 ...................... Goto.8 <addr: 122> 
    0122: [0] 40 d9 ...................... Goto.8 <addr: 85> 
    0124: [0] 96 ......................... Pop 
    0125: [-1] 33 8d 07 3f b4 0b .......... Debug 

    # events/Dispatcher.es:63   			}

    0131: [-1] 33 8d 07 40 b9 0b .......... Debug 

    # events/Dispatcher.es:64   			listeners.append(new Endpoint(callback, eventType))

    0137: [-1] 64 ......................... GetLocalSlot_3 
    0138: [0] 83 4c ...................... GetGlobalSlot <76> 
    0140: [1] 8e ......................... New 
    0141: [1] 61 ......................... GetLocalSlot_0 
    0142: [2] 62 ......................... GetLocalSlot_1 
    0143: [3] 1f 02 ...................... CallConstructor <argc: 2> 
    0145: [1] 17 06 01 ................... CallObjSlot <slot: 6> <argc: 1> 
    0148: [-1] 5a ......................... LoadNull 
    0149: [0] c5 ......................... ReturnValue 
    0150: [0] 33 8d 07 41 e3 04 .......... Debug 

    # events/Dispatcher.es:65   		}
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     86      89        124          124       StopIteration

VARIABLE:   [addListener-00]  private var callback : Function

VARIABLE:   [addListener-01]  private var eventType : Type

VARIABLE:   [addListener-02]  private var name

VARIABLE:   [addListener-03]  private var listeners : Array

VARIABLE:   [addListener-04]  private var e

FUNCTION:   [Dispatcher-07]  public function dispatch(event: Event) : Void

     ARG:   [arg-00]   private event : Event
   LOCAL:   [local-01] var eventListeners : Array
   LOCAL:   [local-02] var name
   LOCAL:   [local-03] var e

    0000: [0] 33 8d 07 49 db 0c .......... Debug 

    # events/Dispatcher.es:73   			var eventListeners : Array

    0006: [0] 33 8d 07 4a f9 0c .......... Debug 

    # events/Dispatcher.es:74               var name = Reflect(event).typeName

    0012: [0] 61 ......................... GetLocalSlot_0 
    0013: [1] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0016: [0] 99 ......................... PushResult 
    0017: [1] 87 08 00 ................... GetTypeSlot <slot: 8> <0> 
    0020: [1] 9c ......................... PutLocalSlot_2 
    0021: [0] 33 8d 07 4c a8 0d .......... Debug 

    # events/Dispatcher.es:76   			eventListeners = events[name]

    0027: [0] 75 ......................... GetThisSlot_0 
    0028: [1] 63 ......................... GetLocalSlot_2 
    0029: [2] 81 ......................... GetObjNameExpr 
    0030: [1] 9b ......................... PutLocalSlot_1 
    0031: [0] 33 8d 07 4d c9 0d .......... Debug 

    # events/Dispatcher.es:77   			if (eventListeners != undefined) {

    0037: [0] 62 ......................... GetLocalSlot_1 
    0038: [1] 83 3a ...................... GetGlobalSlot <58> 
    0040: [2] 2c ......................... CompareNE 
    0041: [1] 12 2f ...................... BranchFalse.8 <addr: 90> 
    0043: [0] 33 8d 07 4e ef 0d .......... Debug 

    # events/Dispatcher.es:78   				for each (var e: Endpoint in eventListeners) {

    0049: [0] 62 ......................... GetLocalSlot_1 
    0050: [1] 17 02 00 ................... CallObjSlot <slot: 2> <argc: 0> 
    0053: [0] 99 ......................... PushResult 
    0054: [1] 3b ......................... Dup 
    0055: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0058: [1] 99 ......................... PushResult 
    0059: [2] 9d ......................... PutLocalSlot_3 
    0060: [1] 33 8d 07 4f a2 0e .......... Debug 

    # events/Dispatcher.es:79   					if (event is e.eventType) {

    0066: [1] 61 ......................... GetLocalSlot_0 
    0067: [2] 64 ......................... GetLocalSlot_3 
    0068: [3] 6c ......................... GetObjSlot_1 
    0069: [4] 45 ......................... IsA 
    0070: [3] 12 0d ...................... BranchFalse.8 <addr: 85> 
    0072: [2] 33 8d 07 50 c3 0e .......... Debug 

    # events/Dispatcher.es:80   						e.callback(event)

    0078: [2] 64 ......................... GetLocalSlot_3 
    0079: [3] 61 ......................... GetLocalSlot_0 
    0080: [4] 1a 00 01 ................... CallObjInstanceSlot <slot: 0> <argc: 1> 
    0083: [2] 40 00 ...................... Goto.8 <addr: 85> 
    0085: [2] 40 df ...................... Goto.8 <addr: 54> 
    0087: [2] 96 ......................... Pop 
    0088: [1] 40 00 ...................... Goto.8 <addr: 90> 
    0090: [1] 5a ......................... LoadNull 
    0091: [2] c5 ......................... ReturnValue 
    0092: [0] 33 8d 07 54 e3 04 .......... Debug 

    # events/Dispatcher.es:84   		}
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     55      58         87           87       StopIteration

VARIABLE:   [dispatch-00]  private var event : Event

VARIABLE:   [dispatch-01]  private var eventListeners : Array

VARIABLE:   [dispatch-02]  private var name

VARIABLE:   [dispatch-03]  private var e

FUNCTION:   [Dispatcher-08]  public function removeListener(callback: Function, eventType: Type) : Void

     ARG:   [arg-00]   private callback : Function
     ARG:   [arg-01]   private eventType : Type
   LOCAL:   [local-02] var name
   LOCAL:   [local-03] var listeners : Array
   LOCAL:   [local-04] var e
   LOCAL:   [local-05] var i

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 4a ...................... GetGlobalSlot <74> 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 8d 07 5d eb 08 .......... Debug 

    # events/Dispatcher.es:93               var name = Reflect(eventType).name

    0013: [0] 62 ......................... GetLocalSlot_1 
    0014: [1] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0017: [0] 99 ......................... PushResult 
    0018: [1] 87 06 00 ................... GetTypeSlot <slot: 6> <0> 
    0021: [1] 9c ......................... PutLocalSlot_2 
    0022: [0] 33 8d 07 5e b9 0f .......... Debug 

    # events/Dispatcher.es:94   			var listeners: Array

    0028: [0] 33 8d 07 60 bd 09 .......... Debug 

    # events/Dispatcher.es:96   			listeners = events[name]

    0034: [0] 75 ......................... GetThisSlot_0 
    0035: [1] 63 ......................... GetLocalSlot_2 
    0036: [2] 81 ......................... GetObjNameExpr 
    0037: [1] 9d ......................... PutLocalSlot_3 
    0038: [0] 33 8d 07 61 d9 09 .......... Debug 

    # events/Dispatcher.es:97   			if (listeners == undefined) {

    0044: [0] 64 ......................... GetLocalSlot_3 
    0045: [1] 83 3a ...................... GetGlobalSlot <58> 
    0047: [2] 25 ......................... CompareEQ 
    0048: [1] 12 09 ...................... BranchFalse.8 <addr: 59> 
    0050: [0] 33 8d 07 62 d1 0f .......... Debug 

    # events/Dispatcher.es:98   				return

    0056: [0] c4 ......................... Return 
    0057: [0] 40 00 ...................... Goto.8 <addr: 59> 
    0059: [0] 33 8d 07 65 dc 0f .......... Debug 

    # events/Dispatcher.es:101  			for (let i in listeners) {

    0065: [0] 64 ......................... GetLocalSlot_3 
    0066: [1] 17 01 00 ................... CallObjSlot <slot: 1> <argc: 0> 
    0069: [0] 99 ......................... PushResult 
    0070: [1] 3b ......................... Dup 
    0071: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0074: [1] 99 ......................... PushResult 
    0075: [2] 9f ......................... PutLocalSlot_5 
    0076: [1] 33 8d 07 66 87 10 .......... Debug 

    # events/Dispatcher.es:102  				var e: Endpoint = listeners[i]

    0082: [1] 64 ......................... GetLocalSlot_3 
    0083: [2] 66 ......................... GetLocalSlot_5 
    0084: [3] 81 ......................... GetObjNameExpr 
    0085: [2] 9e ......................... PutLocalSlot_4 
    0086: [1] 33 8d 07 67 aa 10 .......... Debug 

    # events/Dispatcher.es:103  				if (e.callback == callback && e.eventType == eventType) {

    0092: [1] 65 ......................... GetLocalSlot_4 
    0093: [2] 6b ......................... GetObjSlot_0 
    0094: [3] 61 ......................... GetLocalSlot_0 
    0095: [4] 25 ......................... CompareEQ 
    0096: [3] 22 ......................... CastBoolean 
    0097: [3] 3b ......................... Dup 
    0098: [4] 12 06 ...................... BranchFalse.8 <addr: 106> 
    0100: [3] 96 ......................... Pop 
    0101: [2] 65 ......................... GetLocalSlot_4 
    0102: [3] 6c ......................... GetObjSlot_1 
    0103: [4] 62 ......................... GetLocalSlot_1 
    0104: [5] 25 ......................... CompareEQ 
    0105: [4] 22 ......................... CastBoolean 
    0106: [4] 12 10 ...................... BranchFalse.8 <addr: 124> 
    0108: [3] 33 8d 07 68 e8 10 .......... Debug 

    # events/Dispatcher.es:104  					listeners.remove(i, i + 1)

    0114: [3] 64 ......................... GetLocalSlot_3 
    0115: [4] 66 ......................... GetLocalSlot_5 
    0116: [5] 66 ......................... GetLocalSlot_5 
    0117: [6] 47 ......................... Load1 
    0118: [7] 00 ......................... Add 
    0119: [6] 17 19 02 ................... CallObjSlot <slot: 25> <argc: 2> 
    0122: [3] 40 00 ...................... Goto.8 <addr: 124> 
    0124: [3] 40 c8 ...................... Goto.8 <addr: 70> 
    0126: [3] 96 ......................... Pop 
    0127: [2] 5a ......................... LoadNull 
    0128: [3] c5 ......................... ReturnValue 
    0129: [0] 33 8d 07 6b e3 04 .......... Debug 

    # events/Dispatcher.es:107  		}
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     71      74        126          126       StopIteration

VARIABLE:   [removeListener-00]  private var callback : Function

VARIABLE:   [removeListener-01]  private var eventType : Type

VARIABLE:   [removeListener-02]  private var name

VARIABLE:   [removeListener-03]  private var listeners : Array

VARIABLE:   [removeListener-04]  private var e

VARIABLE:   [removeListener-05]  -hoisted-5 var i

VARIABLE:   [DispatcherInstanceType-00]  internal-23 var events : Object

CLASS:      class Endpoint extends Object
            #  Class Details: 6 class traits, 2 instance traits, requested slot 76

FUNCTION:   [Endpoint-05]  -constructor- function Endpoint(callback: Function, eventType: Type) : void

     ARG:   [arg-00]   private callback : Function
     ARG:   [arg-01]   private eventType : Type

    0000: [0] 33 8d 07 77 b8 12 .......... Debug 

    # events/Dispatcher.es:119  			this.callback = callback

    0006: [0] 61 ......................... GetLocalSlot_0 
    0007: [1] 5d ......................... LoadThis 
    0008: [2] a4 ......................... PutObjSlot_0 
    0009: [0] 33 8d 07 78 d4 12 .......... Debug 

    # events/Dispatcher.es:120  			this.eventType = eventType

    0015: [0] 62 ......................... GetLocalSlot_1 
    0016: [1] 5d ......................... LoadThis 
    0017: [2] a5 ......................... PutObjSlot_1 
    0018: [0] c4 ......................... Return 
    0019: [0] 33 8d 07 79 e3 04 .......... Debug 

    # events/Dispatcher.es:121  		}
    

VARIABLE:   [Endpoint-00]  private var callback : Function

VARIABLE:   [Endpoint-01]  private var eventType : Type

VARIABLE:   [EndpointInstanceType-00]  public var callback : Function

VARIABLE:   [EndpointInstanceType-01]  public var eventType : Type

CLASS:      native class Timer extends Object
            #  Class Details: 12 class traits, 0 instance traits, requested slot 77

FUNCTION:   [Timer-05]  -constructor- native function Timer(period: Number, callback: Function, drift: Boolean) : void

     ARG:   [arg-00]   private period : Number
     ARG:   [arg-01]   private callback : Function
     ARG:   [arg-02]   private drift : Boolean

    

VARIABLE:   [Timer-00]  private var period : Number

VARIABLE:   [Timer-01]  private var callback : Function

VARIABLE:   [Timer-02]  private var drift : Boolean

FUNCTION:   [Timer-06]  public get function drift() : Boolean


    

FUNCTION:   [Timer-07]  public set function set-drift(enable: Boolean) : Void

     ARG:   [arg-00]   private enable : Boolean

    

VARIABLE:   [set-drift-00]  private var enable : Boolean

FUNCTION:   [Timer-08]  public get function period() : Number


    

FUNCTION:   [Timer-09]  public set function set-period(period: Number) : Void

     ARG:   [arg-00]   private period : Number

    

VARIABLE:   [set-period-00]  private var period : Number

FUNCTION:   [Timer-10]  public native function restart() : Void


    

FUNCTION:   [Timer-11]  public native function stop() : Void


    

CLASS:      class TimerEvent extends Event
            #  Class Details: 12 class traits, 4 instance traits, requested slot 78

FUNCTION:   [TimerEvent-04]  public override function toString() : String


    0000: [0] 33 01 55 b6 05 ............. Debug 

    # events/Event.es:85        			return "[Event: " +  Reflect(this).typeName + "]"

    0005: [0] 5c eb 05 ................... LoadString <[Event: > 
    0008: [1] 5d ......................... LoadThis 
    0009: [2] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0012: [1] 99 ......................... PushResult 
    0013: [2] 87 08 00 ................... GetTypeSlot <slot: 8> <0> 
    0016: [2] 00 ......................... Add 
    0017: [1] 5c f4 05 ................... LoadString <]> 
    0020: [2] 00 ......................... Add 
    0021: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [TimerEvent-10]  -constructor- function TimerEvent() : void


    0000: [0] 20 00 ...................... CallNextConstructor <argc: 0> 
    0002: [0] c4 ......................... Return 
    

FUNCTION:   [TimerEvent-11]  -initializer- function TimerEvent-initializer() : Void


    0000: [0] c4 ......................... Return 
    

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 111, num inherited 0)
#
0081    ejs.io var BinaryStream: Type
0082    ejs.io var File: Type
0083    ejs.io var Http: Type
0084    ejs.io var HttpDataEvent: Type
0085    ejs.io var HttpErrorEvent: Type
0086    ejs.io var TextStream: Type
0087    ejs.io var XMLHttp: Type
0088    ejs.sys var App: Type
0089    public var Config: Type
0090    ejs.sys var GC: Type
0091    ejs.sys var Memory: Type
0092    ejs.sys var System: Type
0093    public function basename
0094    public function close
0095    public function cp
0096    public function dirname
0097    public function exists
0098    public function extension
0099    public function freeSpace
0100    public function isDir
0101    public function ls
0102    public function mkdir
0103    public function mv
0104    public function open
0105    public function pwd
0106    public function read
0107    public function rm
0108    public function rmdir
0109    public function tempname
0110    public function write

#
#  Initializer slot assignments (Num prop 3)
#
0000    -block- var block_0007_66: Block
0001    -block- var block_0007_68: Block
0002    -block- var block_0007_80: Block

#
#  Class slot assignments for the "BinaryStream" class (Num slots 29, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function BinaryStream
0006    -initializer- function BinaryStream-initializer
0007    public var BigEndian: Number
0008    public var LittleEndian: Number
0009    public function close
0010    public function endian
0011    public function set-endian
0012    public function flush
0013    public function read
0014    public function readBoolean
0015    public function readByte
0016    public function readByteArray
0017    public function readDate
0018    public function readDouble
0019    public function readInteger
0020    public function readLong
0021    public function readString
0022    public function readXML
0023    public function write
0024    public function writeByte
0025    public function writeShort
0026    public function writeDouble
0027    public function writeInteger
0028    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs.io::BinaryStream,private] var inbuf: ByteArray
0001    [ejs.io::BinaryStream,private] var outbuf: ByteArray
0002    [ejs.io::BinaryStream,private] var nextStream: Stream

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "BinaryStream" function (Num slots 3)
#
0000    private var stream: Stream
0001    private function --fun_6051--
0002    private function --fun_6072--

#
#  Local slot assignments for the "--fun_6051--" function (Num slots 1)
#
0000    private var buffer: ByteArray

#
#  Local slot assignments for the "--fun_6072--" function (Num slots 1)
#
0000    private var buffer: ByteArray

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-endian" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readByteArray" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readXML" function (Num slots 2)
#
0000    private var data: String
0001    private var s: String

#
#  Local slot assignments for the "write" function (Num slots 3)
#
0000    private var items: Array
0001    private var count: Number
0002    -hoisted-2 var i

#
#  Local slot assignments for the "writeByte" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeShort" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeDouble" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeInteger" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeLong" function (Num slots 1)
#
0000    private var data: Number

#
#  Class slot assignments for the "File" class (Num slots 62, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    reserved slot for static super property
0005    -constructor- function File
0006    -initializer- function File-initializer
0007    public var Closed: Number
0008    public var Open: Number
0009    public var Read: Number
0010    public var Write: Number
0011    public var Append: Number
0012    public var Create: Number
0013    public var Truncate: Number
0014    public function absolutePath
0015    public function basename
0016    public function close
0017    public function copy
0018    public function createTempFile
0019    public function created
0020    public function dirname
0021    public function exists
0022    public function extension
0023    public function flush
0024    public function freeSpace
0025    public function getFiles
0026    public function getBytes
0027    public function getLines
0028    public function getString
0029    public function getXML
0030    public function hasDriveSpec
0031    public function isDir
0032    public function isOpen
0033    public function isRegular
0034    public function lastAccess
0035    public function makeDir
0036    public function mode
0037    public function modified
0038    public function name
0039    public function newline
0040    public function set-newline
0041    public function open
0042    public function openFileStream
0043    public function openTextStream
0044    public function openBinaryStream
0045    public function pathDelimiter
0046    public function set-pathDelimiter
0047    public function parent
0048    public function permissions
0049    public function set-permissions
0050    public function position
0051    public function set-position
0052    public function put
0053    public function relativePath
0054    public function read
0055    public function readBytes
0056    public function remove
0057    public function removeDir
0058    public function rename
0059    public function setCallback
0060    public function unixPath
0061    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "File" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "copy" function (Num slots 1)
#
0000    private var toPath: String

#
#  Local slot assignments for the "createTempFile" function (Num slots 1)
#
0000    private var directory: String

#
#  Local slot assignments for the "freeSpace" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "getFiles" function (Num slots 1)
#
0000    private var enumDirs: Boolean

#
#  Local slot assignments for the "getBytes" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "getLines" function (Num slots 2)
#
0000    private var path: String
0001    private var encoding: String

#
#  Local slot assignments for the "getString" function (Num slots 2)
#
0000    private var path: String
0001    private var encoding: String

#
#  Local slot assignments for the "getXML" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "makeDir" function (Num slots 1)
#
0000    private var permissions: Number

#
#  Local slot assignments for the "set-newline" function (Num slots 1)
#
0000    private var terminator: String

#
#  Local slot assignments for the "open" function (Num slots 2)
#
0000    private var mode: Number
0001    private var permissions: Number

#
#  Local slot assignments for the "openFileStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "openTextStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "openBinaryStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "set-pathDelimiter" function (Num slots 1)
#
0000    private var delim: String

#
#  Local slot assignments for the "set-permissions" function (Num slots 1)
#
0000    private var mask: Number

#
#  Local slot assignments for the "set-position" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "put" function (Num slots 3)
#
0000    private var path: String
0001    private var permissions: Number
0002    private var args: Array

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readBytes" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "removeDir" function (Num slots 1)
#
0000    private var recursive: Boolean

#
#  Local slot assignments for the "rename" function (Num slots 1)
#
0000    private var toFile: String

#
#  Local slot assignments for the "setCallback" function (Num slots 1)
#
0000    private function callback

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var items: Array

#
#  Class slot assignments for the "Http" class (Num slots 92, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Http
0006    -initializer- function Http-initializer
0007    public var Continue: Number
0008    public var Ok: Number
0009    public var Created: Number
0010    public var Accepted: Number
0011    public var NotAuthoritative: Number
0012    public var NoContent: Number
0013    public var Reset: Number
0014    public var Partial: Number
0015    public var MultipleChoice: Number
0016    public var MovedPermanently: Number
0017    public var MovedTemporarily: Number
0018    public var SeeOther: Number
0019    public var NotModified: Number
0020    public var UseProxy: Number
0021    public var BadRequest: Number
0022    public var Unauthorized: Number
0023    public var PaymentRequired: Number
0024    public var Forbidden: Number
0025    public var NotFound: Number
0026    public var BadMethod: Number
0027    public var NotAccepted: Number
0028    public var ProxyAuth: Number
0029    public var ClientTimeout: Number
0030    public var Conflict: Number
0031    public var Gone: Number
0032    public var LengthRequired: Number
0033    public var PrecondFailed: Number
0034    public var EntityTooLarge: Number
0035    public var ReqTooLong: Number
0036    public var UnsupportedType: Number
0037    public var ServerError: Number
0038    public var NotImplemented: Number
0039    public var BadGateway: Number
0040    public var Unavailable: Number
0041    public var GatewayTimeout: Number
0042    public var Version: Number
0043    public function addRequestHeader
0044    public function available
0045    public function set-callback
0046    public function callback
0047    public function close
0048    public function connect
0049    public function certificateFile
0050    public function set-certificateFile
0051    public function code
0052    public function codeString
0053    public function contentEncoding
0054    public function contentLength
0055    public function contentType
0056    public function date
0057    public function del
0058    public function expires
0059    public function flush
0060    public function followRedirects
0061    public function set-followRedirects
0062    public function form
0063    public function get
0064    public function head
0065    public function header
0066    public function headers
0067    public function isSecure
0068    public function keyFile
0069    public function set-keyFile
0070    public function lastModified
0071    public function method
0072    public function set-method
0073    public function post
0074    public function set-postLength
0075    public function postLength
0076    public function set-postData
0077    public function put
0078    public function read
0079    public function readString
0080    public function readLines
0081    public function readXml
0082    public function requestStream
0083    public function response
0084    public function responseStream
0085    public function setCredentials
0086    public function timeout
0087    public function set-timeout
0088    public function upload
0089    public function uri
0090    public function set-uri
0091    public function write

#
#  Instance slot assignments for the "Http" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "Http" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "addRequestHeader" function (Num slots 3)
#
0000    private var key: String
0001    private var value: String
0002    private var overwrite: Boolean

#
#  Local slot assignments for the "set-callback" function (Num slots 1)
#
0000    private function cb

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-certificateFile" function (Num slots 1)
#
0000    private var certFile: String

#
#  Local slot assignments for the "del" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "set-followRedirects" function (Num slots 1)
#
0000    private var flag: Boolean

#
#  Local slot assignments for the "form" function (Num slots 2)
#
0000    private var uri: String
0001    private var postData: Object

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "head" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "header" function (Num slots 1)
#
0000    private var key: String

#
#  Local slot assignments for the "set-keyFile" function (Num slots 1)
#
0000    private var keyFile: String

#
#  Local slot assignments for the "set-method" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "post" function (Num slots 2)
#
0000    private var uri: String
0001    private var data: Array

#
#  Local slot assignments for the "set-postLength" function (Num slots 1)
#
0000    private var length: Number

#
#  Local slot assignments for the "set-postData" function (Num slots 1)
#
0000    private var items: Object

#
#  Local slot assignments for the "put" function (Num slots 2)
#
0000    private var uri: String
0001    private var putData: Array

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readLines" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "setCredentials" function (Num slots 2)
#
0000    private var username: String
0001    private var password: String

#
#  Local slot assignments for the "set-timeout" function (Num slots 1)
#
0000    private var timeout: Number

#
#  Local slot assignments for the "upload" function (Num slots 2)
#
0000    private var uri: String
0001    private var filename: String

#
#  Local slot assignments for the "set-uri" function (Num slots 1)
#
0000    private var uriString: String

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Class slot assignments for the "HttpDataEvent" class (Num slots 12, num inherited 10)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    reserved slot for static super property
0008    reserved slot for static super property
0009    reserved slot for static super property
0010    -constructor- function HttpDataEvent
0011    -initializer- function HttpDataEvent-initializer

#
#  Instance slot assignments for the "HttpDataEvent" class (Num prop 4, num inherited 4)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "HttpErrorEvent" class (Num slots 12, num inherited 10)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    reserved slot for static super property
0008    reserved slot for static super property
0009    reserved slot for static super property
0010    -constructor- function HttpErrorEvent
0011    -initializer- function HttpErrorEvent-initializer

#
#  Instance slot assignments for the "HttpErrorEvent" class (Num prop 4, num inherited 4)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "TextStream" class (Num slots 21, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function TextStream
0006    -initializer- function TextStream-initializer
0007    public var LATIN1: String
0008    public var UTF_8: String
0009    public var UTF_16: String
0010    public function close
0011    public function encoding
0012    public function set-encoding
0013    [ejs.io::TextStream,private] function fill
0014    public function flush
0015    public function read
0016    public function readLine
0017    public function readLines
0018    public function readString
0019    public function write
0020    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs.io::TextStream,private] var newline: String
0001    [ejs.io::TextStream,private] var inbuf: ByteArray
0002    [ejs.io::TextStream,private] var format: String
0003    [ejs.io::TextStream,private] var nextStream: Stream

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "TextStream" function (Num slots 1)
#
0000    private var stream: Stream

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-encoding" function (Num slots 1)
#
0000    private var encoding: String

#
#  Local slot assignments for the "fill" function (Num slots 1)
#
0000    private var was

#
#  Local slot assignments for the "read" function (Num slots 6)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number
0003    private var total
0004    private var where
0005    -hoisted-5 var len

#
#  Local slot assignments for the "readLine" function (Num slots 3)
#
0000    private var start
0001    -hoisted-1 var c
0002    -hoisted-2 var i

#
#  Local slot assignments for the "readLines" function (Num slots 3)
#
0000    private var numLines: Number
0001    private var result: Array
0002    -hoisted-2 var i

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Local slot assignments for the "writeLine" function (Num slots 4)
#
0000    private var lines: Array
0001    private var written
0002    private var count
0003    -hoisted-3 var line

#
#  Class slot assignments for the "XMLHttp" class (Num slots 27, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function XMLHttp
0006    -initializer- function XMLHttp-initializer
0007    public var Uninitialized
0008    public var Open
0009    public var Sent
0010    public var Receiving
0011    public var Loaded
0012    public function abort
0013    public function http
0014    public function readyState
0015    public function responseText
0016    public function responseXML
0017    public function responseBody
0018    public function status
0019    public function statusText
0020    public function getAllResponseHeaders
0021    public function getResponseHeader
0022    public function open
0023    public function send
0024    public function setRequestHeader
0025    [ejs.io::XMLHttp,private] function callback
0026    [ejs.io::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs.io::XMLHttp,private] var hp: Http
0001    [ejs.io::XMLHttp,private] var state: Number
0002    [ejs.io::XMLHttp,private] var response: ByteArray
0003    public function onreadystatechange

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "getAllResponseHeaders" function (Num slots 2)
#
0000    private var result: String
0001    -hoisted-1 var key

#
#  Local slot assignments for the "getResponseHeader" function (Num slots 1)
#
0000    private var key: String

#
#  Local slot assignments for the "open" function (Num slots 7)
#
0000    private var method: String
0001    private var url: String
0002    private var async: Boolean
0003    private var user: String
0004    private var password: String
0005    -hoisted-5 var timeout
0006    -hoisted-6 var when: Date

#
#  Local slot assignments for the "send" function (Num slots 1)
#
0000    private var content: String

#
#  Local slot assignments for the "setRequestHeader" function (Num slots 2)
#
0000    private var key: String
0001    private var value: String

#
#  Local slot assignments for the "callback" function (Num slots 3)
#
0000    private var e: Event
0001    private var hp: Http
0002    private var count

#
#  Class slot assignments for the "App" class (Num slots 20, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function App-initializer
0006    public var UTF_8: Number
0007    public var UTF_16: Number
0008    public function args
0009    public function dir
0010    public function getEnv
0011    public function exit
0012    public function name
0013    public function noexit
0014    public function serviceEvents
0015    public function sleep
0016    public function title
0017    public function version
0018    public function workingDir
0019    public function set-workingDir

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "getEnv" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "exit" function (Num slots 1)
#
0000    private var status: Number

#
#  Local slot assignments for the "noexit" function (Num slots 1)
#
0000    private var exit: Boolean

#
#  Local slot assignments for the "serviceEvents" function (Num slots 2)
#
0000    private var count: Number
0001    private var timeout: Number

#
#  Local slot assignments for the "sleep" function (Num slots 1)
#
0000    private var delay: Number

#
#  Local slot assignments for the "set-workingDir" function (Num slots 1)
#
0000    private var value: String

#
#  Class slot assignments for the "Config" class (Num slots 22, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public var Debug: Boolean
0006    public var CPU: String
0007    public var DB: Boolean
0008    public var E4X: Boolean
0009    public var Floating: Boolean
0010    public var Http: Boolean
0011    public var Lang: String
0012    public var Legacy: Boolean
0013    public var Multithread: Boolean
0014    public var NumberType: String
0015    public var OS: String
0016    public var Product: String
0017    public var RegularExpressions: Boolean
0018    public var Title: String
0019    public var Version: String
0020    public var LibDir: String
0021    public var BinDir: String

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 15, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function allocatedMemory
0006    public function enabled
0007    public function set-enabled
0008    public function maxMemory
0009    public function set-maxMemory
0010    public function printStats
0011    public function peakMemory
0012    public function workQuota
0013    public function set-workQuota
0014    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "set-enabled" function (Num slots 1)
#
0000    private var on: Boolean

#
#  Local slot assignments for the "set-maxMemory" function (Num slots 1)
#
0000    private var limit: Number

#
#  Local slot assignments for the "set-workQuota" function (Num slots 1)
#
0000    private var quota: Number

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Class slot assignments for the "Memory" class (Num slots 6, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function printStats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 10, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function System-initializer
0006    public var Bufsize: Number
0007    public function hostname
0008    public function run
0009    public function runx

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "hostname" function (Num slots 1)
#
0000    private var fullyQualified: Boolean

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "runx" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "basename" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "close" function (Num slots 2)
#
0000    private var file: File
0001    private var graceful: Boolean

#
#  Local slot assignments for the "cp" function (Num slots 2)
#
0000    private var fromPath: String
0001    private var toPath: String

#
#  Local slot assignments for the "dirname" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "exists" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "extension" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "freeSpace" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "isDir" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "ls" function (Num slots 2)
#
0000    private var path: String
0001    private var enumDirs: Boolean

#
#  Local slot assignments for the "mkdir" function (Num slots 2)
#
0000    private var path: String
0001    private var permissions: Number

#
#  Local slot assignments for the "mv" function (Num slots 2)
#
0000    private var fromFile: String
0001    private var toFile: String

#
#  Local slot assignments for the "open" function (Num slots 4)
#
0000    private var path: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "read" function (Num slots 2)
#
0000    private var file: File
0001    private var count: Number

#
#  Local slot assignments for the "rm" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "rmdir" function (Num slots 2)
#
0000    private var path: String
0001    private var recursive: Boolean

#
#  Local slot assignments for the "tempname" function (Num slots 1)
#
0000    private var directory: String

#
#  Local slot assignments for the "write" function (Num slots 2)
#
0000    private var file: File
0001    private var items: Array

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 2968 bytes)
#
0000   ""
0001   "events/Event.es"
0002   "}"
0003   "internal-22"
0004   "ejs.events"
0005   "module ejs.events {"
0006   "	class Event {"
0007   "        use default namespace public"
0008   "		static const	PRI_LOW: Number		= 25;"
0009   "PRI_LOW"
0010   "public"
0011   "Number"
0012   "		static const	PRI_NORMAL: Number	= 50;"
0013   "PRI_NORMAL"
0014   "		static const	PRI_HIGH: Number	= 75;"
0015   "PRI_HIGH"
0016   "bubbles"
0017   "Boolean"
0018   "		var bubbles: Boolean"
0019   "		var data: Object"
0020   "data"
0021   "Object"
0022   "		var timestamp: Date"
0023   "timestamp"
0024   "Date"
0025   "		var priority: Number"
0026   "priority"
0027   "		function Event(data: Object = null, bubbles: Boolean = false, priority: Number = PRI_NORMAL) {"
0028   "			this.timestamp = new Date"
0029   "			this.data = data"
0030   "			this.priority = priority"
0031   "			this.bubbles = bubbles"
0032   "		}"
0033   "Event"
0034   "-constructor-"
0035   "private"
0036   "intrinsic"
0037   "		override function toString(): String {"
0038   "			return "[Event: " +  Reflect(this).typeName + "]""
0039   "[Event: "
0040   "]"
0041   "toString"
0042   "String"
0043   "Event-initializer"
0044   "-initializer-"
0045   "clone"
0046   "Function"
0047   "Array"
0048   "deep"
0049   "get"
0050   "iterator"
0051   "Iterator"
0052   "namespaces"
0053   "getValues"
0054   "length"
0055   "Void"
0056   "block_0007_66"
0057   "-block-"
0058   "events/Dispatcher.es"
0059   "internal-23"
0060   "	class Dispatcher {"
0061   "events"
0062   "		var events: Object"
0063   "		function Dispatcher() {"
0064   "			events = new Object"
0065   "Dispatcher"
0066   "		function addListener(callback: Function, eventType: Type = Event): Void {"
0067   "name"
0068   "            var name = Reflect(eventType).name"
0069   "			var listeners : Array"
0070   "listeners"
0071   "			listeners = events[name]"
0072   "			if (listeners == undefined) {"
0073   "				listeners = events[name] = new Array"
0074   "			} else {"
0075   "				for each (var e: Endpoint in listeners) {"
0076   "e"
0077   "Endpoint"
0078   "					if (e.callback == callback && e.eventType == eventType) {"
0079   "						return"
0080   "			}"
0081   "			listeners.append(new Endpoint(callback, eventType))"
0082   "addListener"
0083   "callback"
0084   "eventType"
0085   "Type"
0086   "StopIteration"
0087   "		function dispatch(event: Event): Void {"
0088   "eventListeners"
0089   "			var eventListeners : Array"
0090   "            var name = Reflect(event).typeName"
0091   "			eventListeners = events[name]"
0092   "			if (eventListeners != undefined) {"
0093   "				for each (var e: Endpoint in eventListeners) {"
0094   "					if (event is e.eventType) {"
0095   "						e.callback(event)"
0096   "dispatch"
0097   "event"
0098   "		function removeListener(callback: Function, eventType: Type = Event): Void {"
0099   "			var listeners: Array"
0100   "				return"
0101   "			for (let i in listeners) {"
0102   "i"
0103   "-hoisted-5"
0104   "				var e: Endpoint = listeners[i]"
0105   "				if (e.callback == callback && e.eventType == eventType) {"
0106   "					listeners.remove(i, i + 1)"
0107   "removeListener"
0108   ""
0109   "Block"
0110   "locale"
0111   "	internal class Endpoint {"
0112   "		public var	callback: Function"
0113   "		public var	eventType: Type"
0114   "		function Endpoint(callback: Function, eventType: Type) {"
0115   "			this.callback = callback"
0116   "			this.eventType = eventType"
0117   "block_0007_68"
0118   "events/Timer.es"
0119   "internal-24"
0120   "	native class Timer {"
0121   "		native function Timer(period: Number, callback: Function, drift: Boolean = true)"
0122   "Timer"
0123   "period"
0124   "drift"
0125   "		native function get drift(): Boolean"
0126   "		native function set drift(enable: Boolean): Void"
0127   "set-drift"
0128   "enable"
0129   "		native function get period(): Number"
0130   "		native function set period(period: Number): Void"
0131   "set-period"
0132   "		native function restart(): Void"
0133   "restart"
0134   "		native function stop(): Void"
0135   "stop"
0136   "	class TimerEvent extends Event {"
0137   "TimerEvent"
0138   "TimerEvent-initializer"
0139   "block_0007_80"
0140   "__initializer__"

==============================================================================================

MODULE:   ejs.io <hasInitializer, boundGlobals>


FUNCTION:   [initializer]  intrinsic function __initializer__() : Void

   LOCAL:   [local-00] var block_0007_86 : Block
   LOCAL:   [local-01] var block_0007_92 : Block
   LOCAL:   [local-02] var block_0007_94 : Block
   LOCAL:   [local-03] var block_0007_96 : Block
   LOCAL:   [local-04] var block_0009_98 : Block
   LOCAL:   [local-05] var block_0007_117 : Block
   LOCAL:   [local-06] var block_0007_119 : Block

    0000: [0] 93 00 00 ................... OpenBlock <slot: 0> <0> 
    0003: [0] 33 01 f8 01 14 ............. Debug 

    # io/BinaryStream.es:248    }

    0008: [0] 01 16 ...................... AddNamespace <internal-27> 
    0010: [0] 01 22 ...................... AddNamespace <ejs.io> 
    0012: [0] 33 01 07 29 ................ Debug 

    # io/BinaryStream.es:7      module ejs.io {

    0016: [0] 33 01 0e 39 ................ Debug 

    # io/BinaryStream.es:14         class BinaryStream implements Stream {

    0020: [0] 34 c6 02 ................... DefineClass <type: 0x146,  ejs.io::BinaryStream> 
    0023: [0] 23 ......................... CloseBlock 
    0024: [0] 93 01 00 ................... OpenBlock <slot: 1> <0> 
    0027: [0] 33 83 1c 8a 04 14 .......... Debug 

    # io/File.es:522            }

    0033: [0] 01 8e 1c ................... AddNamespace <internal-28> 
    0036: [0] 01 22 ...................... AddNamespace <ejs.io> 
    0038: [0] 33 83 1c 07 29 ............. Debug 

    # io/File.es:7              module ejs.io {

    0043: [0] 33 83 1c 10 9a 1c .......... Debug 

    # io/File.es:16                 native class File implements Stream {

    0049: [0] 34 ca 02 ................... DefineClass <type: 0x14a,  ejs.io::File> 
    0052: [0] 23 ......................... CloseBlock 
    0053: [0] 93 02 00 ................... OpenBlock <slot: 2> <0> 
    0056: [0] 33 9d 3f ed 03 14 .......... Debug 

    # io/Http.es:493            }

    0062: [0] 01 a8 3f ................... AddNamespace <internal-29> 
    0065: [0] 01 22 ...................... AddNamespace <ejs.io> 
    0067: [0] 33 9d 3f 07 29 ............. Debug 

    # io/Http.es:7              module ejs.io {

    0072: [0] 33 9d 3f 10 b4 3f .......... Debug 

    # io/Http.es:16                 native class Http implements Stream {

    0078: [0] 34 ce 02 ................... DefineClass <type: 0x14e,  ejs.io::Http> 
    0081: [0] 33 9d 3f e4 03 8e 74 ....... Debug 

    # io/Http.es:484                class HttpDataEvent extends Event {

    0088: [0] 34 d2 02 ................... DefineClass <type: 0x152,  ejs.io::HttpDataEvent> 
    0091: [0] 33 9d 3f eb 03 8a 75 ....... Debug 

    # io/Http.es:491                class HttpErrorEvent extends Event {

    0098: [0] 34 d6 02 ................... DefineClass <type: 0x156,  ejs.io::HttpErrorEvent> 
    0101: [0] 23 ......................... CloseBlock 
    0102: [0] 93 03 00 ................... OpenBlock <slot: 3> <0> 
    0105: [0] 33 eb 75 ca 01 14 .......... Debug 

    # io/Socket.es:202          }

    0111: [0] 01 f8 75 ................... AddNamespace <internal-30> 
    0114: [0] 01 22 ...................... AddNamespace <ejs.io> 
    0116: [0] 33 eb 75 07 29 ............. Debug 

    # io/Socket.es:7            module ejs.io {

    0121: [0] 23 ......................... CloseBlock 
    0122: [0] 93 04 00 ................... OpenBlock <slot: 4> <0> 
    0125: [0] 33 92 76 fc 01 14 .......... Debug 

    # io/TextStream.es:252      }

    0131: [0] 01 a3 76 ................... AddNamespace <internal-31> 
    0134: [0] 01 22 ...................... AddNamespace <ejs.io> 
    0136: [0] 33 92 76 09 29 ............. Debug 

    # io/TextStream.es:9        module ejs.io {

    0141: [0] 33 92 76 11 af 76 .......... Debug 

    # io/TextStream.es:17           class TextStream implements Stream {

    0147: [0] 34 da 02 ................... DefineClass <type: 0x15a,  ejs.io::TextStream> 
    0150: [0] 23 ......................... CloseBlock 
    0151: [0] 93 05 00 ................... OpenBlock <slot: 5> <0> 
    0154: [0] 33 ea 93 01 2a 14 .......... Debug 

    # io/Url.es:42              }

    0160: [0] 01 f4 93 01 ................ AddNamespace <internal-32> 
    0164: [0] 01 22 ...................... AddNamespace <ejs.io> 
    0166: [0] 33 ea 93 01 07 29 .......... Debug 

    # io/Url.es:7               module ejs.io {

    0172: [0] 23 ......................... CloseBlock 
    0173: [0] 93 06 00 ................... OpenBlock <slot: 6> <0> 
    0176: [0] 33 8f 94 01 de 01 14 ....... Debug 

    # io/XMLHttp.es:222         }

    0183: [0] 01 9d 94 01 ................ AddNamespace <internal-33> 
    0187: [0] 01 22 ...................... AddNamespace <ejs.io> 
    0189: [0] 33 8f 94 01 07 29 .......... Debug 

    # io/XMLHttp.es:7           module ejs.io {

    0195: [0] 33 8f 94 01 0d a9 94 01 .... Debug 

    # io/XMLHttp.es:13              class XMLHttp {

    0203: [0] 34 de 02 ................... DefineClass <type: 0x15e,  ejs.io::XMLHttp> 
    0206: [0] 23 ......................... CloseBlock 
    0207: [0] 3d ......................... EndCode 
    

BLOCK:      [__initializer__-00]  block_0007_86 (Slots 0)

BLOCK:      [__initializer__-01]  block_0007_92 (Slots 0)

BLOCK:      [__initializer__-02]  block_0007_94 (Slots 0)

BLOCK:      [__initializer__-03]  block_0007_96 (Slots 0)

BLOCK:      [__initializer__-04]  block_0009_98 (Slots 0)

BLOCK:      [__initializer__-05]  block_0007_117 (Slots 0)

BLOCK:      [__initializer__-06]  block_0007_119 (Slots 0)

CLASS:      class BinaryStream extends Object
            #  Class Details: 29 class traits, 3 instance traits, requested slot 81

FUNCTION:   [BinaryStream-05]  -constructor- function BinaryStream(stream: Stream) : void

     ARG:   [arg-00]   private stream : Stream
   LOCAL:   [local-01] var --fun_6051-- : Function
   LOCAL:   [local-02] var --fun_6072-- : Function

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 34 ...................... GetGlobalSlot <52> 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 01 29 9f 04 ............. Debug 

    # io/BinaryStream.es:41                 nextStream = stream

    0012: [0] 61 ......................... GetLocalSlot_0 
    0013: [1] b0 ......................... PutThisSlot_2 
    0014: [0] 33 01 2a bf 04 ............. Debug 

    # io/BinaryStream.es:42                 inbuf = new ByteArray

    0019: [0] 83 09 ...................... GetGlobalSlot <9> 
    0021: [1] 8e ......................... New 
    0022: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0024: [1] ae ......................... PutThisSlot_0 
    0025: [0] 33 01 2b e1 04 ............. Debug 

    # io/BinaryStream.es:43                 outbuf = new ByteArray

    0030: [0] 83 09 ...................... GetGlobalSlot <9> 
    0032: [1] 8e ......................... New 
    0033: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0035: [1] af ......................... PutThisSlot_1 
    0036: [0] 33 01 30 84 05 ............. Debug 

    # io/BinaryStream.es:48                 inbuf.input = function (buffer: ByteArray) {

    0041: [0] 35 01 00 ................... DefineFunction <slot: 1> <0> 
    0044: [0] 33 01 30 84 05 ............. Debug 

    # io/BinaryStream.es:48                 inbuf.input = function (buffer: ByteArray) {

    0049: [0] 33 01 32 ea 05 ............. Debug 

    # io/BinaryStream.es:50                 }

    0054: [0] 62 ......................... GetLocalSlot_1 
    0055: [1] 33 01 30 84 05 ............. Debug 

    # io/BinaryStream.es:48                 inbuf.input = function (buffer: ByteArray) {

    0060: [1] 75 ......................... GetThisSlot_0 
    0061: [2] c1 11 01 ................... PutTypeSlot <slot: 17> <1> 
    0064: [0] 33 01 34 9e 06 ............. Debug 

    # io/BinaryStream.es:52                 outbuf.output = function (buffer: ByteArray) {

    0069: [0] 35 02 00 ................... DefineFunction <slot: 2> <0> 
    0072: [0] 33 01 34 9e 06 ............. Debug 

    # io/BinaryStream.es:52                 outbuf.output = function (buffer: ByteArray) {

    0077: [0] 33 01 38 ea 05 ............. Debug 

    # io/BinaryStream.es:56                 }

    0082: [0] 63 ......................... GetLocalSlot_2 
    0083: [1] 33 01 34 9e 06 ............. Debug 

    # io/BinaryStream.es:52                 outbuf.output = function (buffer: ByteArray) {

    0088: [1] 76 ......................... GetThisSlot_1 
    0089: [2] c1 13 01 ................... PutTypeSlot <slot: 19> <1> 
    0092: [0] c4 ......................... Return 
    0093: [0] 33 01 39 f0 07 ............. Debug 

    # io/BinaryStream.es:57             }
    

VARIABLE:   [BinaryStream-00]  private var stream : Stream

FUNCTION:   [BinaryStream-01]  private function --fun_6051--(buffer: ByteArray) : void

     ARG:   [arg-00]   private buffer : ByteArray

    0000: [0] 33 01 31 bd 05 ............. Debug 

    # io/BinaryStream.es:49                     nextStream.read(buffer)

    0005: [0] 77 ......................... GetThisSlot_2 
    0006: [1] 61 ......................... GetLocalSlot_0 
    0007: [2] 1d e5 05 d0 01 01 .......... CallObjName <read> <public> <argc: 1> 
    0013: [0] c4 ......................... Return 
    0014: [0] 33 01 32 ea 05 ............. Debug 

    # io/BinaryStream.es:50                 }
    

VARIABLE:   [--fun_6051---00]  private var buffer : ByteArray

FUNCTION:   [BinaryStream-02]  private function --fun_6072--(buffer: ByteArray) : void

     ARG:   [arg-00]   private buffer : ByteArray

    0000: [0] 33 01 35 d9 06 ............. Debug 

    # io/BinaryStream.es:53                     count = nextStream.write(buffer)

    0005: [0] 77 ......................... GetThisSlot_2 
    0006: [1] 61 ......................... GetLocalSlot_0 
    0007: [2] 1d 8a 07 d0 01 01 .......... CallObjName <write> <public> <argc: 1> 
    0013: [0] 99 ......................... PushResult 
    0014: [1] bb 90 07 96 07 ............. PutScopedName <count> <> 
    0019: [0] 33 01 36 97 07 ............. Debug 

    # io/BinaryStream.es:54                     buffer.readPosition += count

    0024: [0] 61 ......................... GetLocalSlot_0 
    0025: [1] 87 1b 01 ................... GetTypeSlot <slot: 27> <1> 
    0028: [1] 7f 90 07 96 07 ............. GetScopedName <count> <> 
    0033: [2] 00 ......................... Add 
    0034: [1] 61 ......................... GetLocalSlot_0 
    0035: [2] c1 1b 01 ................... PutTypeSlot <slot: 27> <1> 
    0038: [0] 33 01 37 c4 07 ............. Debug 

    # io/BinaryStream.es:55                     buffer.reset()

    0043: [0] 61 ......................... GetLocalSlot_0 
    0044: [1] 17 20 00 ................... CallObjSlot <slot: 32> <argc: 0> 
    0047: [0] c4 ......................... Return 
    0048: [0] 33 01 38 ea 05 ............. Debug 

    # io/BinaryStream.es:56                 }
    

VARIABLE:   [--fun_6072---00]  private var buffer : ByteArray

FUNCTION:   [BinaryStream-06]  -initializer- function BinaryStream-initializer() : Void


    0000: [0] 33 01 10 64 ................ Debug 

    # io/BinaryStream.es:16             use default namespace public

    0004: [0] 83 23 ...................... GetGlobalSlot <35> 
    0006: [1] 02 ......................... AddNamespaceRef 
    0007: [0] 33 01 15 89 01 ............. Debug 

    # io/BinaryStream.es:21             static const BigEndian: Number = ByteArray.BigEndian

    0012: [0] 83 09 ...................... GetGlobalSlot <9> 
    0014: [1] 87 08 00 ................... GetTypeSlot <slot: 8> <0> 
    0017: [1] 83 51 ...................... GetGlobalSlot <81> 
    0019: [2] ab ......................... PutObjSlot_7 
    0020: [0] 33 01 1a de 01 ............. Debug 

    # io/BinaryStream.es:26             static const LittleEndian: Number = ByteArray.LittleEndian

    0025: [0] 83 09 ...................... GetGlobalSlot <9> 
    0027: [1] 87 07 00 ................... GetTypeSlot <slot: 7> <0> 
    0030: [1] 83 51 ...................... GetGlobalSlot <81> 
    0032: [2] ac ......................... PutObjSlot_8 
    0033: [0] 33 01 20 ae 02 ............. Debug 

    # io/BinaryStream.es:32             private var inbuf: ByteArray

    0038: [0] 33 01 21 82 03 ............. Debug 

    # io/BinaryStream.es:33             private var outbuf: ByteArray

    0043: [0] 33 01 22 af 03 ............. Debug 

    # io/BinaryStream.es:34             private var nextStream: Stream

    0048: [0] 33 01 28 e8 03 ............. Debug 

    # io/BinaryStream.es:40             function BinaryStream(stream: Stream = null) {

    0053: [0] 33 01 3f a5 08 ............. Debug 

    # io/BinaryStream.es:63             function close(graceful: Boolean = 0): void {

    0058: [0] 33 01 48 aa 09 ............. Debug 

    # io/BinaryStream.es:72             function get endian(): Number

    0063: [0] 33 01 4f f0 09 ............. Debug 

    # io/BinaryStream.es:79             function set endian(value: Number): Void {

    0068: [0] 33 01 5a fe 0b ............. Debug 

    # io/BinaryStream.es:90             function flush(): void {

    0073: [0] 33 01 68 f9 0c ............. Debug 

    # io/BinaryStream.es:104            function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number

    0078: [0] 33 01 70 87 0e ............. Debug 

    # io/BinaryStream.es:112            function readBoolean(): Boolean

    0083: [0] 33 01 78 db 0e ............. Debug 

    # io/BinaryStream.es:120            function readByte(): Number

    0088: [0] 33 01 80 01 a5 0f .......... Debug 

    # io/BinaryStream.es:128            function readByteArray(count: Number = -1): ByteArray

    0094: [0] 33 01 88 01 98 10 .......... Debug 

    # io/BinaryStream.es:136            function readDate(): Date

    0100: [0] 33 01 90 01 e5 10 .......... Debug 

    # io/BinaryStream.es:144            function readDouble(): Date

    0106: [0] 33 01 98 01 94 11 .......... Debug 

    # io/BinaryStream.es:152            function readInteger(): Number

    0112: [0] 33 01 a0 01 e7 11 .......... Debug 

    # io/BinaryStream.es:160            function readLong(): Number

    0118: [0] 33 01 a9 01 94 12 .......... Debug 

    # io/BinaryStream.es:169            function readString(count: Number = -1): String 

    0124: [0] 33 01 b1 01 83 13 .......... Debug 

    # io/BinaryStream.es:177            function readXML(): XML {

    0130: [0] 33 01 c8 01 b1 15 .......... Debug 

    # io/BinaryStream.es:200            function write(...items): Number {

    0136: [0] 33 01 d5 01 9a 17 .......... Debug 

    # io/BinaryStream.es:213            function writeByte(data: Number): Void 

    0142: [0] 33 01 dd 01 f9 17 .......... Debug 

    # io/BinaryStream.es:221            function writeShort(data: Number): Void

    0148: [0] 33 01 e5 01 d8 18 .......... Debug 

    # io/BinaryStream.es:229            function writeDouble(data: Number): Void

    0154: [0] 33 01 ed 01 ba 19 .......... Debug 

    # io/BinaryStream.es:237            function writeInteger(data: Number): Void

    0160: [0] 33 01 f5 01 9f 1a .......... Debug 

    # io/BinaryStream.es:245            function writeLong(data: Number): Void

    0166: [0] c4 ......................... Return 
    

VARIABLE:   [BinaryStream-07]  public static var BigEndian : Number

VARIABLE:   [BinaryStream-08]  public static var LittleEndian : Number

FUNCTION:   [BinaryStream-09]  public function close(graceful: Boolean) : Void

     ARG:   [arg-00]   private graceful : Boolean

    0000: [0] 43 02 02 04 ................ InitDefaultArgs.8 <2> <4> <6> 
    0004: [0] 46 ......................... Load0 
    0005: [1] 9a ......................... PutLocalSlot_0 
    0006: [0] 33 01 40 db 08 ............. Debug 

    # io/BinaryStream.es:64                 flush()

    0011: [0] 18 0c 00 ................... CallThisSlot <slot: 12> <argc: 0> 
    0014: [0] 33 01 41 ef 08 ............. Debug 

    # io/BinaryStream.es:65                 nextStream.close()

    0019: [0] 77 ......................... GetThisSlot_2 
    0020: [1] 1d 8e 09 d0 01 00 .......... CallObjName <close> <public> <argc: 0> 
    0026: [0] 5a ......................... LoadNull 
    0027: [1] c5 ......................... ReturnValue 
    0028: [0] 33 01 42 f0 07 ............. Debug 

    # io/BinaryStream.es:66             }
    

VARIABLE:   [close-00]  private var graceful : Boolean

FUNCTION:   [BinaryStream-10]  public get function endian() : Number


    0000: [0] 33 01 49 d0 09 ............. Debug 

    # io/BinaryStream.es:73                 inbuf.endian

    0005: [0] 75 ......................... GetThisSlot_0 
    0006: [1] 87 0d 01 ................... GetTypeSlot <slot: 13> <1> 
    0009: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [BinaryStream-11]  public set function set-endian(value: Number) : Void

     ARG:   [arg-00]   private value : Number

    0000: [0] 33 01 50 a3 0a ............. Debug 

    # io/BinaryStream.es:80                 if (value != BigEndian && value != LittleEndian) {

    0005: [0] 61 ......................... GetLocalSlot_0 
    0006: [1] 88 07 01 ................... GetThisTypeSlot <slot: 7> <1> 
    0009: [2] 2c ......................... CompareNE 
    0010: [1] 22 ......................... CastBoolean 
    0011: [1] 3b ......................... Dup 
    0012: [2] 12 07 ...................... BranchFalse.8 <addr: 21> 
    0014: [1] 96 ......................... Pop 
    0015: [0] 61 ......................... GetLocalSlot_0 
    0016: [1] 88 08 01 ................... GetThisTypeSlot <slot: 8> <1> 
    0019: [2] 2c ......................... CompareNE 
    0020: [1] 22 ......................... CastBoolean 
    0021: [1] 12 10 ...................... BranchFalse.8 <addr: 39> 
    0023: [0] 33 01 51 e2 0a ............. Debug 

    # io/BinaryStream.es:81                     throw new ArgError("Bad endian value")

    0028: [0] 83 0b ...................... GetGlobalSlot <11> 
    0030: [1] 8e ......................... New 
    0031: [1] 5c 99 0b ................... LoadString <Bad endian value> 
    0034: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0036: [1] cc ......................... Throw 
    0037: [1] 40 00 ...................... Goto.8 <addr: 39> 
    0039: [1] 33 01 52 ea 05 ............. Debug 

    # io/BinaryStream.es:82                 }

    0044: [1] 33 01 53 aa 0b ............. Debug 

    # io/BinaryStream.es:83                 inbuf.endian = value

    0049: [1] 61 ......................... GetLocalSlot_0 
    0050: [2] 75 ......................... GetThisSlot_0 
    0051: [3] c1 0d 01 ................... PutTypeSlot <slot: 13> <1> 
    0054: [1] 33 01 54 cb 0b ............. Debug 

    # io/BinaryStream.es:84                 outbuf.endian = value

    0059: [1] 61 ......................... GetLocalSlot_0 
    0060: [2] 76 ......................... GetThisSlot_1 
    0061: [3] c1 0d 01 ................... PutTypeSlot <slot: 13> <1> 
    0064: [1] 5a ......................... LoadNull 
    0065: [2] c5 ......................... ReturnValue 
    0066: [0] 33 01 55 f0 07 ............. Debug 

    # io/BinaryStream.es:85             }
    

VARIABLE:   [set-endian-00]  private var value : Number

FUNCTION:   [BinaryStream-12]  public function flush() : Void


    0000: [0] 33 01 5b 9f 0c ............. Debug 

    # io/BinaryStream.es:91                 inbuf.flush()

    0005: [0] 75 ......................... GetThisSlot_0 
    0006: [1] 17 0f 00 ................... CallObjSlot <slot: 15> <argc: 0> 
    0009: [0] 33 01 5c b9 0c ............. Debug 

    # io/BinaryStream.es:92                 outbuf.flush()

    0014: [0] 76 ......................... GetThisSlot_1 
    0015: [1] 17 0f 00 ................... CallObjSlot <slot: 15> <argc: 0> 
    0018: [0] 33 01 5d d4 0c ............. Debug 

    # io/BinaryStream.es:93                 nextStream.flush()

    0023: [0] 77 ......................... GetThisSlot_2 
    0024: [1] 1d f3 0c d0 01 00 .......... CallObjName <flush> <public> <argc: 0> 
    0030: [0] 5a ......................... LoadNull 
    0031: [1] c5 ......................... ReturnValue 
    0032: [0] 33 01 5e f0 07 ............. Debug 

    # io/BinaryStream.es:94             }
    

FUNCTION:   [BinaryStream-13]  public function read(buffer: ByteArray, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number

    0000: [0] 43 03 03 05 08 ............. InitDefaultArgs.8 <3> <5> <7> <10> 
    0005: [0] 46 ......................... Load0 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 47 ......................... Load1 
    0008: [1] 8d ......................... Neg 
    0009: [1] 9c ......................... PutLocalSlot_2 
    0010: [0] 33 01 69 d2 0d ............. Debug 

    # io/BinaryStream.es:105                inbuf.read(buffer, offset, count)

    0015: [0] 75 ......................... GetThisSlot_0 
    0016: [1] 61 ......................... GetLocalSlot_0 
    0017: [2] 62 ......................... GetLocalSlot_1 
    0018: [3] 63 ......................... GetLocalSlot_2 
    0019: [4] 17 14 03 ................... CallObjSlot <slot: 20> <argc: 3> 
    0022: [0] 99 ......................... PushResult 
    0023: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [read-00]  private var buffer : ByteArray

VARIABLE:   [read-01]  private var offset : Number

VARIABLE:   [read-02]  private var count : Number

FUNCTION:   [BinaryStream-14]  public function readBoolean() : Boolean


    0000: [0] 33 01 71 af 0e ............. Debug 

    # io/BinaryStream.es:113                inbuf.readBoolean()

    0005: [0] 75 ......................... GetThisSlot_0 
    0006: [1] 17 15 00 ................... CallObjSlot <slot: 21> <argc: 0> 
    0009: [0] 99 ......................... PushResult 
    0010: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [BinaryStream-15]  public function readByte() : Number


    0000: [0] 33 01 79 ff 0e ............. Debug 

    # io/BinaryStream.es:121                inbuf.readByte()

    0005: [0] 75 ......................... GetThisSlot_0 
    0006: [1] 17 16 00 ................... CallObjSlot <slot: 22> <argc: 0> 
    0009: [0] 99 ......................... PushResult 
    0010: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [BinaryStream-16]  public function readByteArray(count: Number) : ByteArray

     ARG:   [arg-00]   private count : Number

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 47 ......................... Load1 
    0005: [1] 8d ......................... Neg 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 01 81 01 e3 0f .......... Debug 

    # io/BinaryStream.es:129                inbuf.readByteArray(count)

    0013: [0] 75 ......................... GetThisSlot_0 
    0014: [1] 61 ......................... GetLocalSlot_0 
    0015: [2] 1d 8a 10 96 07 01 .......... CallObjName <readByteArray> <> <argc: 1> 
    0021: [0] 99 ......................... PushResult 
    0022: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [readByteArray-00]  private var count : Number

FUNCTION:   [BinaryStream-17]  public function readDate() : Date


    0000: [0] 33 01 89 01 ba 10 .......... Debug 

    # io/BinaryStream.es:137                inbuf.readDate()

    0006: [0] 75 ......................... GetThisSlot_0 
    0007: [1] 17 17 00 ................... CallObjSlot <slot: 23> <argc: 0> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [BinaryStream-18]  public function readDouble() : Date


    0000: [0] 33 01 91 01 ba 10 .......... Debug 

    # io/BinaryStream.es:145                inbuf.readDate()

    0006: [0] 75 ......................... GetThisSlot_0 
    0007: [1] 17 17 00 ................... CallObjSlot <slot: 23> <argc: 0> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [BinaryStream-19]  public function readInteger() : Number


    0000: [0] 33 01 99 01 bb 11 .......... Debug 

    # io/BinaryStream.es:153                inbuf.readInteger()

    0006: [0] 75 ......................... GetThisSlot_0 
    0007: [1] 17 19 00 ................... CallObjSlot <slot: 25> <argc: 0> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [BinaryStream-20]  public function readLong() : Number


    0000: [0] 33 01 a1 01 bb 11 .......... Debug 

    # io/BinaryStream.es:161                inbuf.readInteger()

    0006: [0] 75 ......................... GetThisSlot_0 
    0007: [1] 17 19 00 ................... CallObjSlot <slot: 25> <argc: 0> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [BinaryStream-21]  public function readString(count: Number) : String

     ARG:   [arg-00]   private count : Number

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 47 ......................... Load1 
    0005: [1] 8d ......................... Neg 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 01 aa 01 cd 12 .......... Debug 

    # io/BinaryStream.es:170                inbuf.readString(count)

    0013: [0] 75 ......................... GetThisSlot_0 
    0014: [1] 61 ......................... GetLocalSlot_0 
    0015: [2] 17 1e 01 ................... CallObjSlot <slot: 30> <argc: 1> 
    0018: [0] 99 ......................... PushResult 
    0019: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [readString-00]  private var count : Number

FUNCTION:   [BinaryStream-22]  public function readXML() : XML

   LOCAL:   [local-00] var data : String
   LOCAL:   [local-01] var s : String

    0000: [0] 33 01 b2 01 aa 13 .......... Debug 

    # io/BinaryStream.es:178                var data: String = ""

    0006: [0] 5c 96 07 ................... LoadString <> 
    0009: [1] 9a ......................... PutLocalSlot_0 
    0010: [0] 33 01 b3 01 cc 13 .......... Debug 

    # io/BinaryStream.es:179                while (1) {

    0016: [0] 47 ......................... Load1 
    0017: [1] 12 39 ...................... BranchFalse.8 <addr: 76> 
    0019: [0] 33 01 b4 01 e6 13 .......... Debug 

    # io/BinaryStream.es:180                    var s: String = inbuf.readString()

    0025: [0] 75 ......................... GetThisSlot_0 
    0026: [1] 17 1e 00 ................... CallObjSlot <slot: 30> <argc: 0> 
    0029: [0] 99 ......................... PushResult 
    0030: [1] 9b ......................... PutLocalSlot_1 
    0031: [0] 33 01 b5 01 99 14 .......... Debug 

    # io/BinaryStream.es:181                    if (s.length == 0) {

    0037: [0] 62 ......................... GetLocalSlot_1 
    0038: [1] 87 03 01 ................... GetTypeSlot <slot: 3> <1> 
    0041: [1] 46 ......................... Load0 
    0042: [2] 25 ......................... CompareEQ 
    0043: [1] 12 0d ...................... BranchFalse.8 <addr: 58> 
    0045: [0] 33 01 b6 01 be 14 .......... Debug 

    # io/BinaryStream.es:182                        break

    0051: [0] 3f 14 00 00 00 ............. Goto <addr: 76> 
    0056: [0] 40 00 ...................... Goto.8 <addr: 58> 
    0058: [0] 33 01 b7 01 d8 14 .......... Debug 

    # io/BinaryStream.es:183                    }

    0064: [0] 33 01 b8 01 ea 14 .......... Debug 

    # io/BinaryStream.es:184                    data += s

    0070: [0] 61 ......................... GetLocalSlot_0 
    0071: [1] 62 ......................... GetLocalSlot_1 
    0072: [2] 00 ......................... Add 
    0073: [1] 9a ......................... PutLocalSlot_0 
    0074: [0] 40 c4 ...................... Goto.8 <addr: 16> 
    0076: [0] 33 01 ba 01 84 15 .......... Debug 

    # io/BinaryStream.es:186                return new XML(data)

    0082: [0] 83 4f ...................... GetGlobalSlot <79> 
    0084: [1] 8e ......................... New 
    0085: [1] 61 ......................... GetLocalSlot_0 
    0086: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0088: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [readXML-00]  private var data : String

VARIABLE:   [readXML-01]  private var s : String

FUNCTION:   [BinaryStream-23]  public function write(items: Array) : Number

     ARG:   [arg-00]   private items : Array
   LOCAL:   [local-01] var count : Number
   LOCAL:   [local-02] var i

    0000: [0] 33 01 c9 01 dc 15 .......... Debug 

    # io/BinaryStream.es:201                let count: Number = 0

    0006: [0] 46 ......................... Load0 
    0007: [1] 9b ......................... PutLocalSlot_1 
    0008: [0] 33 01 ca 01 fe 15 .......... Debug 

    # io/BinaryStream.es:202                for each (i in items) {

    0014: [0] 61 ......................... GetLocalSlot_0 
    0015: [1] 17 02 00 ................... CallObjSlot <slot: 2> <argc: 0> 
    0018: [0] 99 ......................... PushResult 
    0019: [1] 3b ......................... Dup 
    0020: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0023: [1] 99 ......................... PushResult 
    0024: [2] 9c ......................... PutLocalSlot_2 
    0025: [1] 33 01 cb 01 af 16 .......... Debug 

    # io/BinaryStream.es:203                    count += outbuf.write(i)

    0031: [1] 62 ......................... GetLocalSlot_1 
    0032: [2] 76 ......................... GetThisSlot_1 
    0033: [3] 63 ......................... GetLocalSlot_2 
    0034: [4] 17 22 01 ................... CallObjSlot <slot: 34> <argc: 1> 
    0037: [2] 99 ......................... PushResult 
    0038: [3] 00 ......................... Add 
    0039: [2] 9b ......................... PutLocalSlot_1 
    0040: [1] 40 e9 ...................... Goto.8 <addr: 19> 
    0042: [1] 96 ......................... Pop 
    0043: [0] 33 01 cd 01 d8 16 .......... Debug 

    # io/BinaryStream.es:205                return count

    0049: [0] 62 ......................... GetLocalSlot_1 
    0050: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     20      23         42           42       StopIteration

VARIABLE:   [write-00]  private var items : Array

VARIABLE:   [write-01]  private var count : Number

VARIABLE:   [write-02]  -hoisted-2 var i

FUNCTION:   [BinaryStream-24]  public function writeByte(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    0000: [0] 33 01 d6 01 ca 17 .......... Debug 

    # io/BinaryStream.es:214                outbuf.writeByte(outbuf)

    0006: [0] 76 ......................... GetThisSlot_1 
    0007: [1] 76 ......................... GetThisSlot_1 
    0008: [2] 17 23 01 ................... CallObjSlot <slot: 35> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [writeByte-00]  private var data : Number

FUNCTION:   [BinaryStream-25]  public function writeShort(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    0000: [0] 33 01 de 01 a9 18 .......... Debug 

    # io/BinaryStream.es:222                outbuf.writeShort(data)

    0006: [0] 76 ......................... GetThisSlot_1 
    0007: [1] 61 ......................... GetLocalSlot_0 
    0008: [2] 17 24 01 ................... CallObjSlot <slot: 36> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [writeShort-00]  private var data : Number

FUNCTION:   [BinaryStream-26]  public function writeDouble(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    0000: [0] 33 01 e6 01 89 19 .......... Debug 

    # io/BinaryStream.es:230                outbuf.writeDouble(data)

    0006: [0] 76 ......................... GetThisSlot_1 
    0007: [1] 61 ......................... GetLocalSlot_0 
    0008: [2] 17 25 01 ................... CallObjSlot <slot: 37> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [writeDouble-00]  private var data : Number

FUNCTION:   [BinaryStream-27]  public function writeInteger(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    0000: [0] 33 01 ee 01 ec 19 .......... Debug 

    # io/BinaryStream.es:238                outbuf.writeInteger(data)

    0006: [0] 76 ......................... GetThisSlot_1 
    0007: [1] 61 ......................... GetLocalSlot_0 
    0008: [2] 17 26 01 ................... CallObjSlot <slot: 38> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [writeInteger-00]  private var data : Number

FUNCTION:   [BinaryStream-28]  public function writeLong(data: Number) : Void

     ARG:   [arg-00]   private data : Number

    0000: [0] 33 01 f6 01 ce 1a .......... Debug 

    # io/BinaryStream.es:246                outbuf.writeLong(data)

    0006: [0] 76 ......................... GetThisSlot_1 
    0007: [1] 61 ......................... GetLocalSlot_0 
    0008: [2] 17 27 01 ................... CallObjSlot <slot: 39> <argc: 1> 
    0011: [0] 99 ......................... PushResult 
    0012: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [writeLong-00]  private var data : Number

VARIABLE:   [BinaryStreamInstanceType-00]  [ejs.io::BinaryStream,private] var inbuf : ByteArray

VARIABLE:   [BinaryStreamInstanceType-01]  [ejs.io::BinaryStream,private] var outbuf : ByteArray

VARIABLE:   [BinaryStreamInstanceType-02]  [ejs.io::BinaryStream,private] var nextStream : Stream

CLASS:      native class File extends Object
            #  Class Details: 62 class traits, 0 instance traits, requested slot 82

FUNCTION:   [File-01]  iterator override function get(deep: Boolean) : Iterator

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [get-00]  private var deep : Boolean

FUNCTION:   [File-02]  iterator override function getValues(deep: Boolean) : Iterator

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [getValues-00]  private var deep : Boolean

FUNCTION:   [File-03]  public get function length() : Number


    

FUNCTION:   [File-05]  -constructor- native function File(path: String) : void

     ARG:   [arg-00]   private path : String

    

VARIABLE:   [File-00]  private var path : String

FUNCTION:   [File-06]  -initializer- function File-initializer() : Void


    0000: [0] 33 83 1c 12 64 ............. Debug 

    # io/File.es:18                     use default namespace public

    0005: [0] 83 23 ...................... GetGlobalSlot <35> 
    0007: [1] 02 ......................... AddNamespaceRef 
    0008: [0] 33 83 1c 17 c4 1c .......... Debug 

    # io/File.es:23                     static const Closed: Number     = 0x0

    0014: [0] 46 ......................... Load0 
    0015: [1] 83 52 ...................... GetGlobalSlot <82> 
    0017: [2] ab ......................... PutObjSlot_7 
    0018: [0] 33 83 1c 1c f9 1c .......... Debug 

    # io/File.es:28                     static const Open: Number       = 0x1

    0024: [0] 47 ......................... Load1 
    0025: [1] 83 52 ...................... GetGlobalSlot <82> 
    0027: [2] ac ......................... PutObjSlot_8 
    0028: [0] 33 83 1c 21 ac 1d .......... Debug 

    # io/File.es:33                     static const Read: Number       = 0x2

    0034: [0] 48 ......................... Load2 
    0035: [1] 83 52 ...................... GetGlobalSlot <82> 
    0037: [2] ad ......................... PutObjSlot_9 
    0038: [0] 33 83 1c 26 df 1d .......... Debug 

    # io/File.es:38                     static const Write: Number      = 0x4   

    0044: [0] 4a ......................... Load4 
    0045: [1] 83 52 ...................... GetGlobalSlot <82> 
    0047: [2] bf 0a ...................... PutObjSlot <slot: 10> 
    0049: [0] 33 83 1c 2b 96 1e .......... Debug 

    # io/File.es:43                     static const Append: Number     = 0x8

    0055: [0] 4e ......................... Load8 
    0056: [1] 83 52 ...................... GetGlobalSlot <82> 
    0058: [2] bf 0b ...................... PutObjSlot <slot: 11> 
    0060: [0] 33 83 1c 30 cb 1e .......... Debug 

    # io/File.es:48                     static const Create: Number     = 0x10

    0066: [0] 56 10 ...................... LoadInt.8 <16> 
    0068: [1] 83 52 ...................... GetGlobalSlot <82> 
    0070: [2] bf 0c ...................... PutObjSlot <slot: 12> 
    0072: [0] 33 83 1c 35 81 1f .......... Debug 

    # io/File.es:53                     static const Truncate: Number   = 0x20

    0078: [0] 56 20 ...................... LoadInt.8 <32> 
    0080: [1] 83 52 ...................... GetGlobalSlot <82> 
    0082: [2] bf 0d ...................... PutObjSlot <slot: 13> 
    0084: [0] 33 83 1c 3c b9 1f .......... Debug 

    # io/File.es:60                     native function File(path: String)

    0090: [0] 33 83 1c 46 ee 1f .......... Debug 

    # io/File.es:70                     native function get absolutePath(): String

    0096: [0] 33 83 1c 4d ae 20 .......... Debug 

    # io/File.es:77                     native function get basename(): String

    0102: [0] 33 83 1c 53 e6 20 .......... Debug 

    # io/File.es:83                     native function close(graceful: Boolean = true): void 

    0108: [0] 33 83 1c 5b a5 21 .......... Debug 

    # io/File.es:91                     native function copy(toPath: String): void

    0114: [0] 33 83 1c 62 e4 21 .......... Debug 

    # io/File.es:98                     native static function createTempFile(directory: String = null): File

    0120: [0] 33 83 1c 68 cb 22 .......... Debug 

    # io/File.es:104                    native function get created(): Date 

    0126: [0] 33 83 1c 6f 80 23 .......... Debug 

    # io/File.es:111                    native function get dirname(): String

    0132: [0] 33 83 1c 75 b6 23 .......... Debug 

    # io/File.es:117                    native function get exists(): Boolean 

    0138: [0] 33 83 1c 7b ec 23 .......... Debug 

    # io/File.es:123                    native function get extension(): String 

    0144: [0] 33 83 1c 81 01 a7 24 ....... Debug 

    # io/File.es:129                    native function flush(): void 

    0151: [0] 33 83 1c 87 01 ce 24 ....... Debug 

    # io/File.es:135                    native function freeSpace(path: String = null): Number

    0158: [0] 33 83 1c 8f 01 97 25 ....... Debug 

    # io/File.es:143                    override iterator native function get(deep: Boolean = false): Iterator

    0165: [0] 33 83 1c 99 01 e6 25 ....... Debug 

    # io/File.es:153                    native function getFiles(enumDirs: Boolean = false): Array 

    0172: [0] 33 83 1c a1 01 bc 26 ....... Debug 

    # io/File.es:161                    override iterator native function getValues(deep: Boolean = false): Iterator

    0179: [0] 33 83 1c aa 01 91 27 ....... Debug 

    # io/File.es:170                    native static function getBytes(path: String): ByteArray 

    0186: [0] 33 83 1c b4 01 dc 27 ....... Debug 

    # io/File.es:180                    native static function getLines(path: String, encoding: String = App.UTF_8): Array 

    0193: [0] 33 83 1c be 01 ca 28 ....... Debug 

    # io/File.es:190                    native static function getString(path: String, encoding: String = App.UTF_8): String 

    0200: [0] 33 83 1c c8 01 b2 29 ....... Debug 

    # io/File.es:200                    native static function getXML(path: String): XML 

    0207: [0] 33 83 1c cf 01 f3 29 ....... Debug 

    # io/File.es:207                    native function get hasDriveSpec(): Boolean 

    0214: [0] 33 83 1c d6 01 b5 2a ....... Debug 

    # io/File.es:214                    native function get isDir(): Boolean

    0221: [0] 33 83 1c dd 01 e8 2a ....... Debug 

    # io/File.es:221                    native function get isOpen(): Boolean

    0228: [0] 33 83 1c e4 01 9d 2b ....... Debug 

    # io/File.es:228                    native function get isRegular(): Boolean

    0235: [0] 33 83 1c eb 01 d8 2b ....... Debug 

    # io/File.es:235                    native function get lastAccess(): Date 

    0242: [0] 33 83 1c f2 01 93 2c ....... Debug 

    # io/File.es:242                    override native function get length(): Number 

    0249: [0] 33 83 1c 84 02 ca 2c ....... Debug 

    # io/File.es:260                    native function makeDir(permissions: Number = 0755): void

    0256: [0] 33 83 1c 8b 02 a0 2d ....... Debug 

    # io/File.es:267                    native function get mode(): Number

    0263: [0] 33 83 1c 92 02 d0 2d ....... Debug 

    # io/File.es:274                    native function get modified(): Date 

    0270: [0] 33 83 1c 99 02 87 2e ....... Debug 

    # io/File.es:281                    native function get name(): String 

    0277: [0] 33 83 1c a1 02 b8 2e ....... Debug 

    # io/File.es:289                    native static function get newline(): String 

    0284: [0] 33 83 1c a8 02 f6 2e ....... Debug 

    # io/File.es:296                    native static function set newline(terminator: String): Void

    0291: [0] 33 83 1c b3 02 d2 2f ....... Debug 

    # io/File.es:307                    native function open(mode: Number = Read, permissions: Number = 0644): void

    0298: [0] 33 83 1c bf 02 ab 30 ....... Debug 

    # io/File.es:319                    static function openFileStream(filename: String, mode: Number = Read, permissions: Number = 0644): File {

    0305: [0] 33 83 1c d1 02 bc 32 ....... Debug 

    # io/File.es:337                    static function openTextStream(filename: String, mode: Number = Read, permissions: Number = 0644): TextStream {

    0312: [0] 33 83 1c e1 02 a6 34 ....... Debug 

    # io/File.es:353                    static function openBinaryStream(filename: String, mode: Number = Read, permissions: Number = 0644): BinaryStream {

    0319: [0] 33 83 1c ed 02 dd 35 ....... Debug 

    # io/File.es:365                    native static function get pathDelimiter(): String 

    0326: [0] 33 83 1c f5 02 a7 36 ....... Debug 

    # io/File.es:373                    native static function set pathDelimiter(delim: String): Void 

    0333: [0] 33 83 1c fc 02 86 37 ....... Debug 

    # io/File.es:380                    native function get parent(): String

    0340: [0] 33 83 1c 83 03 ba 37 ....... Debug 

    # io/File.es:387                    native function get permissions(): Number

    0347: [0] 33 83 1c 8a 03 ec 37 ....... Debug 

    # io/File.es:394                    native function set permissions(mask: Number): void

    0354: [0] 33 83 1c 92 03 bd 38 ....... Debug 

    # io/File.es:402                    native function get position(): Number

    0361: [0] 33 83 1c 9c 03 f5 38 ....... Debug 

    # io/File.es:412                    native function set position(value: Number): void

    0368: [0] 33 83 1c a8 03 bc 39 ....... Debug 

    # io/File.es:424                    native static function put(path: String, permissions: Number, ...args): void 

    0375: [0] 33 83 1c af 03 9b 3a ....... Debug 

    # io/File.es:431                    native function get relativePath()

    0382: [0] 33 83 1c ba 03 d3 3a ....... Debug 

    # io/File.es:442                    native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number

    0389: [0] 33 83 1c c3 03 b3 3b ....... Debug 

    # io/File.es:451                    native function readBytes(count: Number): ByteArray

    0396: [0] 33 83 1c cc 03 f9 3b ....... Debug 

    # io/File.es:460                    native function remove(): void 

    0403: [0] 33 83 1c d5 03 a8 3c ....... Debug 

    # io/File.es:469                    native function removeDir(recursive: Boolean = false): void

    0410: [0] 33 83 1c dd 03 80 3d ....... Debug 

    # io/File.es:477                    native function rename(toFile: String): void

    0417: [0] 33 83 1c e7 03 c3 3d ....... Debug 

    # io/File.es:487                    native function setCallback(callback: Function): void

    0424: [0] 33 83 1c fb 03 96 3e ....... Debug 

    # io/File.es:507                    native function get unixPath(): String

    0431: [0] 33 83 1c 88 04 ce 3e ....... Debug 

    # io/File.es:520                    native function write(...items): Number

    0438: [0] c4 ......................... Return 
    

VARIABLE:   [File-07]  public static var Closed : Number

VARIABLE:   [File-08]  public static var Open : Number

VARIABLE:   [File-09]  public static var Read : Number

VARIABLE:   [File-10]  public static var Write : Number

VARIABLE:   [File-11]  public static var Append : Number

VARIABLE:   [File-12]  public static var Create : Number

VARIABLE:   [File-13]  public static var Truncate : Number

FUNCTION:   [File-14]  public get function absolutePath() : String


    

FUNCTION:   [File-15]  public get function basename() : String


    

FUNCTION:   [File-16]  public native function close(graceful: Boolean) : Void

     ARG:   [arg-00]   private graceful : Boolean

    

VARIABLE:   [close-00]  private var graceful : Boolean

FUNCTION:   [File-17]  public native function copy(toPath: String) : Void

     ARG:   [arg-00]   private toPath : String

    

VARIABLE:   [copy-00]  private var toPath : String

FUNCTION:   [File-18]  public static function createTempFile(directory: String) : File

     ARG:   [arg-00]   private directory : String

    

VARIABLE:   [createTempFile-00]  private var directory : String

FUNCTION:   [File-19]  public get function created() : Date


    

FUNCTION:   [File-20]  public get function dirname() : String


    

FUNCTION:   [File-21]  public get function exists() : Boolean


    

FUNCTION:   [File-22]  public get function extension() : String


    

FUNCTION:   [File-23]  public native function flush() : Void


    

FUNCTION:   [File-24]  public native function freeSpace(path: String) : Number

     ARG:   [arg-00]   private path : String

    

VARIABLE:   [freeSpace-00]  private var path : String

FUNCTION:   [File-25]  public native function getFiles(enumDirs: Boolean) : Array

     ARG:   [arg-00]   private enumDirs : Boolean

    

VARIABLE:   [getFiles-00]  private var enumDirs : Boolean

FUNCTION:   [File-26]  public static function getBytes(path: String) : ByteArray

     ARG:   [arg-00]   private path : String

    

VARIABLE:   [getBytes-00]  private var path : String

FUNCTION:   [File-27]  public static function getLines(path: String, encoding: String) : Array

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private encoding : String

    

VARIABLE:   [getLines-00]  private var path : String

VARIABLE:   [getLines-01]  private var encoding : String

FUNCTION:   [File-28]  public static function getString(path: String, encoding: String) : String

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private encoding : String

    

VARIABLE:   [getString-00]  private var path : String

VARIABLE:   [getString-01]  private var encoding : String

FUNCTION:   [File-29]  public static function getXML(path: String) : XML

     ARG:   [arg-00]   private path : String

    

VARIABLE:   [getXML-00]  private var path : String

FUNCTION:   [File-30]  public get function hasDriveSpec() : Boolean


    

FUNCTION:   [File-31]  public get function isDir() : Boolean


    

FUNCTION:   [File-32]  public get function isOpen() : Boolean


    

FUNCTION:   [File-33]  public get function isRegular() : Boolean


    

FUNCTION:   [File-34]  public get function lastAccess() : Date


    

FUNCTION:   [File-35]  public native function makeDir(permissions: Number) : Void

     ARG:   [arg-00]   private permissions : Number

    

VARIABLE:   [makeDir-00]  private var permissions : Number

FUNCTION:   [File-36]  public get function mode() : Number


    

FUNCTION:   [File-37]  public get function modified() : Date


    

FUNCTION:   [File-38]  public get function name() : String


    

FUNCTION:   [File-39]  public get function newline() : String


    

FUNCTION:   [File-40]  public set function set-newline(terminator: String) : Void

     ARG:   [arg-00]   private terminator : String

    

VARIABLE:   [set-newline-00]  private var terminator : String

FUNCTION:   [File-41]  public native function open(mode: Number, permissions: Number) : Void

     ARG:   [arg-00]   private mode : Number
     ARG:   [arg-01]   private permissions : Number

    

VARIABLE:   [open-00]  private var mode : Number

VARIABLE:   [open-01]  private var permissions : Number

FUNCTION:   [File-42]  public static function openFileStream(filename: String, mode: Number, permissions: Number) : File

     ARG:   [arg-00]   private filename : String
     ARG:   [arg-01]   private mode : Number
     ARG:   [arg-02]   private permissions : Number
   LOCAL:   [local-03] var file : File

    0000: [0] 43 03 03 07 0b ............. InitDefaultArgs.8 <3> <5> <9> <13> 
    0005: [0] 88 09 01 ................... GetThisTypeSlot <slot: 9> <1> 
    0008: [1] 9b ......................... PutLocalSlot_1 
    0009: [0] 53 a4 01 ................... LoadInt.16 <420> 
    0012: [1] 9c ......................... PutLocalSlot_2 
    0013: [0] 33 83 1c c0 02 a2 31 ....... Debug 

    # io/File.es:320                        var file: File

    0020: [0] 33 83 1c c2 02 bd 31 ....... Debug 

    # io/File.es:322                        file = new File(filename)

    0027: [0] 83 52 ...................... GetGlobalSlot <82> 
    0029: [1] 8e ......................... New 
    0030: [1] 61 ......................... GetLocalSlot_0 
    0031: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0033: [1] 9d ......................... PutLocalSlot_3 
    0034: [0] 33 83 1c c3 02 e3 31 ....... Debug 

    # io/File.es:323                        file.open(mode, permissions)

    0041: [0] 64 ......................... GetLocalSlot_3 
    0042: [1] 62 ......................... GetLocalSlot_1 
    0043: [2] 63 ......................... GetLocalSlot_2 
    0044: [3] 17 29 02 ................... CallObjSlot <slot: 41> <argc: 2> 
    0047: [0] 33 83 1c c4 02 8c 32 ....... Debug 

    # io/File.es:324                        return file

    0054: [0] 64 ......................... GetLocalSlot_3 
    0055: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [openFileStream-00]  private var filename : String

VARIABLE:   [openFileStream-01]  private var mode : Number

VARIABLE:   [openFileStream-02]  private var permissions : Number

VARIABLE:   [openFileStream-03]  private var file : File

FUNCTION:   [File-43]  public static function openTextStream(filename: String, mode: Number, permissions: Number) : void

     ARG:   [arg-00]   private filename : String
     ARG:   [arg-01]   private mode : Number
     ARG:   [arg-02]   private permissions : Number
   LOCAL:   [local-03] var file : File

    0000: [0] 43 03 03 07 0b ............. InitDefaultArgs.8 <3> <5> <9> <13> 
    0005: [0] 88 09 01 ................... GetThisTypeSlot <slot: 9> <1> 
    0008: [1] 9b ......................... PutLocalSlot_1 
    0009: [0] 53 a4 01 ................... LoadInt.16 <420> 
    0012: [1] 9c ......................... PutLocalSlot_2 
    0013: [0] 33 83 1c d2 02 b4 33 ....... Debug 

    # io/File.es:338                        var file: File = new File(filename)

    0020: [0] 83 52 ...................... GetGlobalSlot <82> 
    0022: [1] 8e ......................... New 
    0023: [1] 61 ......................... GetLocalSlot_0 
    0024: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0026: [1] 9d ......................... PutLocalSlot_3 
    0027: [0] 33 83 1c d3 02 e3 31 ....... Debug 

    # io/File.es:339                        file.open(mode, permissions)

    0034: [0] 64 ......................... GetLocalSlot_3 
    0035: [1] 62 ......................... GetLocalSlot_1 
    0036: [2] 63 ......................... GetLocalSlot_2 
    0037: [3] 17 29 02 ................... CallObjSlot <slot: 41> <argc: 2> 
    0040: [0] 33 83 1c d4 02 e4 33 ....... Debug 

    # io/File.es:340                        return new TextStream(file)

    0047: [0] 83 56 ...................... GetGlobalSlot <86> 
    0049: [1] 8e ......................... New 
    0050: [1] 64 ......................... GetLocalSlot_3 
    0051: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0053: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [openTextStream-00]  private var filename : String

VARIABLE:   [openTextStream-01]  private var mode : Number

VARIABLE:   [openTextStream-02]  private var permissions : Number

VARIABLE:   [openTextStream-03]  private var file : File

FUNCTION:   [File-44]  public static function openBinaryStream(filename: String, mode: Number, permissions: Number) : BinaryStream

     ARG:   [arg-00]   private filename : String
     ARG:   [arg-01]   private mode : Number
     ARG:   [arg-02]   private permissions : Number
   LOCAL:   [local-03] var file : File

    0000: [0] 43 03 03 07 0b ............. InitDefaultArgs.8 <3> <5> <9> <13> 
    0005: [0] 88 09 01 ................... GetThisTypeSlot <slot: 9> <1> 
    0008: [1] 9b ......................... PutLocalSlot_1 
    0009: [0] 53 a4 01 ................... LoadInt.16 <420> 
    0012: [1] 9c ......................... PutLocalSlot_2 
    0013: [0] 33 83 1c e2 02 b4 33 ....... Debug 

    # io/File.es:354                        var file: File = new File(filename)

    0020: [0] 83 52 ...................... GetGlobalSlot <82> 
    0022: [1] 8e ......................... New 
    0023: [1] 61 ......................... GetLocalSlot_0 
    0024: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0026: [1] 9d ......................... PutLocalSlot_3 
    0027: [0] 33 83 1c e3 02 e3 31 ....... Debug 

    # io/File.es:355                        file.open(mode, permissions)

    0034: [0] 64 ......................... GetLocalSlot_3 
    0035: [1] 62 ......................... GetLocalSlot_1 
    0036: [2] 63 ......................... GetLocalSlot_2 
    0037: [3] 17 29 02 ................... CallObjSlot <slot: 41> <argc: 2> 
    0040: [0] 33 83 1c e4 02 a2 35 ....... Debug 

    # io/File.es:356                        return new BinaryStream(file)

    0047: [0] 83 51 ...................... GetGlobalSlot <81> 
    0049: [1] 8e ......................... New 
    0050: [1] 64 ......................... GetLocalSlot_3 
    0051: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0053: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [openBinaryStream-00]  private var filename : String

VARIABLE:   [openBinaryStream-01]  private var mode : Number

VARIABLE:   [openBinaryStream-02]  private var permissions : Number

VARIABLE:   [openBinaryStream-03]  private var file : File

FUNCTION:   [File-45]  public get function pathDelimiter() : String


    

FUNCTION:   [File-46]  public set function set-pathDelimiter(delim: String) : Void

     ARG:   [arg-00]   private delim : String

    

VARIABLE:   [set-pathDelimiter-00]  private var delim : String

FUNCTION:   [File-47]  public get function parent() : String


    

FUNCTION:   [File-48]  public get function permissions() : Number


    

FUNCTION:   [File-49]  public set function set-permissions(mask: Number) : Void

     ARG:   [arg-00]   private mask : Number

    

VARIABLE:   [set-permissions-00]  private var mask : Number

FUNCTION:   [File-50]  public get function position() : Number


    

FUNCTION:   [File-51]  public set function set-position(value: Number) : Void

     ARG:   [arg-00]   private value : Number

    

VARIABLE:   [set-position-00]  private var value : Number

FUNCTION:   [File-52]  public static function put(path: String, permissions: Number, args: Array) : Void

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private permissions : Number
     ARG:   [arg-02]   private args : Array

    

VARIABLE:   [put-00]  private var path : String

VARIABLE:   [put-01]  private var permissions : Number

VARIABLE:   [put-02]  private var args : Array

FUNCTION:   [File-53]  public get function relativePath() : void


    

FUNCTION:   [File-54]  public native function read(buffer: ByteArray, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number

    

VARIABLE:   [read-00]  private var buffer : ByteArray

VARIABLE:   [read-01]  private var offset : Number

VARIABLE:   [read-02]  private var count : Number

FUNCTION:   [File-55]  public native function readBytes(count: Number) : ByteArray

     ARG:   [arg-00]   private count : Number

    

VARIABLE:   [readBytes-00]  private var count : Number

FUNCTION:   [File-56]  public native function remove() : Void


    

FUNCTION:   [File-57]  public native function removeDir(recursive: Boolean) : Void

     ARG:   [arg-00]   private recursive : Boolean

    

VARIABLE:   [removeDir-00]  private var recursive : Boolean

FUNCTION:   [File-58]  public native function rename(toFile: String) : Void

     ARG:   [arg-00]   private toFile : String

    

VARIABLE:   [rename-00]  private var toFile : String

FUNCTION:   [File-59]  public native function setCallback(callback: Function) : Void

     ARG:   [arg-00]   private callback : Function

    

VARIABLE:   [setCallback-00]  private var callback : Function

FUNCTION:   [File-60]  public get function unixPath() : String


    

FUNCTION:   [File-61]  public native function write(items: Array) : Number

     ARG:   [arg-00]   private items : Array

    

VARIABLE:   [write-00]  private var items : Array

CLASS:      native class Http extends Object
            #  Class Details: 92 class traits, 0 instance traits, requested slot 83

FUNCTION:   [Http-05]  -constructor- native function Http(uri: String) : void

     ARG:   [arg-00]   private uri : String

    

VARIABLE:   [Http-00]  private var uri : String

FUNCTION:   [Http-06]  -initializer- function Http-initializer() : Void


    0000: [0] 33 9d 3f 12 64 ............. Debug 

    # io/Http.es:18                     use default namespace public

    0005: [0] 83 23 ...................... GetGlobalSlot <35> 
    0007: [1] 02 ......................... AddNamespaceRef 
    0008: [0] 33 9d 3f 14 de 3f .......... Debug 

    # io/Http.es:20                     /** HTTP status code */     static const Continue           : Number    = 100

    0014: [0] 56 64 ...................... LoadInt.8 <100> 
    0016: [1] 83 53 ...................... GetGlobalSlot <83> 
    0018: [2] ab ......................... PutObjSlot_7 
    0019: [0] 33 9d 3f 15 bd 40 .......... Debug 

    # io/Http.es:21                     /** HTTP status code */     static const Ok                 : Number    = 200

    0025: [0] 53 c8 00 ................... LoadInt.16 <200> 
    0028: [1] 83 53 ...................... GetGlobalSlot <83> 
    0030: [2] ac ......................... PutObjSlot_8 
    0031: [0] 33 9d 3f 16 96 41 .......... Debug 

    # io/Http.es:22                     /** HTTP status code */     static const Created            : Number    = 201

    0037: [0] 53 c9 00 ................... LoadInt.16 <201> 
    0040: [1] 83 53 ...................... GetGlobalSlot <83> 
    0042: [2] ad ......................... PutObjSlot_9 
    0043: [0] 33 9d 3f 17 f4 41 .......... Debug 

    # io/Http.es:23                     /** HTTP status code */     static const Accepted           : Number    = 202

    0049: [0] 53 ca 00 ................... LoadInt.16 <202> 
    0052: [1] 83 53 ...................... GetGlobalSlot <83> 
    0054: [2] bf 0a ...................... PutObjSlot <slot: 10> 
    0056: [0] 33 9d 3f 18 d3 42 .......... Debug 

    # io/Http.es:24                     /** HTTP status code */     static const NotAuthoritative   : Number    = 203

    0062: [0] 53 cb 00 ................... LoadInt.16 <203> 
    0065: [1] 83 53 ...................... GetGlobalSlot <83> 
    0067: [2] bf 0b ...................... PutObjSlot <slot: 11> 
    0069: [0] 33 9d 3f 19 ba 43 .......... Debug 

    # io/Http.es:25                     /** HTTP status code */     static const NoContent          : Number    = 204

    0075: [0] 53 cc 00 ................... LoadInt.16 <204> 
    0078: [1] 83 53 ...................... GetGlobalSlot <83> 
    0080: [2] bf 0c ...................... PutObjSlot <slot: 12> 
    0082: [0] 33 9d 3f 1a 9a 44 .......... Debug 

    # io/Http.es:26                     /** HTTP status code */     static const Reset              : Number    = 205

    0088: [0] 53 cd 00 ................... LoadInt.16 <205> 
    0091: [1] 83 53 ...................... GetGlobalSlot <83> 
    0093: [2] bf 0d ...................... PutObjSlot <slot: 13> 
    0095: [0] 33 9d 3f 1b f6 44 .......... Debug 

    # io/Http.es:27                     /** HTTP status code */     static const Partial            : Number    = 206

    0101: [0] 53 ce 00 ................... LoadInt.16 <206> 
    0104: [1] 83 53 ...................... GetGlobalSlot <83> 
    0106: [2] bf 0e ...................... PutObjSlot <slot: 14> 
    0108: [0] 33 9d 3f 1c d4 45 .......... Debug 

    # io/Http.es:28                     /** HTTP status code */     static const MultipleChoice     : Number    = 300

    0114: [0] 53 2c 01 ................... LoadInt.16 <300> 
    0117: [1] 83 53 ...................... GetGlobalSlot <83> 
    0119: [2] bf 0f ...................... PutObjSlot <slot: 15> 
    0121: [0] 33 9d 3f 1d b9 46 .......... Debug 

    # io/Http.es:29                     /** HTTP status code */     static const MovedPermanently   : Number    = 301

    0127: [0] 53 2d 01 ................... LoadInt.16 <301> 
    0130: [1] 83 53 ...................... GetGlobalSlot <83> 
    0132: [2] bf 10 ...................... PutObjSlot <slot: 16> 
    0134: [0] 33 9d 3f 1e a0 47 .......... Debug 

    # io/Http.es:30                     /** HTTP status code */     static const MovedTemporarily   : Number    = 302

    0140: [0] 53 2e 01 ................... LoadInt.16 <302> 
    0143: [1] 83 53 ...................... GetGlobalSlot <83> 
    0145: [2] bf 11 ...................... PutObjSlot <slot: 17> 
    0147: [0] 33 9d 3f 1f 87 48 .......... Debug 

    # io/Http.es:31                     /** HTTP status code */     static const SeeOther           : Number    = 303

    0153: [0] 53 2f 01 ................... LoadInt.16 <303> 
    0156: [1] 83 53 ...................... GetGlobalSlot <83> 
    0158: [2] bf 12 ...................... PutObjSlot <slot: 18> 
    0160: [0] 33 9d 3f 20 e6 48 .......... Debug 

    # io/Http.es:32                     /** HTTP status code */     static const NotModified        : Number    = 304

    0166: [0] 53 30 01 ................... LoadInt.16 <304> 
    0169: [1] 83 53 ...................... GetGlobalSlot <83> 
    0171: [2] bf 13 ...................... PutObjSlot <slot: 19> 
    0173: [0] 33 9d 3f 21 c8 49 .......... Debug 

    # io/Http.es:33                     /** HTTP status code */     static const UseProxy           : Number    = 305

    0179: [0] 53 31 01 ................... LoadInt.16 <305> 
    0182: [1] 83 53 ...................... GetGlobalSlot <83> 
    0184: [2] bf 14 ...................... PutObjSlot <slot: 20> 
    0186: [0] 33 9d 3f 22 a7 4a .......... Debug 

    # io/Http.es:34                     /** HTTP status code */     static const BadRequest         : Number    = 400

    0192: [0] 53 90 01 ................... LoadInt.16 <400> 
    0195: [1] 83 53 ...................... GetGlobalSlot <83> 
    0197: [2] bf 15 ...................... PutObjSlot <slot: 21> 
    0199: [0] 33 9d 3f 23 88 4b .......... Debug 

    # io/Http.es:35                     /** HTTP status code */     static const Unauthorized       : Number    = 401

    0205: [0] 53 91 01 ................... LoadInt.16 <401> 
    0208: [1] 83 53 ...................... GetGlobalSlot <83> 
    0210: [2] bf 16 ...................... PutObjSlot <slot: 22> 
    0212: [0] 33 9d 3f 24 eb 4b .......... Debug 

    # io/Http.es:36                     /** HTTP status code */     static const PaymentRequired    : Number    = 402

    0218: [0] 53 92 01 ................... LoadInt.16 <402> 
    0221: [1] 83 53 ...................... GetGlobalSlot <83> 
    0223: [2] bf 17 ...................... PutObjSlot <slot: 23> 
    0225: [0] 33 9d 3f 25 d1 4c .......... Debug 

    # io/Http.es:37                     /** HTTP status code */     static const Forbidden          : Number    = 403

    0231: [0] 53 93 01 ................... LoadInt.16 <403> 
    0234: [1] 83 53 ...................... GetGlobalSlot <83> 
    0236: [2] bf 18 ...................... PutObjSlot <slot: 24> 
    0238: [0] 33 9d 3f 26 b1 4d .......... Debug 

    # io/Http.es:38                     /** HTTP status code */     static const NotFound           : Number    = 404

    0244: [0] 53 94 01 ................... LoadInt.16 <404> 
    0247: [1] 83 53 ...................... GetGlobalSlot <83> 
    0249: [2] bf 19 ...................... PutObjSlot <slot: 25> 
    0251: [0] 33 9d 3f 27 90 4e .......... Debug 

    # io/Http.es:39                     /** HTTP status code */     static const BadMethod          : Number    = 405

    0257: [0] 53 95 01 ................... LoadInt.16 <405> 
    0260: [1] 83 53 ...................... GetGlobalSlot <83> 
    0262: [2] bf 1a ...................... PutObjSlot <slot: 26> 
    0264: [0] 33 9d 3f 28 f0 4e .......... Debug 

    # io/Http.es:40                     /** HTTP status code */     static const NotAccepted        : Number    = 406

    0270: [0] 53 96 01 ................... LoadInt.16 <406> 
    0273: [1] 83 53 ...................... GetGlobalSlot <83> 
    0275: [2] bf 1b ...................... PutObjSlot <slot: 27> 
    0277: [0] 33 9d 3f 29 d2 4f .......... Debug 

    # io/Http.es:41                     /** HTTP status code */     static const ProxyAuth          : Number    = 407

    0283: [0] 53 97 01 ................... LoadInt.16 <407> 
    0286: [1] 83 53 ...................... GetGlobalSlot <83> 
    0288: [2] bf 1c ...................... PutObjSlot <slot: 28> 
    0290: [0] 33 9d 3f 2a b2 50 .......... Debug 

    # io/Http.es:42                     /** HTTP status code */     static const ClientTimeout      : Number    = 408

    0296: [0] 53 98 01 ................... LoadInt.16 <408> 
    0299: [1] 83 53 ...................... GetGlobalSlot <83> 
    0301: [2] bf 1d ...................... PutObjSlot <slot: 29> 
    0303: [0] 33 9d 3f 2b 96 51 .......... Debug 

    # io/Http.es:43                     /** HTTP status code */     static const Conflict           : Number    = 409

    0309: [0] 53 99 01 ................... LoadInt.16 <409> 
    0312: [1] 83 53 ...................... GetGlobalSlot <83> 
    0314: [2] bf 1e ...................... PutObjSlot <slot: 30> 
    0316: [0] 33 9d 3f 2c f5 51 .......... Debug 

    # io/Http.es:44                     /** HTTP status code */     static const Gone               : Number    = 410

    0322: [0] 53 9a 01 ................... LoadInt.16 <410> 
    0325: [1] 83 53 ...................... GetGlobalSlot <83> 
    0327: [2] bf 1f ...................... PutObjSlot <slot: 31> 
    0329: [0] 33 9d 3f 2d d0 52 .......... Debug 

    # io/Http.es:45                     /** HTTP status code */     static const LengthRequired     : Number    = 411

    0335: [0] 53 9b 01 ................... LoadInt.16 <411> 
    0338: [1] 83 53 ...................... GetGlobalSlot <83> 
    0340: [2] bf 20 ...................... PutObjSlot <slot: 32> 
    0342: [0] 33 9d 3f 2e b5 53 .......... Debug 

    # io/Http.es:46                     /** HTTP status code */     static const PrecondFailed      : Number    = 412

    0348: [0] 53 9c 01 ................... LoadInt.16 <412> 
    0351: [1] 83 53 ...................... GetGlobalSlot <83> 
    0353: [2] bf 21 ...................... PutObjSlot <slot: 33> 
    0355: [0] 33 9d 3f 2f 99 54 .......... Debug 

    # io/Http.es:47                     /** HTTP status code */     static const EntityTooLarge     : Number    = 413

    0361: [0] 53 9d 01 ................... LoadInt.16 <413> 
    0364: [1] 83 53 ...................... GetGlobalSlot <83> 
    0366: [2] bf 22 ...................... PutObjSlot <slot: 34> 
    0368: [0] 33 9d 3f 30 fe 54 .......... Debug 

    # io/Http.es:48                     /** HTTP status code */     static const ReqTooLong         : Number    = 414

    0374: [0] 53 9e 01 ................... LoadInt.16 <414> 
    0377: [1] 83 53 ...................... GetGlobalSlot <83> 
    0379: [2] bf 23 ...................... PutObjSlot <slot: 35> 
    0381: [0] 33 9d 3f 31 df 55 .......... Debug 

    # io/Http.es:49                     /** HTTP status code */     static const UnsupportedType    : Number    = 415

    0387: [0] 53 9f 01 ................... LoadInt.16 <415> 
    0390: [1] 83 53 ...................... GetGlobalSlot <83> 
    0392: [2] bf 24 ...................... PutObjSlot <slot: 36> 
    0394: [0] 33 9d 3f 32 c5 56 .......... Debug 

    # io/Http.es:50                     /** HTTP status code */     static const ServerError        : Number    = 500

    0400: [0] 53 f4 01 ................... LoadInt.16 <500> 
    0403: [1] 83 53 ...................... GetGlobalSlot <83> 
    0405: [2] bf 25 ...................... PutObjSlot <slot: 37> 
    0407: [0] 33 9d 3f 33 a7 57 .......... Debug 

    # io/Http.es:51                     /** HTTP status code */     static const NotImplemented     : Number    = 501

    0413: [0] 53 f5 01 ................... LoadInt.16 <501> 
    0416: [1] 83 53 ...................... GetGlobalSlot <83> 
    0418: [2] bf 26 ...................... PutObjSlot <slot: 38> 
    0420: [0] 33 9d 3f 34 8c 58 .......... Debug 

    # io/Http.es:52                     /** HTTP status code */     static const BadGateway         : Number    = 502

    0426: [0] 53 f6 01 ................... LoadInt.16 <502> 
    0429: [1] 83 53 ...................... GetGlobalSlot <83> 
    0431: [2] bf 27 ...................... PutObjSlot <slot: 39> 
    0433: [0] 33 9d 3f 35 ed 58 .......... Debug 

    # io/Http.es:53                     /** HTTP status code */     static const Unavailable        : Number    = 503

    0439: [0] 53 f7 01 ................... LoadInt.16 <503> 
    0442: [1] 83 53 ...................... GetGlobalSlot <83> 
    0444: [2] bf 28 ...................... PutObjSlot <slot: 40> 
    0446: [0] 33 9d 3f 36 cf 59 .......... Debug 

    # io/Http.es:54                     /** HTTP status code */     static const GatewayTimeout     : Number    = 504

    0452: [0] 53 f8 01 ................... LoadInt.16 <504> 
    0455: [1] 83 53 ...................... GetGlobalSlot <83> 
    0457: [2] bf 29 ...................... PutObjSlot <slot: 41> 
    0459: [0] 33 9d 3f 37 b4 5a .......... Debug 

    # io/Http.es:55                     /** HTTP status code */     static const Version            : Number    = 505

    0465: [0] 53 f9 01 ................... LoadInt.16 <505> 
    0468: [1] 83 53 ...................... GetGlobalSlot <83> 
    0470: [2] bf 2a ...................... PutObjSlot <slot: 42> 
    0472: [0] 33 9d 3f 3f 92 5b .......... Debug 

    # io/Http.es:63                     native function Http(uri: String = null)

    0478: [0] 33 9d 3f 48 cc 5b .......... Debug 

    # io/Http.es:72                     native function addRequestHeader(key: String, value: String, overwrite: Boolean = true): Void

    0484: [0] 33 9d 3f 4f d1 5c .......... Debug 

    # io/Http.es:79                     native function get available(): Number 

    0490: [0] 33 9d 3f 61 8c 5d .......... Debug 

    # io/Http.es:97                     native function set callback(cb: Function): Void

    0496: [0] 33 9d 3f 66 d5 5d .......... Debug 

    # io/Http.es:102                    native function get callback(): Function

    0502: [0] 33 9d 3f 6d 86 5e .......... Debug 

    # io/Http.es:109                    native function close(graceful: Boolean = true): Void 

    0508: [0] 33 9d 3f 77 c5 5e .......... Debug 

    # io/Http.es:119                    native function connect(): Void

    0514: [0] 33 9d 3f 7f f5 5e .......... Debug 

    # io/Http.es:127                    native function get certificateFile(): String

    0520: [0] 33 9d 3f 89 01 bb 5f ....... Debug 

    # io/Http.es:137                    native function set certificateFile(certFile: String): Void

    0527: [0] 33 9d 3f 90 01 9c 60 ....... Debug 

    # io/Http.es:144                    native function get code(): Number

    0534: [0] 33 9d 3f 97 01 cc 60 ....... Debug 

    # io/Http.es:151                    native function get codeString(): String

    0541: [0] 33 9d 3f 9e 01 88 61 ....... Debug 

    # io/Http.es:158                    native function get contentEncoding(): String

    0548: [0] 33 9d 3f a5 01 ce 61 ....... Debug 

    # io/Http.es:165                    native function get contentLength(): Number

    0555: [0] 33 9d 3f ac 01 90 62 ....... Debug 

    # io/Http.es:172                    native function get contentType(): String

    0562: [0] 33 9d 3f b3 01 ce 62 ....... Debug 

    # io/Http.es:179                    native function get date(): Date

    0569: [0] 33 9d 3f bd 01 fc 62 ....... Debug 

    # io/Http.es:189                    native function del(uri: String = null): Void

    0576: [0] 33 9d 3f c4 01 b6 63 ....... Debug 

    # io/Http.es:196                    native function get expires(): Date

    0583: [0] 33 9d 3f ca 01 ea 63 ....... Debug 

    # io/Http.es:202                    function flush(): Void {

    0590: [0] 33 9d 3f d1 01 8b 64 ....... Debug 

    # io/Http.es:209                    native function get followRedirects(): Boolean

    0597: [0] 33 9d 3f d8 01 d2 64 ....... Debug 

    # io/Http.es:216                    native function set followRedirects(flag: Boolean): Void

    0604: [0] 33 9d 3f e4 01 ac 65 ....... Debug 

    # io/Http.es:228                    native function form(uri: String, postData: Object): Void

    0611: [0] 33 9d 3f ee 01 fc 65 ....... Debug 

    # io/Http.es:238                    native function get(uri: String = null): Void

    0618: [0] 33 9d 3f f8 01 b2 66 ....... Debug 

    # io/Http.es:248                    native function head(uri: String = null): Void

    0625: [0] 33 9d 3f ff 01 ee 66 ....... Debug 

    # io/Http.es:255                    native function header(key: String): String

    0632: [0] 33 9d 3f 86 02 a9 67 ....... Debug 

    # io/Http.es:262                    native function get headers(): Object

    0639: [0] 33 9d 3f 8d 02 df 67 ....... Debug 

    # io/Http.es:269                    native function get isSecure(): Boolean

    0646: [0] 33 9d 3f 94 02 98 68 ....... Debug 

    # io/Http.es:276                    native function get keyFile(): String

    0653: [0] 33 9d 3f 9c 02 ce 68 ....... Debug 

    # io/Http.es:284                    native function set keyFile(keyFile: String): Void

    0660: [0] 33 9d 3f a3 02 95 69 ....... Debug 

    # io/Http.es:291                    native function get lastModified(): Date

    0667: [0] 33 9d 3f aa 02 d3 69 ....... Debug 

    # io/Http.es:298                    native function get method(): String

    0674: [0] 33 9d 3f b2 02 87 6a ....... Debug 

    # io/Http.es:306                    native function set method(name: String)

    0681: [0] 33 9d 3f c1 02 c3 6a ....... Debug 

    # io/Http.es:321                    native function post(uri: String, ...data): Void

    0688: [0] 33 9d 3f c9 02 81 6b ....... Debug 

    # io/Http.es:329                    native function set postLength(length: Number): Void

    0695: [0] 33 9d 3f cc 02 cd 6b ....... Debug 

    # io/Http.es:332                    native function get postLength(): Number

    0702: [0] 33 9d 3f d3 02 89 6c ....... Debug 

    # io/Http.es:339                    native function set postData(items: Object): Void

    0709: [0] 33 9d 3f e1 02 d0 6c ....... Debug 

    # io/Http.es:353                    native function put(uri: String, ...putData): Void

    0716: [0] 33 9d 3f ee 02 d3 3a ....... Debug 

    # io/Http.es:366                    native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number

    0723: [0] 33 9d 3f f7 02 93 6d ....... Debug 

    # io/Http.es:375                    native function readString(count: Number = -1): String

    0730: [0] 33 9d 3f 80 03 d2 6d ....... Debug 

    # io/Http.es:384                    native function readLines(count: Number = -1): Array

    0737: [0] 33 9d 3f 88 03 99 6e ....... Debug 

    # io/Http.es:392                    native function readXml(): XML

    0744: [0] 33 9d 3f 8f 03 c8 6e ....... Debug 

    # io/Http.es:399                    native function get requestStream(): Stream

    0751: [0] 33 9d 3f 97 03 8a 6f ....... Debug 

    # io/Http.es:407                    function get response(): String {

    0758: [0] 33 9d 3f a0 03 dd 6f ....... Debug 

    # io/Http.es:416                    native function get responseStream(): Stream

    0765: [0] 33 9d 3f a6 03 a1 70 ....... Debug 

    # io/Http.es:422                    native function setCredentials(username: String, password: String): Void

    0772: [0] 33 9d 3f ad 03 93 71 ....... Debug 

    # io/Http.es:429                    native function get timeout(): Number

    0779: [0] 33 9d 3f b4 03 c9 71 ....... Debug 

    # io/Http.es:436                    native function set timeout(timeout: Number): Void

    0786: [0] 33 9d 3f bf 03 90 72 ....... Debug 

    # io/Http.es:447                    native function upload(uri: String, filename: String): Void

    0793: [0] 33 9d 3f c6 03 db 72 ....... Debug 

    # io/Http.es:454                    native function get uri(): String

    0800: [0] 33 9d 3f ce 03 85 73 ....... Debug 

    # io/Http.es:462                    native function set uri(uriString: String): Void

    0807: [0] 33 9d 3f dd 03 d0 73 ....... Debug 

    # io/Http.es:477                    native function write(...data): Void

    0814: [0] c4 ......................... Return 
    

VARIABLE:   [Http-07]  public static var Continue : Number

VARIABLE:   [Http-08]  public static var Ok : Number

VARIABLE:   [Http-09]  public static var Created : Number

VARIABLE:   [Http-10]  public static var Accepted : Number

VARIABLE:   [Http-11]  public static var NotAuthoritative : Number

VARIABLE:   [Http-12]  public static var NoContent : Number

VARIABLE:   [Http-13]  public static var Reset : Number

VARIABLE:   [Http-14]  public static var Partial : Number

VARIABLE:   [Http-15]  public static var MultipleChoice : Number

VARIABLE:   [Http-16]  public static var MovedPermanently : Number

VARIABLE:   [Http-17]  public static var MovedTemporarily : Number

VARIABLE:   [Http-18]  public static var SeeOther : Number

VARIABLE:   [Http-19]  public static var NotModified : Number

VARIABLE:   [Http-20]  public static var UseProxy : Number

VARIABLE:   [Http-21]  public static var BadRequest : Number

VARIABLE:   [Http-22]  public static var Unauthorized : Number

VARIABLE:   [Http-23]  public static var PaymentRequired : Number

VARIABLE:   [Http-24]  public static var Forbidden : Number

VARIABLE:   [Http-25]  public static var NotFound : Number

VARIABLE:   [Http-26]  public static var BadMethod : Number

VARIABLE:   [Http-27]  public static var NotAccepted : Number

VARIABLE:   [Http-28]  public static var ProxyAuth : Number

VARIABLE:   [Http-29]  public static var ClientTimeout : Number

VARIABLE:   [Http-30]  public static var Conflict : Number

VARIABLE:   [Http-31]  public static var Gone : Number

VARIABLE:   [Http-32]  public static var LengthRequired : Number

VARIABLE:   [Http-33]  public static var PrecondFailed : Number

VARIABLE:   [Http-34]  public static var EntityTooLarge : Number

VARIABLE:   [Http-35]  public static var ReqTooLong : Number

VARIABLE:   [Http-36]  public static var UnsupportedType : Number

VARIABLE:   [Http-37]  public static var ServerError : Number

VARIABLE:   [Http-38]  public static var NotImplemented : Number

VARIABLE:   [Http-39]  public static var BadGateway : Number

VARIABLE:   [Http-40]  public static var Unavailable : Number

VARIABLE:   [Http-41]  public static var GatewayTimeout : Number

VARIABLE:   [Http-42]  public static var Version : Number

FUNCTION:   [Http-43]  public native function addRequestHeader(key: String, value: String, overwrite: Boolean) : Void

     ARG:   [arg-00]   private key : String
     ARG:   [arg-01]   private value : String
     ARG:   [arg-02]   private overwrite : Boolean

    

VARIABLE:   [addRequestHeader-00]  private var key : String

VARIABLE:   [addRequestHeader-01]  private var value : String

VARIABLE:   [addRequestHeader-02]  private var overwrite : Boolean

FUNCTION:   [Http-44]  public get function available() : Number


    

FUNCTION:   [Http-45]  public set function set-callback(cb: Function) : Void

     ARG:   [arg-00]   private cb : Function

    

VARIABLE:   [set-callback-00]  private var cb : Function

FUNCTION:   [Http-46]  public get function callback() : Function


    

FUNCTION:   [Http-47]  public native function close(graceful: Boolean) : Void

     ARG:   [arg-00]   private graceful : Boolean

    

VARIABLE:   [close-00]  private var graceful : Boolean

FUNCTION:   [Http-48]  public native function connect() : Void


    

FUNCTION:   [Http-49]  public get function certificateFile() : String


    

FUNCTION:   [Http-50]  public set function set-certificateFile(certFile: String) : Void

     ARG:   [arg-00]   private certFile : String

    

VARIABLE:   [set-certificateFile-00]  private var certFile : String

FUNCTION:   [Http-51]  public get function code() : Number


    

FUNCTION:   [Http-52]  public get function codeString() : String


    

FUNCTION:   [Http-53]  public get function contentEncoding() : String


    

FUNCTION:   [Http-54]  public get function contentLength() : Number


    

FUNCTION:   [Http-55]  public get function contentType() : String


    

FUNCTION:   [Http-56]  public get function date() : Date


    

FUNCTION:   [Http-57]  public native function del(uri: String) : Void

     ARG:   [arg-00]   private uri : String

    

VARIABLE:   [del-00]  private var uri : String

FUNCTION:   [Http-58]  public get function expires() : Date


    

FUNCTION:   [Http-59]  public function flush() : Void


    0000: [0] 5a ......................... LoadNull 
    0001: [1] c5 ......................... ReturnValue 
    0002: [0] 33 9d 3f cb 01 f0 07 ....... Debug 

    # io/Http.es:203                    }
    

FUNCTION:   [Http-60]  public get function followRedirects() : Boolean


    

FUNCTION:   [Http-61]  public set function set-followRedirects(flag: Boolean) : Void

     ARG:   [arg-00]   private flag : Boolean

    

VARIABLE:   [set-followRedirects-00]  private var flag : Boolean

FUNCTION:   [Http-62]  public native function form(uri: String, postData: Object) : Void

     ARG:   [arg-00]   private uri : String
     ARG:   [arg-01]   private postData : Object

    

VARIABLE:   [form-00]  private var uri : String

VARIABLE:   [form-01]  private var postData : Object

FUNCTION:   [Http-63]  public native function get(uri: String) : Void

     ARG:   [arg-00]   private uri : String

    

VARIABLE:   [get-00]  private var uri : String

FUNCTION:   [Http-64]  public native function head(uri: String) : Void

     ARG:   [arg-00]   private uri : String

    

VARIABLE:   [head-00]  private var uri : String

FUNCTION:   [Http-65]  public native function header(key: String) : String

     ARG:   [arg-00]   private key : String

    

VARIABLE:   [header-00]  private var key : String

FUNCTION:   [Http-66]  public get function headers() : Object


    

FUNCTION:   [Http-67]  public get function isSecure() : Boolean


    

FUNCTION:   [Http-68]  public get function keyFile() : String


    

FUNCTION:   [Http-69]  public set function set-keyFile(keyFile: String) : Void

     ARG:   [arg-00]   private keyFile : String

    

VARIABLE:   [set-keyFile-00]  private var keyFile : String

FUNCTION:   [Http-70]  public get function lastModified() : Date


    

FUNCTION:   [Http-71]  public get function method() : String


    

FUNCTION:   [Http-72]  public set function set-method(name: String) : void

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [set-method-00]  private var name : String

FUNCTION:   [Http-73]  public native function post(uri: String, data: Array) : Void

     ARG:   [arg-00]   private uri : String
     ARG:   [arg-01]   private data : Array

    

VARIABLE:   [post-00]  private var uri : String

VARIABLE:   [post-01]  private var data : Array

FUNCTION:   [Http-74]  public set function set-postLength(length: Number) : Void

     ARG:   [arg-00]   private length : Number

    

VARIABLE:   [set-postLength-00]  private var length : Number

FUNCTION:   [Http-75]  public get function postLength() : Number


    

FUNCTION:   [Http-76]  public set function set-postData(items: Object) : Void

     ARG:   [arg-00]   private items : Object

    

VARIABLE:   [set-postData-00]  private var items : Object

FUNCTION:   [Http-77]  public native function put(uri: String, putData: Array) : Void

     ARG:   [arg-00]   private uri : String
     ARG:   [arg-01]   private putData : Array

    

VARIABLE:   [put-00]  private var uri : String

VARIABLE:   [put-01]  private var putData : Array

FUNCTION:   [Http-78]  public native function read(buffer: ByteArray, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number

    

VARIABLE:   [read-00]  private var buffer : ByteArray

VARIABLE:   [read-01]  private var offset : Number

VARIABLE:   [read-02]  private var count : Number

FUNCTION:   [Http-79]  public native function readString(count: Number) : String

     ARG:   [arg-00]   private count : Number

    

VARIABLE:   [readString-00]  private var count : Number

FUNCTION:   [Http-80]  public native function readLines(count: Number) : Array

     ARG:   [arg-00]   private count : Number

    

VARIABLE:   [readLines-00]  private var count : Number

FUNCTION:   [Http-81]  public native function readXml() : XML


    

FUNCTION:   [Http-82]  public get function requestStream() : Stream


    

FUNCTION:   [Http-83]  public get function response() : String


    0000: [0] 33 9d 3f 98 03 b4 6f ....... Debug 

    # io/Http.es:408                        return readString()

    0007: [0] 18 4f 00 ................... CallThisSlot <slot: 79> <argc: 0> 
    0010: [0] 99 ......................... PushResult 
    0011: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [Http-84]  public get function responseStream() : Stream


    

FUNCTION:   [Http-85]  public native function setCredentials(username: String, password: String) : Void

     ARG:   [arg-00]   private username : String
     ARG:   [arg-01]   private password : String

    

VARIABLE:   [setCredentials-00]  private var username : String

VARIABLE:   [setCredentials-01]  private var password : String

FUNCTION:   [Http-86]  public get function timeout() : Number


    

FUNCTION:   [Http-87]  public set function set-timeout(timeout: Number) : Void

     ARG:   [arg-00]   private timeout : Number

    

VARIABLE:   [set-timeout-00]  private var timeout : Number

FUNCTION:   [Http-88]  public native function upload(uri: String, filename: String) : Void

     ARG:   [arg-00]   private uri : String
     ARG:   [arg-01]   private filename : String

    

VARIABLE:   [upload-00]  private var uri : String

VARIABLE:   [upload-01]  private var filename : String

FUNCTION:   [Http-89]  public get function uri() : String


    

FUNCTION:   [Http-90]  public set function set-uri(uriString: String) : Void

     ARG:   [arg-00]   private uriString : String

    

VARIABLE:   [set-uri-00]  private var uriString : String

FUNCTION:   [Http-91]  public native function write(data: Array) : Void

     ARG:   [arg-00]   private data : Array

    

VARIABLE:   [write-00]  private var data : Array

CLASS:      class HttpDataEvent extends Event
            #  Class Details: 12 class traits, 4 instance traits, requested slot 84

FUNCTION:   [HttpDataEvent-04]  public override function toString() : String


    0000: [0] 33 01 55 b6 05 ............. Debug 

    # io/BinaryStream.es:85     ray) {

    0005: [0] 5c eb 05 ................... LoadString <           }> 
    0008: [1] 5d ......................... LoadThis 
    0009: [2] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0012: [1] 99 ......................... PushResult 
    0013: [2] 87 08 00 ................... GetTypeSlot <slot: 8> <0> 
    0016: [2] 00 ......................... Add 
    0017: [1] 5c f4 05 ................... LoadString <  }> 
    0020: [2] 00 ......................... Add 
    0021: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [HttpDataEvent-10]  -constructor- function HttpDataEvent() : void


    0000: [0] 20 00 ...................... CallNextConstructor <argc: 0> 
    0002: [0] c4 ......................... Return 
    

FUNCTION:   [HttpDataEvent-11]  -initializer- function HttpDataEvent-initializer() : Void


    0000: [0] c4 ......................... Return 
    

CLASS:      class HttpErrorEvent extends Event
            #  Class Details: 12 class traits, 4 instance traits, requested slot 85

FUNCTION:   [HttpErrorEvent-04]  public override function toString() : String


    0000: [0] 33 01 55 b6 05 ............. Debug 

    # io/BinaryStream.es:85     ray) {

    0005: [0] 5c eb 05 ................... LoadString <           }> 
    0008: [1] 5d ......................... LoadThis 
    0009: [2] 16 1e 01 ................... CallGlobalSlot <slot: 30> <argc: 1> 
    0012: [1] 99 ......................... PushResult 
    0013: [2] 87 08 00 ................... GetTypeSlot <slot: 8> <0> 
    0016: [2] 00 ......................... Add 
    0017: [1] 5c f4 05 ................... LoadString <  }> 
    0020: [2] 00 ......................... Add 
    0021: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [HttpErrorEvent-10]  -constructor- function HttpErrorEvent() : void


    0000: [0] 20 00 ...................... CallNextConstructor <argc: 0> 
    0002: [0] c4 ......................... Return 
    

FUNCTION:   [HttpErrorEvent-11]  -initializer- function HttpErrorEvent-initializer() : Void


    0000: [0] c4 ......................... Return 
    

CLASS:      class TextStream extends Object
            #  Class Details: 21 class traits, 4 instance traits, requested slot 86

FUNCTION:   [TextStream-05]  -constructor- function TextStream(stream: Stream) : void

     ARG:   [arg-00]   private stream : Stream

    0000: [0] 5c d3 78 ................... LoadString <
> 
    0003: [1] ae ......................... PutThisSlot_0 
    0004: [0] 83 56 ...................... GetGlobalSlot <86> 
    0006: [1] 73 ......................... GetObjSlot_8 
    0007: [2] b0 ......................... PutThisSlot_2 
    0008: [1] 33 92 76 36 b5 79 .......... Debug 

    # io/TextStream.es:54                   if (stream == null) {

    0014: [1] 61 ......................... GetLocalSlot_0 
    0015: [2] 83 34 ...................... GetGlobalSlot <52> 
    0017: [3] 25 ......................... CompareEQ 
    0018: [2] 12 11 ...................... BranchFalse.8 <addr: 37> 
    0020: [1] 33 92 76 37 d7 79 .......... Debug 

    # io/TextStream.es:55                       throw new ArgError("Must supply a Stream argument")

    0026: [1] 83 0b ...................... GetGlobalSlot <11> 
    0028: [2] 8e ......................... New 
    0029: [2] 5c 9b 7a ................... LoadString <Must supply a Stream argument> 
    0032: [3] 1f 01 ...................... CallConstructor <argc: 1> 
    0034: [2] cc ......................... Throw 
    0035: [2] 40 00 ...................... Goto.8 <addr: 37> 
    0037: [2] 33 92 76 38 ea 05 .......... Debug 

    # io/TextStream.es:56                   }

    0043: [2] 33 92 76 3a b9 7a .......... Debug 

    # io/TextStream.es:58                   inbuf = new ByteArray(System.Bufsize, true)

    0049: [2] 83 09 ...................... GetGlobalSlot <9> 
    0051: [3] 8e ......................... New 
    0052: [3] 83 5c ...................... GetGlobalSlot <92> 
    0054: [4] 87 06 00 ................... GetTypeSlot <slot: 6> <0> 
    0057: [4] 83 39 ...................... GetGlobalSlot <57> 
    0059: [5] 1f 02 ...................... CallConstructor <argc: 2> 
    0061: [3] af ......................... PutThisSlot_1 
    0062: [2] 33 92 76 3b f1 7a .......... Debug 

    # io/TextStream.es:59                   inbuf.input = fill

    0068: [2] 88 0d 01 ................... GetThisTypeSlot <slot: 13> <1> 
    0071: [3] 76 ......................... GetThisSlot_1 
    0072: [4] c1 11 01 ................... PutTypeSlot <slot: 17> <1> 
    0075: [2] 33 92 76 3c 9f 04 .......... Debug 

    # io/TextStream.es:60                   nextStream = stream

    0081: [2] 61 ......................... GetLocalSlot_0 
    0082: [3] b1 ......................... PutThisSlot_3 
    0083: [2] 33 92 76 3e 90 7b .......... Debug 

    # io/TextStream.es:62                   if (Config.OS == "WIN") {

    0089: [2] 83 59 ...................... GetGlobalSlot <89> 
    0091: [3] 87 0f 00 ................... GetTypeSlot <slot: 15> <0> 
    0094: [3] 5c b6 7b ................... LoadString <WIN> 
    0097: [4] 25 ......................... CompareEQ 
    0098: [3] 12 0c ...................... BranchFalse.8 <addr: 112> 
    0100: [2] 33 92 76 3f ba 7b .......... Debug 

    # io/TextStream.es:63                       newline = "\r\n"

    0106: [2] 5c db 7b ................... LoadString <
> 
    0109: [3] ae ......................... PutThisSlot_0 
    0110: [2] 40 00 ...................... Goto.8 <addr: 112> 
    0112: [2] c4 ......................... Return 
    0113: [0] 33 92 76 41 f0 07 .......... Debug 

    # io/TextStream.es:65               }
    

VARIABLE:   [TextStream-00]  private var stream : Stream

FUNCTION:   [TextStream-06]  -initializer- function TextStream-initializer() : Void


    0000: [0] 33 92 76 13 64 ............. Debug 

    # io/TextStream.es:19               use default namespace public

    0005: [0] 83 23 ...................... GetGlobalSlot <35> 
    0007: [1] 02 ......................... AddNamespaceRef 
    0008: [0] 33 92 76 16 d8 76 .......... Debug 

    # io/TextStream.es:22               static const LATIN1: String = "latin1"

    0014: [0] 5c 8e 77 ................... LoadString <latin1> 
    0017: [1] 83 56 ...................... GetGlobalSlot <86> 
    0019: [2] ab ......................... PutObjSlot_7 
    0020: [0] 33 92 76 19 95 77 .......... Debug 

    # io/TextStream.es:25               static const UTF_8: String = "utf-8"

    0026: [0] 5c c8 77 ................... LoadString <utf-8> 
    0029: [1] 83 56 ...................... GetGlobalSlot <86> 
    0031: [2] ac ......................... PutObjSlot_8 
    0032: [0] 33 92 76 1c ce 77 .......... Debug 

    # io/TextStream.es:28               static const UTF_16: String = "utf-16"

    0038: [0] 5c 84 78 ................... LoadString <utf-16> 
    0041: [1] 83 56 ...................... GetGlobalSlot <86> 
    0043: [2] ad ......................... PutObjSlot_9 
    0044: [0] 33 92 76 21 8b 78 .......... Debug 

    # io/TextStream.es:33               private var newline: String = "\n"

    0050: [0] 33 92 76 26 ae 02 .......... Debug 

    # io/TextStream.es:38               private var inbuf: ByteArray

    0056: [0] 33 92 76 29 d5 78 .......... Debug 

    # io/TextStream.es:41               private var format: String = UTF_8

    0062: [0] 33 92 76 2e af 03 .......... Debug 

    # io/TextStream.es:46               private var nextStream: Stream

    0068: [0] 33 92 76 35 87 79 .......... Debug 

    # io/TextStream.es:53               function TextStream(stream: Stream) {

    0074: [0] 33 92 76 47 de 7b .......... Debug 

    # io/TextStream.es:71               function close(graceful: Boolean = true): Void {

    0080: [0] 33 92 76 51 be 7c .......... Debug 

    # io/TextStream.es:81               function get encoding(): String {

    0086: [0] 33 92 76 5a 82 7d .......... Debug 

    # io/TextStream.es:90               function set encoding(encoding: String = UTF_8): Void {

    0092: [0] 33 92 76 63 ed 7d .......... Debug 

    # io/TextStream.es:99               private function fill(): Number {

    0098: [0] 33 92 76 6f ea 63 .......... Debug 

    # io/TextStream.es:111              function flush(): Void {

    0104: [0] 33 92 76 7e b4 7f .......... Debug 

    # io/TextStream.es:126              function read(buffer: ByteArray, offset: Number = -1, count: Number = -1): Number {

    0110: [0] 33 92 76 9f 01 95 85 01 .... Debug 

    # io/TextStream.es:159              function readLine(): String {

    0118: [0] 33 92 76 c3 01 9e 8c 01 .... Debug 

    # io/TextStream.es:195              function readLines(numLines: Number = -1): Array {

    0126: [0] 33 92 76 da 01 c9 8f 01 .... Debug 

    # io/TextStream.es:218              function readString(count: Number = -1): String {

    0134: [0] 33 92 76 e6 01 ae 90 01 .... Debug 

    # io/TextStream.es:230              function write(...data): Number {

    0142: [0] 33 92 76 f2 01 82 91 01 .... Debug 

    # io/TextStream.es:242              function writeLine(...lines): Number {

    0150: [0] c4 ......................... Return 
    

VARIABLE:   [TextStream-07]  public static var LATIN1 : String

VARIABLE:   [TextStream-08]  public static var UTF_8 : String

VARIABLE:   [TextStream-09]  public static var UTF_16 : String

FUNCTION:   [TextStream-10]  public function close(graceful: Boolean) : Void

     ARG:   [arg-00]   private graceful : Boolean

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 39 ...................... GetGlobalSlot <57> 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 92 76 48 9f 0c .......... Debug 

    # io/TextStream.es:72                   inbuf.flush()

    0013: [0] 76 ......................... GetThisSlot_1 
    0014: [1] 17 0f 00 ................... CallObjSlot <slot: 15> <argc: 0> 
    0017: [0] 33 92 76 49 97 7c .......... Debug 

    # io/TextStream.es:73                   nextStream.close(graceful)

    0023: [0] 78 ......................... GetThisSlot_3 
    0024: [1] 61 ......................... GetLocalSlot_0 
    0025: [2] 1d 8e 09 d0 01 01 .......... CallObjName <close> <public> <argc: 1> 
    0031: [0] 5a ......................... LoadNull 
    0032: [1] c5 ......................... ReturnValue 
    0033: [0] 33 92 76 4a f0 07 .......... Debug 

    # io/TextStream.es:74               }
    

VARIABLE:   [close-00]  private var graceful : Boolean

FUNCTION:   [TextStream-11]  public get function encoding() : String


    0000: [0] 33 92 76 52 e8 7c .......... Debug 

    # io/TextStream.es:82                   return format

    0006: [0] 77 ......................... GetThisSlot_2 
    0007: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [TextStream-12]  public set function set-encoding(encoding: String) : Void

     ARG:   [arg-00]   private encoding : String

    0000: [0] 43 02 02 06 ................ InitDefaultArgs.8 <2> <4> <8> 
    0004: [0] 88 08 01 ................... GetThisTypeSlot <slot: 8> <1> 
    0007: [1] 9a ......................... PutLocalSlot_0 
    0008: [0] 33 92 76 5b c2 7d .......... Debug 

    # io/TextStream.es:91                   format = encoding

    0014: [0] 61 ......................... GetLocalSlot_0 
    0015: [1] b0 ......................... PutThisSlot_2 
    0016: [0] 5a ......................... LoadNull 
    0017: [1] c5 ......................... ReturnValue 
    0018: [0] 33 92 76 5c f0 07 .......... Debug 

    # io/TextStream.es:92               }
    

VARIABLE:   [set-encoding-00]  private var encoding : String

FUNCTION:   [TextStream-13]  [ejs.io::TextStream,private] function fill() : Number

   LOCAL:   [local-00] var was

    0000: [0] 33 92 76 64 9b 7e .......... Debug 

    # io/TextStream.es:100                  let was = inbuf.available

    0006: [0] 76 ......................... GetThisSlot_1 
    0007: [1] 87 09 01 ................... GetTypeSlot <slot: 9> <1> 
    0010: [1] 9a ......................... PutLocalSlot_0 
    0011: [0] 33 92 76 65 c1 7e .......... Debug 

    # io/TextStream.es:101                  inbuf.reset()

    0017: [0] 76 ......................... GetThisSlot_1 
    0018: [1] 17 20 00 ................... CallObjSlot <slot: 32> <argc: 0> 
    0021: [0] 33 92 76 66 db 7e .......... Debug 

    # io/TextStream.es:102                  count = nextStream.read(inbuf)

    0027: [0] 78 ......................... GetThisSlot_3 
    0028: [1] 76 ......................... GetThisSlot_1 
    0029: [2] 1d e5 05 d0 01 01 .......... CallObjName <read> <public> <argc: 1> 
    0035: [0] 99 ......................... PushResult 
    0036: [1] bb 90 07 96 07 ............. PutScopedName <count> <> 
    0041: [0] 33 92 76 67 86 7f .......... Debug 

    # io/TextStream.es:103                  return inbuf.available - was

    0047: [0] 76 ......................... GetThisSlot_1 
    0048: [1] 87 09 01 ................... GetTypeSlot <slot: 9> <1> 
    0051: [1] 61 ......................... GetLocalSlot_0 
    0052: [2] c9 ......................... Sub 
    0053: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [fill-00]  private var was

FUNCTION:   [TextStream-14]  public function flush() : Void


    0000: [0] 33 92 76 70 9f 0c .......... Debug 

    # io/TextStream.es:112                  inbuf.flush()

    0006: [0] 76 ......................... GetThisSlot_1 
    0007: [1] 17 0f 00 ................... CallObjSlot <slot: 15> <argc: 0> 
    0010: [0] 33 92 76 71 d4 0c .......... Debug 

    # io/TextStream.es:113                  nextStream.flush()

    0016: [0] 78 ......................... GetThisSlot_3 
    0017: [1] 1d f3 0c d0 01 00 .......... CallObjName <flush> <public> <argc: 0> 
    0023: [0] 5a ......................... LoadNull 
    0024: [1] c5 ......................... ReturnValue 
    0025: [0] 33 92 76 72 f0 07 .......... Debug 

    # io/TextStream.es:114              }
    

FUNCTION:   [TextStream-15]  public function read(buffer: ByteArray, offset: Number, count: Number) : Number

     ARG:   [arg-00]   private buffer : ByteArray
     ARG:   [arg-01]   private offset : Number
     ARG:   [arg-02]   private count : Number
   LOCAL:   [local-03] var total
   LOCAL:   [local-04] var where
   LOCAL:   [local-05] var len

    0000: [0] 43 03 03 06 09 ............. InitDefaultArgs.8 <3> <5> <8> <11> 
    0005: [0] 47 ......................... Load1 
    0006: [1] 8d ......................... Neg 
    0007: [1] 9b ......................... PutLocalSlot_1 
    0008: [0] 47 ......................... Load1 
    0009: [1] 8d ......................... Neg 
    0010: [1] 9c ......................... PutLocalSlot_2 
    0011: [0] 33 92 76 7f 96 80 01 ....... Debug 

    # io/TextStream.es:127                  let total = 0

    0018: [0] 46 ......................... Load0 
    0019: [1] 9d ......................... PutLocalSlot_3 
    0020: [0] 33 92 76 80 01 b0 80 01 .... Debug 

    # io/TextStream.es:128                  if (count < 0) {

    0028: [0] 63 ......................... GetLocalSlot_2 
    0029: [1] 46 ......................... Load0 
    0030: [2] 2b ......................... CompareLT 
    0031: [1] 12 10 ...................... BranchFalse.8 <addr: 49> 
    0033: [0] 33 92 76 81 01 cd 80 01 .... Debug 

    # io/TextStream.es:129                      count = Number.MaxValue

    0041: [0] 83 03 ...................... GetGlobalSlot <3> 
    0043: [1] 87 07 00 ................... GetTypeSlot <slot: 7> <0> 
    0046: [1] 9c ......................... PutLocalSlot_2 
    0047: [0] 40 00 ...................... Goto.8 <addr: 49> 
    0049: [0] 33 92 76 82 01 ea 05 ....... Debug 

    # io/TextStream.es:130                  }

    0056: [0] 33 92 76 83 01 fb 80 01 .... Debug 

    # io/TextStream.es:131                  let where = offset

    0064: [0] 62 ......................... GetLocalSlot_1 
    0065: [1] 9e ......................... PutLocalSlot_4 
    0066: [0] 33 92 76 84 01 9a 81 01 .... Debug 

    # io/TextStream.es:132                  if (offset < 0) {

    0074: [0] 62 ......................... GetLocalSlot_1 
    0075: [1] 46 ......................... Load0 
    0076: [2] 2b ......................... CompareLT 
    0077: [1] 12 1a ...................... BranchFalse.8 <addr: 105> 
    0079: [0] 33 92 76 85 01 b8 81 01 .... Debug 

    # io/TextStream.es:133                      where = buffer.writePosition

    0087: [0] 61 ......................... GetLocalSlot_0 
    0088: [1] 87 28 01 ................... GetTypeSlot <slot: 40> <1> 
    0091: [1] 9e ......................... PutLocalSlot_4 
    0092: [0] 33 92 76 86 01 c4 07 ....... Debug 

    # io/TextStream.es:134                      buffer.reset()

    0099: [0] 61 ......................... GetLocalSlot_0 
    0100: [1] 17 20 00 ................... CallObjSlot <slot: 32> <argc: 0> 
    0103: [0] 40 00 ...................... Goto.8 <addr: 105> 
    0105: [0] 33 92 76 88 01 e5 81 01 .... Debug 

    # io/TextStream.es:136                  while (count > 0) {

    0113: [0] 63 ......................... GetLocalSlot_2 
    0114: [1] 46 ......................... Load0 
    0115: [2] 29 ......................... CompareGT 
    0116: [1] 06 94 00 00 00 ............. BranchFalse <addr: 269> 
    0121: [0] 33 92 76 89 01 85 82 01 .... Debug 

    # io/TextStream.es:137                      if (inbuf.available == 0 && fill() == 0) {

    0129: [0] 76 ......................... GetThisSlot_1 
    0130: [1] 87 09 01 ................... GetTypeSlot <slot: 9> <1> 
    0133: [1] 46 ......................... Load0 
    0134: [2] 25 ......................... CompareEQ 
    0135: [1] 22 ......................... CastBoolean 
    0136: [1] 3b ......................... Dup 
    0137: [2] 12 08 ...................... BranchFalse.8 <addr: 147> 
    0139: [1] 96 ......................... Pop 
    0140: [0] 18 0d 00 ................... CallThisSlot <slot: 13> <argc: 0> 
    0143: [0] 99 ......................... PushResult 
    0144: [1] 46 ......................... Load0 
    0145: [2] 25 ......................... CompareEQ 
    0146: [1] 22 ......................... CastBoolean 
    0147: [1] 12 0e ...................... BranchFalse.8 <addr: 163> 
    0149: [0] 33 92 76 8a 01 be 14 ....... Debug 

    # io/TextStream.es:138                          break

    0156: [0] 3f 6c 00 00 00 ............. Goto <addr: 269> 
    0161: [0] 40 00 ...................... Goto.8 <addr: 163> 
    0163: [0] 33 92 76 8b 01 d8 14 ....... Debug 

    # io/TextStream.es:139                      }

    0170: [0] 33 92 76 8c 01 cf 82 01 .... Debug 

    # io/TextStream.es:140                      let len = inbuf.available.min(count)

    0178: [0] 76 ......................... GetThisSlot_1 
    0179: [1] 87 09 01 ................... GetTypeSlot <slot: 9> <1> 
    0182: [1] 63 ......................... GetLocalSlot_2 
    0183: [2] 1d 84 83 01 00 01 .......... CallObjName <min> <> <argc: 1> 
    0189: [0] 99 ......................... PushResult 
    0190: [1] 9f ......................... PutLocalSlot_5 
    0191: [0] 33 92 76 8d 01 88 83 01 .... Debug 

    # io/TextStream.es:141                      buffer.copyIn(where, inbuf, inbuf.readPosition, len)

    0199: [0] 61 ......................... GetLocalSlot_0 
    0200: [1] 65 ......................... GetLocalSlot_4 
    0201: [2] 76 ......................... GetThisSlot_1 
    0202: [3] 76 ......................... GetThisSlot_1 
    0203: [4] 87 1b 01 ................... GetTypeSlot <slot: 27> <1> 
    0206: [4] 66 ......................... GetLocalSlot_5 
    0207: [5] 17 0b 04 ................... CallObjSlot <slot: 11> <argc: 4> 
    0210: [0] 33 92 76 8e 01 cd 83 01 .... Debug 

    # io/TextStream.es:142                      where += len

    0218: [0] 65 ......................... GetLocalSlot_4 
    0219: [1] 66 ......................... GetLocalSlot_5 
    0220: [2] 00 ......................... Add 
    0221: [1] 9e ......................... PutLocalSlot_4 
    0222: [0] 33 92 76 8f 01 ea 83 01 .... Debug 

    # io/TextStream.es:143                      inbuf.readPosition += len

    0230: [0] 76 ......................... GetThisSlot_1 
    0231: [1] 87 1b 01 ................... GetTypeSlot <slot: 27> <1> 
    0234: [1] 66 ......................... GetLocalSlot_5 
    0235: [2] 00 ......................... Add 
    0236: [1] 76 ......................... GetThisSlot_1 
    0237: [2] c1 1b 01 ................... PutTypeSlot <slot: 27> <1> 
    0240: [0] 33 92 76 90 01 94 84 01 .... Debug 

    # io/TextStream.es:144                      total += len

    0248: [0] 64 ......................... GetLocalSlot_3 
    0249: [1] 66 ......................... GetLocalSlot_5 
    0250: [2] 00 ......................... Add 
    0251: [1] 9d ......................... PutLocalSlot_3 
    0252: [0] 33 92 76 91 01 b1 84 01 .... Debug 

    # io/TextStream.es:145                      count -= len

    0260: [0] 63 ......................... GetLocalSlot_2 
    0261: [1] 66 ......................... GetLocalSlot_5 
    0262: [2] c9 ......................... Sub 
    0263: [1] 9c ......................... PutLocalSlot_2 
    0264: [0] 3f 64 ff ff ff ............. Goto <addr: 113> 
    0269: [0] 33 92 76 93 01 9a 81 01 .... Debug 

    # io/TextStream.es:147                  if (offset < 0) {

    0277: [0] 62 ......................... GetLocalSlot_1 
    0278: [1] 46 ......................... Load0 
    0279: [2] 2b ......................... CompareLT 
    0280: [1] 12 14 ...................... BranchFalse.8 <addr: 302> 
    0282: [0] 33 92 76 94 01 ce 84 01 .... Debug 

    # io/TextStream.es:148                      buffer.writePosition += total

    0290: [0] 61 ......................... GetLocalSlot_0 
    0291: [1] 87 28 01 ................... GetTypeSlot <slot: 40> <1> 
    0294: [1] 64 ......................... GetLocalSlot_3 
    0295: [2] 00 ......................... Add 
    0296: [1] 61 ......................... GetLocalSlot_0 
    0297: [2] c1 28 01 ................... PutTypeSlot <slot: 40> <1> 
    0300: [0] 40 00 ...................... Goto.8 <addr: 302> 
    0302: [0] 33 92 76 96 01 fc 84 01 .... Debug 

    # io/TextStream.es:150                  return total

    0310: [0] 64 ......................... GetLocalSlot_3 
    0311: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [read-00]  private var buffer : ByteArray

VARIABLE:   [read-01]  private var offset : Number

VARIABLE:   [read-02]  private var count : Number

VARIABLE:   [read-03]  private var total

VARIABLE:   [read-04]  private var where

VARIABLE:   [read-05]  -hoisted-5 var len

FUNCTION:   [TextStream-16]  public function readLine() : String

   LOCAL:   [local-00] var start
   LOCAL:   [local-01] var c
   LOCAL:   [local-02] var i

    0000: [0] 33 92 76 a0 01 c1 85 01 .... Debug 

    # io/TextStream.es:160                  let start = inbuf.readPosition

    0008: [0] 76 ......................... GetThisSlot_1 
    0009: [1] 87 1b 01 ................... GetTypeSlot <slot: 27> <1> 
    0012: [1] 9a ......................... PutLocalSlot_0 
    0013: [0] 33 92 76 a1 01 ec 85 01 .... Debug 

    # io/TextStream.es:161                  if (inbuf.available == 0 && fill() == 0) {

    0021: [0] 76 ......................... GetThisSlot_1 
    0022: [1] 87 09 01 ................... GetTypeSlot <slot: 9> <1> 
    0025: [1] 46 ......................... Load0 
    0026: [2] 25 ......................... CompareEQ 
    0027: [1] 22 ......................... CastBoolean 
    0028: [1] 3b ......................... Dup 
    0029: [2] 12 08 ...................... BranchFalse.8 <addr: 39> 
    0031: [1] 96 ......................... Pop 
    0032: [0] 18 0d 00 ................... CallThisSlot <slot: 13> <argc: 0> 
    0035: [0] 99 ......................... PushResult 
    0036: [1] 46 ......................... Load0 
    0037: [2] 25 ......................... CompareEQ 
    0038: [1] 22 ......................... CastBoolean 
    0039: [1] 12 0d ...................... BranchFalse.8 <addr: 54> 
    0041: [0] 33 92 76 a2 01 a3 86 01 .... Debug 

    # io/TextStream.es:162                      return null

    0049: [0] 83 34 ...................... GetGlobalSlot <52> 
    0051: [1] c5 ......................... ReturnValue 
    0052: [0] 40 00 ...................... Goto.8 <addr: 54> 
    0054: [0] 33 92 76 a4 01 bf 86 01 .... Debug 

    # io/TextStream.es:164                  while (true) {

    0062: [0] 83 39 ...................... GetGlobalSlot <57> 
    0064: [1] 06 1c 01 00 00 ............. BranchFalse <addr: 353> 
    0069: [0] 33 92 76 a5 01 e7 86 01 .... Debug 

    # io/TextStream.es:165                      let c = newline.charCodeAt(0)

    0077: [0] 75 ......................... GetThisSlot_0 
    0078: [1] 46 ......................... Load0 
    0079: [2] 17 08 01 ................... CallObjSlot <slot: 8> <argc: 1> 
    0082: [0] 99 ......................... PushResult 
    0083: [1] 9b ......................... PutLocalSlot_1 
    0084: [0] 33 92 76 a6 01 95 87 01 .... Debug 

    # io/TextStream.es:166                      for (let i = start; i < inbuf.writePosition; i++) {

    0092: [0] 61 ......................... GetLocalSlot_0 
    0093: [1] 9c ......................... PutLocalSlot_2 
    0094: [0] 63 ......................... GetLocalSlot_2 
    0095: [1] 76 ......................... GetThisSlot_1 
    0096: [2] 87 28 01 ................... GetTypeSlot <slot: 40> <1> 
    0099: [2] 2b ......................... CompareLT 
    0100: [1] 06 ab 00 00 00 ............. BranchFalse <addr: 276> 
    0105: [0] 33 92 76 a7 01 d9 87 01 .... Debug 

    # io/TextStream.es:167                          if (inbuf[i] == c) {

    0113: [0] 76 ......................... GetThisSlot_1 
    0114: [1] 63 ......................... GetLocalSlot_2 
    0115: [2] 81 ......................... GetObjNameExpr 
    0116: [1] 62 ......................... GetLocalSlot_1 
    0117: [2] 25 ......................... CompareEQ 
    0118: [1] 06 86 00 00 00 ............. BranchFalse <addr: 257> 
    0123: [0] 33 92 76 a8 01 82 88 01 .... Debug 

    # io/TextStream.es:168                              if (newline.length == 2 && (i+1) < inbuf.writePosition && newline.charCodeAt(1) != inbuf[i+1]) {

    0131: [0] 75 ......................... GetThisSlot_0 
    0132: [1] 87 03 01 ................... GetTypeSlot <slot: 3> <1> 
    0135: [1] 48 ......................... Load2 
    0136: [2] 25 ......................... CompareEQ 
    0137: [1] 22 ......................... CastBoolean 
    0138: [1] 3b ......................... Dup 
    0139: [2] 12 0a ...................... BranchFalse.8 <addr: 151> 
    0141: [1] 96 ......................... Pop 
    0142: [0] 63 ......................... GetLocalSlot_2 
    0143: [1] 47 ......................... Load1 
    0144: [2] 00 ......................... Add 
    0145: [1] 76 ......................... GetThisSlot_1 
    0146: [2] 87 28 01 ................... GetTypeSlot <slot: 40> <1> 
    0149: [2] 2b ......................... CompareLT 
    0150: [1] 22 ......................... CastBoolean 
    0151: [1] 22 ......................... CastBoolean 
    0152: [1] 3b ......................... Dup 
    0153: [2] 12 0e ...................... BranchFalse.8 <addr: 169> 
    0155: [1] 96 ......................... Pop 
    0156: [0] 75 ......................... GetThisSlot_0 
    0157: [1] 47 ......................... Load1 
    0158: [2] 17 08 01 ................... CallObjSlot <slot: 8> <argc: 1> 
    0161: [0] 99 ......................... PushResult 
    0162: [1] 76 ......................... GetThisSlot_1 
    0163: [2] 63 ......................... GetLocalSlot_2 
    0164: [3] 47 ......................... Load1 
    0165: [4] 00 ......................... Add 
    0166: [3] 81 ......................... GetObjNameExpr 
    0167: [2] 2c ......................... CompareNE 
    0168: [1] 22 ......................... CastBoolean 
    0169: [1] 12 0f ...................... BranchFalse.8 <addr: 186> 
    0171: [0] 33 92 76 a9 01 fb 88 01 .... Debug 

    # io/TextStream.es:169                                  continue

    0179: [0] 3f 49 00 00 00 ............. Goto <addr: 257> 
    0184: [0] 40 00 ...................... Goto.8 <addr: 186> 
    0186: [0] 33 92 76 aa 01 a0 89 01 .... Debug 

    # io/TextStream.es:170                              }

    0194: [0] 33 92 76 ab 01 ba 89 01 .... Debug 

    # io/TextStream.es:171                              result = inbuf.readString(i - inbuf.readPosition)

    0202: [0] 76 ......................... GetThisSlot_1 
    0203: [1] 63 ......................... GetLocalSlot_2 
    0204: [2] 76 ......................... GetThisSlot_1 
    0205: [3] 87 1b 01 ................... GetTypeSlot <slot: 27> <1> 
    0208: [3] c9 ......................... Sub 
    0209: [2] 17 1e 01 ................... CallObjSlot <slot: 30> <argc: 1> 
    0212: [0] 99 ......................... PushResult 
    0213: [1] bb 84 8a 01 96 07 .......... PutScopedName <result> <> 
    0219: [0] 33 92 76 ac 01 8b 8a 01 .... Debug 

    # io/TextStream.es:172      						inbuf.readPosition += newline.length

    0227: [0] 76 ......................... GetThisSlot_1 
    0228: [1] 87 1b 01 ................... GetTypeSlot <slot: 27> <1> 
    0231: [1] 75 ......................... GetThisSlot_0 
    0232: [2] 87 03 01 ................... GetTypeSlot <slot: 3> <1> 
    0235: [2] 00 ......................... Add 
    0236: [1] 76 ......................... GetThisSlot_1 
    0237: [2] c1 1b 01 ................... PutTypeSlot <slot: 27> <1> 
    0240: [0] 33 92 76 ad 01 b6 8a 01 .... Debug 

    # io/TextStream.es:173                              return result

    0248: [0] 7f 84 8a 01 96 07 .......... GetScopedName <result> <> 
    0254: [1] c5 ......................... ReturnValue 
    0255: [0] 40 00 ...................... Goto.8 <addr: 257> 
    0257: [0] 33 92 76 a6 01 95 87 01 .... Debug 

    # io/TextStream.es:166                      for (let i = start; i < inbuf.writePosition; i++) {

    0265: [0] 63 ......................... GetLocalSlot_2 
    0266: [1] 3b ......................... Dup 
    0267: [2] 41 01 ...................... Inc <1> 
    0269: [2] 9c ......................... PutLocalSlot_2 
    0270: [1] 96 ......................... Pop 
    0271: [0] 3f 4a ff ff ff ............. Goto <addr: 94> 
    0276: [0] 33 92 76 af 01 d8 14 ....... Debug 

    # io/TextStream.es:175                      }

    0283: [0] 33 92 76 b0 01 dc 8a 01 .... Debug 

    # io/TextStream.es:176                      start = inbuf.writePosition

    0291: [0] 76 ......................... GetThisSlot_1 
    0292: [1] 87 28 01 ................... GetTypeSlot <slot: 40> <1> 
    0295: [1] 9a ......................... PutLocalSlot_0 
    0296: [0] 33 92 76 b1 01 88 8b 01 .... Debug 

    # io/TextStream.es:177                      if (fill() == 0) {

    0304: [0] 18 0d 00 ................... CallThisSlot <slot: 13> <argc: 0> 
    0307: [0] 99 ......................... PushResult 
    0308: [1] 46 ......................... Load0 
    0309: [2] 25 ......................... CompareEQ 
    0310: [1] 12 24 ...................... BranchFalse.8 <addr: 348> 
    0312: [0] 33 92 76 b5 01 ab 8b 01 .... Debug 

    # io/TextStream.es:181                          result = inbuf.readString()

    0320: [0] 76 ......................... GetThisSlot_1 
    0321: [1] 17 1e 00 ................... CallObjSlot <slot: 30> <argc: 0> 
    0324: [0] 99 ......................... PushResult 
    0325: [1] bb 84 8a 01 96 07 .......... PutScopedName <result> <> 
    0331: [0] 33 92 76 b6 01 db 8b 01 .... Debug 

    # io/TextStream.es:182                          return result

    0339: [0] 7f 84 8a 01 96 07 .......... GetScopedName <result> <> 
    0345: [1] c5 ......................... ReturnValue 
    0346: [0] 40 00 ...................... Goto.8 <addr: 348> 
    0348: [0] 3f dd fe ff ff ............. Goto <addr: 62> 
    0353: [0] 33 92 76 b9 01 fd 8b 01 .... Debug 

    # io/TextStream.es:185                  return null

    0361: [0] 83 34 ...................... GetGlobalSlot <52> 
    0363: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [readLine-00]  private var start

VARIABLE:   [readLine-01]  -hoisted-1 var c

VARIABLE:   [readLine-02]  -hoisted-2 var i

FUNCTION:   [TextStream-17]  public function readLines(numLines: Number) : Array

     ARG:   [arg-00]   private numLines : Number
   LOCAL:   [local-01] var result : Array
   LOCAL:   [local-02] var i

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 47 ......................... Load1 
    0005: [1] 8d ......................... Neg 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 92 76 c4 01 d9 8c 01 .... Debug 

    # io/TextStream.es:196                  var result: Array

    0015: [0] 33 92 76 c5 01 f7 8c 01 .... Debug 

    # io/TextStream.es:197                  if (numLines <= 0) {

    0023: [0] 61 ......................... GetLocalSlot_0 
    0024: [1] 46 ......................... Load0 
    0025: [2] 2a ......................... CompareLE 
    0026: [1] 12 1e ...................... BranchFalse.8 <addr: 58> 
    0028: [0] 33 92 76 c6 01 98 8d 01 .... Debug 

    # io/TextStream.es:198                      result = new Array

    0036: [0] 83 07 ...................... GetGlobalSlot <7> 
    0038: [1] 8e ......................... New 
    0039: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0041: [1] 9b ......................... PutLocalSlot_1 
    0042: [0] 33 92 76 c7 01 bb 8d 01 .... Debug 

    # io/TextStream.es:199                      numLines = Number.MaxValue

    0050: [0] 83 03 ...................... GetGlobalSlot <3> 
    0052: [1] 87 07 00 ................... GetTypeSlot <slot: 7> <0> 
    0055: [1] 9a ......................... PutLocalSlot_0 
    0056: [0] 40 17 ...................... Goto.8 <addr: 81> 
    0058: [0] 33 92 76 c8 01 e6 8d 01 .... Debug 

    # io/TextStream.es:200                  } else {

    0066: [0] 33 92 76 c9 01 fb 8d 01 .... Debug 

    # io/TextStream.es:201                      result = new Array(numLines)

    0074: [0] 83 07 ...................... GetGlobalSlot <7> 
    0076: [1] 8e ......................... New 
    0077: [1] 61 ......................... GetLocalSlot_0 
    0078: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0080: [1] 9b ......................... PutLocalSlot_1 
    0081: [0] 33 92 76 cb 01 a8 8e 01 .... Debug 

    # io/TextStream.es:203                  for (let i in numLines) {

    0089: [0] 61 ......................... GetLocalSlot_0 
    0090: [1] 17 01 00 ................... CallObjSlot <slot: 1> <argc: 0> 
    0093: [0] 99 ......................... PushResult 
    0094: [1] 3b ......................... Dup 
    0095: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0098: [1] 99 ......................... PushResult 
    0099: [2] 9c ......................... PutLocalSlot_2 
    0100: [1] 33 92 76 cc 01 ce 8e 01 .... Debug 

    # io/TextStream.es:204                      if ((line = readLine()) == null) 

    0108: [1] 18 10 00 ................... CallThisSlot <slot: 16> <argc: 0> 
    0111: [1] 99 ......................... PushResult 
    0112: [2] 3b ......................... Dup 
    0113: [3] bb 80 8f 01 96 07 .......... PutScopedName <line> <> 
    0119: [2] 83 34 ...................... GetGlobalSlot <52> 
    0121: [3] 25 ......................... CompareEQ 
    0122: [2] 12 0e ...................... BranchFalse.8 <addr: 138> 
    0124: [1] 33 92 76 cd 01 be 14 ....... Debug 

    # io/TextStream.es:205                          break

    0131: [1] 3f 16 00 00 00 ............. Goto <addr: 158> 
    0136: [1] 40 00 ...................... Goto.8 <addr: 138> 
    0138: [1] 33 92 76 ce 01 85 8f 01 .... Debug 

    # io/TextStream.es:206                      result[i] = line

    0146: [1] 7f 80 8f 01 96 07 .......... GetScopedName <line> <> 
    0152: [2] 62 ......................... GetLocalSlot_1 
    0153: [3] 63 ......................... GetLocalSlot_2 
    0154: [4] b8 ......................... PutObjNameExpr 
    0155: [1] 40 c1 ...................... Goto.8 <addr: 94> 
    0157: [1] 96 ......................... Pop 
    0158: [0] 33 92 76 d0 01 a6 8f 01 .... Debug 

    # io/TextStream.es:208                  return result

    0166: [0] 62 ......................... GetLocalSlot_1 
    0167: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     95      98        157          157       StopIteration

VARIABLE:   [readLines-00]  private var numLines : Number

VARIABLE:   [readLines-01]  private var result : Array

VARIABLE:   [readLines-02]  -hoisted-2 var i

FUNCTION:   [TextStream-18]  public function readString(count: Number) : String

     ARG:   [arg-00]   private count : Number

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 47 ......................... Load1 
    0005: [1] 8d ......................... Neg 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 92 76 db 01 83 90 01 .... Debug 

    # io/TextStream.es:219                  return inbuf.readString(count)

    0015: [0] 76 ......................... GetThisSlot_1 
    0016: [1] 61 ......................... GetLocalSlot_0 
    0017: [2] 17 1e 01 ................... CallObjSlot <slot: 30> <argc: 1> 
    0020: [0] 99 ......................... PushResult 
    0021: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [readString-00]  private var count : Number

FUNCTION:   [TextStream-19]  public function write(data: Array) : Number

     ARG:   [arg-00]   private data : Array

    0000: [0] 33 92 76 e7 01 d8 90 01 .... Debug 

    # io/TextStream.es:231                  return nextStream.write(data)

    0008: [0] 78 ......................... GetThisSlot_3 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1d 8a 07 d0 01 01 .......... CallObjName <write> <public> <argc: 1> 
    0016: [0] 99 ......................... PushResult 
    0017: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [write-00]  private var data : Array

FUNCTION:   [TextStream-20]  public function writeLine(lines: Array) : Number

     ARG:   [arg-00]   private lines : Array
   LOCAL:   [local-01] var written
   LOCAL:   [local-02] var count
   LOCAL:   [local-03] var line

    0000: [0] 33 92 76 f3 01 b9 91 01 .... Debug 

    # io/TextStream.es:243                  let written = 0

    0008: [0] 46 ......................... Load0 
    0009: [1] 9b ......................... PutLocalSlot_1 
    0010: [0] 33 92 76 f4 01 d5 91 01 .... Debug 

    # io/TextStream.es:244                  for each (let line in lines) {

    0018: [0] 61 ......................... GetLocalSlot_0 
    0019: [1] 17 02 00 ................... CallObjSlot <slot: 2> <argc: 0> 
    0022: [0] 99 ......................... PushResult 
    0023: [1] 3b ......................... Dup 
    0024: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0027: [1] 99 ......................... PushResult 
    0028: [2] 9d ......................... PutLocalSlot_3 
    0029: [1] 33 92 76 f5 01 8b 92 01 .... Debug 

    # io/TextStream.es:245                      var count = line.length

    0037: [1] 64 ......................... GetLocalSlot_3 
    0038: [2] 80 d6 1b 00 ................ GetObjName <length> <> 
    0042: [2] 9c ......................... PutLocalSlot_2 
    0043: [1] 33 92 76 f6 01 b3 92 01 .... Debug 

    # io/TextStream.es:246                      written += nextStream.write(line)

    0051: [1] 62 ......................... GetLocalSlot_1 
    0052: [2] 78 ......................... GetThisSlot_3 
    0053: [3] 64 ......................... GetLocalSlot_3 
    0054: [4] 1d 8a 07 d0 01 01 .......... CallObjName <write> <public> <argc: 1> 
    0060: [2] 99 ......................... PushResult 
    0061: [3] 00 ......................... Add 
    0062: [2] 9b ......................... PutLocalSlot_1 
    0063: [1] 33 92 76 f7 01 e5 92 01 .... Debug 

    # io/TextStream.es:247                      written += nextStream.write(newline)

    0071: [1] 62 ......................... GetLocalSlot_1 
    0072: [2] 78 ......................... GetThisSlot_3 
    0073: [3] 75 ......................... GetThisSlot_0 
    0074: [4] 1d 8a 07 d0 01 01 .......... CallObjName <write> <public> <argc: 1> 
    0080: [2] 99 ......................... PushResult 
    0081: [3] 00 ......................... Add 
    0082: [2] 9b ......................... PutLocalSlot_1 
    0083: [1] 40 c2 ...................... Goto.8 <addr: 23> 
    0085: [1] 96 ......................... Pop 
    0086: [0] 33 92 76 f9 01 9a 93 01 .... Debug 

    # io/TextStream.es:249                  return written

    0094: [0] 62 ......................... GetLocalSlot_1 
    0095: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     24      27         85           85       StopIteration

VARIABLE:   [writeLine-00]  private var lines : Array

VARIABLE:   [writeLine-01]  private var written

VARIABLE:   [writeLine-02]  private var count

VARIABLE:   [writeLine-03]  -hoisted-3 var line

VARIABLE:   [TextStreamInstanceType-00]  [ejs.io::TextStream,private] var newline : String

VARIABLE:   [TextStreamInstanceType-01]  [ejs.io::TextStream,private] var inbuf : ByteArray

VARIABLE:   [TextStreamInstanceType-02]  [ejs.io::TextStream,private] var format : String

VARIABLE:   [TextStreamInstanceType-03]  [ejs.io::TextStream,private] var nextStream : Stream

CLASS:      class XMLHttp extends Object
            #  Class Details: 27 class traits, 4 instance traits, requested slot 87

FUNCTION:   [XMLHttp-05]  -constructor- function XMLHttp() : void


    0000: [0] 83 53 ...................... GetGlobalSlot <83> 
    0002: [1] 8e ......................... New 
    0003: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0005: [1] ae ......................... PutThisSlot_0 
    0006: [0] 46 ......................... Load0 
    0007: [1] af ......................... PutThisSlot_1 
    0008: [0] c4 ......................... Return 
    

FUNCTION:   [XMLHttp-06]  -initializer- function XMLHttp-initializer() : Void


    0000: [0] 33 8f 94 01 0f 64 .......... Debug 

    # io/XMLHttp.es:15                  use default namespace public

    0006: [0] 83 23 ...................... GetGlobalSlot <35> 
    0008: [1] 02 ......................... AddNamespaceRef 
    0009: [0] 33 8f 94 01 11 bd 94 01 .... Debug 

    # io/XMLHttp.es:17                  private var hp: Http = new Http

    0017: [0] 33 8f 94 01 12 82 95 01 .... Debug 

    # io/XMLHttp.es:18                  private var state: Number = 0

    0025: [0] 33 8f 94 01 13 ae 95 01 .... Debug 

    # io/XMLHttp.es:19                  private var response: ByteArray

    0033: [0] 33 8f 94 01 17 d6 95 01 .... Debug 

    # io/XMLHttp.es:23                  static const Uninitialized = 0              

    0041: [0] 46 ......................... Load0 
    0042: [1] 83 57 ...................... GetGlobalSlot <87> 
    0044: [2] ab ......................... PutObjSlot_7 
    0045: [0] 33 8f 94 01 1b 99 96 01 .... Debug 

    # io/XMLHttp.es:27                  static const Open = 1

    0053: [0] 47 ......................... Load1 
    0054: [1] 83 57 ...................... GetGlobalSlot <87> 
    0056: [2] ac ......................... PutObjSlot_8 
    0057: [0] 33 8f 94 01 1f b7 96 01 .... Debug 

    # io/XMLHttp.es:31                  static const Sent = 2

    0065: [0] 48 ......................... Load2 
    0066: [1] 83 57 ...................... GetGlobalSlot <87> 
    0068: [2] ad ......................... PutObjSlot_9 
    0069: [0] 33 8f 94 01 23 da 96 01 .... Debug 

    # io/XMLHttp.es:35                  static const Receiving = 3

    0077: [0] 49 ......................... Load3 
    0078: [1] 83 57 ...................... GetGlobalSlot <87> 
    0080: [2] bf 0a ...................... PutObjSlot <slot: 10> 
    0082: [0] 33 8f 94 01 27 87 97 01 .... Debug 

    # io/XMLHttp.es:39                  static const Loaded = 4

    0090: [0] 4a ......................... Load4 
    0091: [1] 83 57 ...................... GetGlobalSlot <87> 
    0093: [2] bf 0b ...................... PutObjSlot <slot: 11> 
    0095: [0] 33 8f 94 01 2c ae 97 01 .... Debug 

    # io/XMLHttp.es:44                  public var onreadystatechange: Function

    0103: [0] 33 8f 94 01 32 f1 97 01 .... Debug 

    # io/XMLHttp.es:50                  function abort(): void {

    0111: [0] 33 8f 94 01 3c ad 98 01 .... Debug 

    # io/XMLHttp.es:60                  function get http() : Http {

    0119: [0] 33 8f 94 01 46 ed 98 01 .... Debug 

    # io/XMLHttp.es:70                  function get readyState() : Number {

    0127: [0] 33 8f 94 01 4f be 99 01 .... Debug 

    # io/XMLHttp.es:79                  function get responseText(): String {

    0135: [0] 33 8f 94 01 58 a0 9a 01 .... Debug 

    # io/XMLHttp.es:88                  function get responseXML(): XML {

    0143: [0] 33 8f 94 01 60 82 9b 01 .... Debug 

    # io/XMLHttp.es:96                  function get responseBody(): String {

    0151: [0] 33 8f 94 01 6a 92 9c 01 .... Debug 

    # io/XMLHttp.es:106                 function get status(): Number {

    0159: [0] 33 8f 94 01 73 dc 9c 01 .... Debug 

    # io/XMLHttp.es:115                 function get statusText() : String {

    0167: [0] 33 8f 94 01 7c b5 9d 01 .... Debug 

    # io/XMLHttp.es:124                 function getAllResponseHeaders(): String {

    0175: [0] 33 8f 94 01 8a 01 97 9f 01 . Debug 

    # io/XMLHttp.es:138                 function getResponseHeader(key: String) {

    0184: [0] 33 8f 94 01 98 01 db 9f 01 . Debug 

    # io/XMLHttp.es:152                 function open(method: String, url: String, async: Boolean = false, user: String = null, password: String = null): Void {

    0193: [0] 33 8f 94 01 b3 01 99 a5 01 . Debug 

    # io/XMLHttp.es:179                 function send(content: String): Void {

    0202: [0] 33 8f 94 01 c2 01 f9 a6 01 . Debug 

    # io/XMLHttp.es:194                 function setRequestHeader(key: String, value: String): Void {

    0211: [0] 33 8f 94 01 ca 01 ff a7 01 . Debug 

    # io/XMLHttp.es:202                 private function callback (e: Event) {

    0220: [0] 33 8f 94 01 d8 01 8e aa 01 . Debug 

    # io/XMLHttp.es:216                 private function notify() {

    0229: [0] c4 ......................... Return 
    

VARIABLE:   [XMLHttp-07]  public static var Uninitialized

VARIABLE:   [XMLHttp-08]  public static var Open

VARIABLE:   [XMLHttp-09]  public static var Sent

VARIABLE:   [XMLHttp-10]  public static var Receiving

VARIABLE:   [XMLHttp-11]  public static var Loaded

FUNCTION:   [XMLHttp-12]  public function abort() : Void


    0000: [0] 33 8f 94 01 33 92 98 01 .... Debug 

    # io/XMLHttp.es:51                      hp.close

    0008: [0] 75 ......................... GetThisSlot_0 
    0009: [1] 87 2f 01 ................... GetTypeSlot <slot: 47> <1> 
    0012: [1] 96 ......................... Pop 
    0013: [0] 5a ......................... LoadNull 
    0014: [1] c5 ......................... ReturnValue 
    0015: [0] 33 8f 94 01 34 f0 07 ....... Debug 

    # io/XMLHttp.es:52                  }
    

FUNCTION:   [XMLHttp-13]  public get function http() : Http


    0000: [0] 33 8f 94 01 3d d2 98 01 .... Debug 

    # io/XMLHttp.es:61                      return hp

    0008: [0] 75 ......................... GetThisSlot_0 
    0009: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [XMLHttp-14]  public get function readyState() : Number


    0000: [0] 33 8f 94 01 47 9a 99 01 .... Debug 

    # io/XMLHttp.es:71                      return state

    0008: [0] 76 ......................... GetThisSlot_1 
    0009: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [XMLHttp-15]  public get function responseText() : String


    0000: [0] 33 8f 94 01 50 ec 99 01 .... Debug 

    # io/XMLHttp.es:80                      return response.toString()

    0008: [0] 77 ......................... GetThisSlot_2 
    0009: [1] 17 04 00 ................... CallObjSlot <slot: 4> <argc: 0> 
    0012: [0] 99 ......................... PushResult 
    0013: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [XMLHttp-16]  public get function responseXML() : XML


    0000: [0] 33 8f 94 01 59 ca 9a 01 .... Debug 

    # io/XMLHttp.es:89                      return XML(response.toString())

    0008: [0] 77 ......................... GetThisSlot_2 
    0009: [1] 17 04 00 ................... CallObjSlot <slot: 4> <argc: 0> 
    0012: [0] 99 ......................... PushResult 
    0013: [1] 16 4f 01 ................... CallGlobalSlot <slot: 79> <argc: 1> 
    0016: [0] 99 ......................... PushResult 
    0017: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [XMLHttp-17]  public get function responseBody() : String


    0000: [0] 33 8f 94 01 61 b0 9b 01 .... Debug 

    # io/XMLHttp.es:97                      throw new Error("Unsupported API")

    0008: [0] 83 0f ...................... GetGlobalSlot <15> 
    0010: [1] 8e ......................... New 
    0011: [1] 5c df 9b 01 ................ LoadString <Unsupported API> 
    0015: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0017: [1] cc ......................... Throw 
    0018: [1] 33 8f 94 01 62 ef 9b 01 .... Debug 

    # io/XMLHttp.es:98                      return ""

    0026: [1] 5c 96 07 ................... LoadString <> 
    0029: [2] c5 ......................... ReturnValue 
    

FUNCTION:   [XMLHttp-18]  public get function status() : Number


    0000: [0] 33 8f 94 01 6b ba 9c 01 .... Debug 

    # io/XMLHttp.es:107                     return hp.code

    0008: [0] 75 ......................... GetThisSlot_0 
    0009: [1] 87 33 01 ................... GetTypeSlot <slot: 51> <1> 
    0012: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [XMLHttp-19]  public get function statusText() : String


    0000: [0] 33 8f 94 01 74 89 9d 01 .... Debug 

    # io/XMLHttp.es:116                     return hp.codeString

    0008: [0] 75 ......................... GetThisSlot_0 
    0009: [1] 87 34 01 ................... GetTypeSlot <slot: 52> <1> 
    0012: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [XMLHttp-20]  public function getAllResponseHeaders() : String

   LOCAL:   [local-00] var result : String
   LOCAL:   [local-01] var key

    0000: [0] 33 8f 94 01 7d e8 9d 01 .... Debug 

    # io/XMLHttp.es:125                     let result: String = ""

    0008: [0] 5c 96 07 ................... LoadString <> 
    0011: [1] 9a ......................... PutLocalSlot_0 
    0012: [0] 33 8f 94 01 7e 8c 9e 01 .... Debug 

    # io/XMLHttp.es:126                     for (key in hp.headers) {

    0020: [0] 75 ......................... GetThisSlot_0 
    0021: [1] 87 42 01 ................... GetTypeSlot <slot: 66> <1> 
    0024: [1] 1d b4 1b 91 17 00 .......... CallObjName <get> <iterator> <argc: 0> 
    0030: [0] 99 ......................... PushResult 
    0031: [1] 3b ......................... Dup 
    0032: [2] 17 05 00 ................... CallObjSlot <slot: 5> <argc: 0> 
    0035: [1] 99 ......................... PushResult 
    0036: [2] 9b ......................... PutLocalSlot_1 
    0037: [1] 33 8f 94 01 7f b2 9e 01 .... Debug 

    # io/XMLHttp.es:127                         result = result.concat(key + ": " + hp.headers[key] + '\n')

    0045: [1] 61 ......................... GetLocalSlot_0 
    0046: [2] 62 ......................... GetLocalSlot_1 
    0047: [3] 5c fe 9e 01 ................ LoadString <: > 
    0051: [4] 00 ......................... Add 
    0052: [3] 75 ......................... GetThisSlot_0 
    0053: [4] 87 42 01 ................... GetTypeSlot <slot: 66> <1> 
    0056: [4] 62 ......................... GetLocalSlot_1 
    0057: [5] 81 ......................... GetObjNameExpr 
    0058: [4] 00 ......................... Add 
    0059: [3] 5c d3 78 ................... LoadString <
> 
    0062: [4] 00 ......................... Add 
    0063: [3] 17 09 01 ................... CallObjSlot <slot: 9> <argc: 1> 
    0066: [1] 99 ......................... PushResult 
    0067: [2] 9a ......................... PutLocalSlot_0 
    0068: [1] 40 d9 ...................... Goto.8 <addr: 31> 
    0070: [1] 96 ......................... Pop 
    0071: [0] 33 8f 94 01 81 01 a6 8f 01 . Debug 

    # io/XMLHttp.es:129                     return result

    0080: [0] 61 ......................... GetLocalSlot_0 
    0081: [1] c5 ......................... ReturnValue 
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration     32      35         70           70       StopIteration

VARIABLE:   [getAllResponseHeaders-00]  private var result : String

VARIABLE:   [getAllResponseHeaders-01]  -hoisted-1 var key

FUNCTION:   [XMLHttp-21]  public function getResponseHeader(key: String) : void

     ARG:   [arg-00]   private key : String

    0000: [0] c4 ......................... Return 
    0001: [0] 33 8f 94 01 8c 01 f0 07 .... Debug 

    # io/XMLHttp.es:140                 }
    

VARIABLE:   [getResponseHeader-00]  private var key : String

FUNCTION:   [XMLHttp-22]  public function open(method: String, url: String, async: Boolean, user: String, password: String) : Void

     ARG:   [arg-00]   private method : String
     ARG:   [arg-01]   private url : String
     ARG:   [arg-02]   private async : Boolean
     ARG:   [arg-03]   private user : String
     ARG:   [arg-04]   private password : String
   LOCAL:   [local-05] var timeout
   LOCAL:   [local-06] var when : Date

    0000: [0] 43 04 04 07 0a 0d .......... InitDefaultArgs.8 <4> <6> <9> <12> <15> 
    0006: [0] 83 32 ...................... GetGlobalSlot <50> 
    0008: [1] 9c ......................... PutLocalSlot_2 
    0009: [0] 83 34 ...................... GetGlobalSlot <52> 
    0011: [1] 9d ......................... PutLocalSlot_3 
    0012: [0] 83 34 ...................... GetGlobalSlot <52> 
    0014: [1] 9e ......................... PutLocalSlot_4 
    0015: [0] 33 8f 94 01 99 01 dc a0 01 . Debug 

    # io/XMLHttp.es:153                     hp.method = method

    0024: [0] 61 ......................... GetLocalSlot_0 
    0025: [1] 75 ......................... GetThisSlot_0 
    0026: [2] c1 47 01 ................... PutTypeSlot <slot: 71> <1> 
    0029: [0] 33 8f 94 01 9a 01 fb a0 01 . Debug 

    # io/XMLHttp.es:154                     hp.url = url

    0038: [0] 62 ......................... GetLocalSlot_1 
    0039: [1] 75 ......................... GetThisSlot_0 
    0040: [2] ba 94 a1 01 96 07 .......... PutObjName <url> <> 
    0046: [0] 33 8f 94 01 9b 01 98 a1 01 . Debug 

    # io/XMLHttp.es:155                     if (userName && password) {

    0055: [0] 7f c0 a1 01 96 07 .......... GetScopedName <userName> <> 
    0061: [1] 22 ......................... CastBoolean 
    0062: [1] 3b ......................... Dup 
    0063: [2] 12 03 ...................... BranchFalse.8 <addr: 68> 
    0065: [1] 96 ......................... Pop 
    0066: [0] 65 ......................... GetLocalSlot_4 
    0067: [1] 22 ......................... CastBoolean 
    0068: [1] 12 11 ...................... BranchFalse.8 <addr: 87> 
    0070: [0] 33 8f 94 01 9c 01 c9 a1 01 . Debug 

    # io/XMLHttp.es:156                         hp.setCredentials(user, password)

    0079: [0] 75 ......................... GetThisSlot_0 
    0080: [1] 64 ......................... GetLocalSlot_3 
    0081: [2] 65 ......................... GetLocalSlot_4 
    0082: [3] 17 55 02 ................... CallObjSlot <slot: 85> <argc: 2> 
    0085: [0] 40 00 ...................... Goto.8 <addr: 87> 
    0087: [0] 33 8f 94 01 9d 01 ea 05 .... Debug 

    # io/XMLHttp.es:157                     }

    0095: [0] 33 8f 94 01 9e 01 fb a1 01 . Debug 

    # io/XMLHttp.es:158                     hp.callback = callback

    0104: [0] 88 19 01 ................... GetThisTypeSlot <slot: 25> <1> 
    0107: [1] 75 ......................... GetThisSlot_0 
    0108: [2] c1 2e 01 ................... PutTypeSlot <slot: 46> <1> 
    0111: [0] 33 8f 94 01 9f 01 9e a2 01 . Debug 

    # io/XMLHttp.es:159                     response = new ByteArray(System.Bufsize, 1)

    0120: [0] 83 09 ...................... GetGlobalSlot <9> 
    0122: [1] 8e ......................... New 
    0123: [1] 83 5c ...................... GetGlobalSlot <92> 
    0125: [2] 87 06 00 ................... GetTypeSlot <slot: 6> <0> 
    0128: [2] 47 ......................... Load1 
    0129: [3] 1f 02 ...................... CallConstructor <argc: 2> 
    0131: [1] b0 ......................... PutThisSlot_2 
    0132: [0] 33 8f 94 01 a1 01 d6 a2 01 . Debug 

    # io/XMLHttp.es:161                     hp.connect()

    0141: [0] 75 ......................... GetThisSlot_0 
    0142: [1] 17 30 00 ................... CallObjSlot <slot: 48> <argc: 0> 
    0145: [0] 33 8f 94 01 a2 01 ef a2 01 . Debug 

    # io/XMLHttp.es:162                     state = Open

    0154: [0] 88 08 01 ................... GetThisTypeSlot <slot: 8> <1> 
    0157: [1] af ......................... PutThisSlot_1 
    0158: [0] 33 8f 94 01 a3 01 88 a3 01 . Debug 

    # io/XMLHttp.es:163                     notify()

    0167: [0] 18 1a 00 ................... CallThisSlot <slot: 26> <argc: 0> 
    0170: [0] 33 8f 94 01 a5 01 9d a3 01 . Debug 

    # io/XMLHttp.es:165                     if (!async) {

    0179: [0] 63 ......................... GetLocalSlot_2 
    0180: [1] 8b ......................... LogicalNot 
    0181: [1] 12 4f ...................... BranchFalse.8 <addr: 262> 
    0183: [0] 33 8f 94 01 a6 01 b7 a3 01 . Debug 

    # io/XMLHttp.es:166                         let timeout = 5 * 1000

    0192: [0] 4b ......................... Load5 
    0193: [1] 53 e8 03 ................... LoadInt.16 <1000> 
    0196: [2] 8c ......................... Mul 
    0197: [1] 9f ......................... PutLocalSlot_5 
    0198: [0] 33 8f 94 01 a7 01 de a3 01 . Debug 

    # io/XMLHttp.es:167                         let when: Date = new Date

    0207: [0] 83 0a ...................... GetGlobalSlot <10> 
    0209: [1] 8e ......................... New 
    0210: [1] 1f 00 ...................... CallConstructor <argc: 0> 
    0212: [1] a0 ......................... PutLocalSlot_6 
    0213: [0] 33 8f 94 01 a8 01 98 a4 01 . Debug 

    # io/XMLHttp.es:168                         while (state != Loaded && when.elapsed < timeout) {

    0222: [0] 76 ......................... GetThisSlot_1 
    0223: [1] 88 0b 01 ................... GetThisTypeSlot <slot: 11> <1> 
    0226: [2] 2c ......................... CompareNE 
    0227: [1] 22 ......................... CastBoolean 
    0228: [1] 3b ......................... Dup 
    0229: [2] 12 08 ...................... BranchFalse.8 <addr: 239> 
    0231: [1] 96 ......................... Pop 
    0232: [0] 67 ......................... GetLocalSlot_6 
    0233: [1] 87 09 01 ................... GetTypeSlot <slot: 9> <1> 
    0236: [1] 66 ......................... GetLocalSlot_5 
    0237: [2] 2b ......................... CompareLT 
    0238: [1] 22 ......................... CastBoolean 
    0239: [1] 12 13 ...................... BranchFalse.8 <addr: 260> 
    0241: [0] 33 8f 94 01 a9 01 dc a4 01 . Debug 

    # io/XMLHttp.es:169                             App.serviceEvents(1, timeout)

    0250: [0] 83 58 ...................... GetGlobalSlot <88> 
    0252: [1] 47 ......................... Load1 
    0253: [2] 66 ......................... GetLocalSlot_5 
    0254: [3] 1b 0e 00 02 ................ CallObjStaticSlot <slot: 14> <0> <argc: 2> 
    0258: [0] 40 da ...................... Goto.8 <addr: 222> 
    0260: [0] 40 00 ...................... Goto.8 <addr: 262> 
    0262: [0] 5a ......................... LoadNull 
    0263: [1] c5 ......................... ReturnValue 
    0264: [0] 33 8f 94 01 ac 01 f0 07 .... Debug 

    # io/XMLHttp.es:172                 }
    

VARIABLE:   [open-00]  private var method : String

VARIABLE:   [open-01]  private var url : String

VARIABLE:   [open-02]  private var async : Boolean

VARIABLE:   [open-03]  private var user : String

VARIABLE:   [open-04]  private var password : String

VARIABLE:   [open-05]  -hoisted-5 var timeout

VARIABLE:   [open-06]  -hoisted-6 var when : Date

FUNCTION:   [XMLHttp-23]  public function send(content: String) : Void

     ARG:   [arg-00]   private content : String

    0000: [0] 33 8f 94 01 b4 01 c8 a5 01 . Debug 

    # io/XMLHttp.es:180                     if (hp.callback == null) {

    0009: [0] 75 ......................... GetThisSlot_0 
    0010: [1] 87 2e 01 ................... GetTypeSlot <slot: 46> <1> 
    0013: [1] 83 34 ...................... GetGlobalSlot <52> 
    0015: [2] 25 ......................... CompareEQ 
    0016: [1] 12 15 ...................... BranchFalse.8 <addr: 39> 
    0018: [0] 33 8f 94 01 b5 01 ef a5 01 . Debug 

    # io/XMLHttp.es:181                         throw new IOError("Can't call send in sync mode")

    0027: [0] 83 10 ...................... GetGlobalSlot <16> 
    0029: [1] 8e ......................... New 
    0030: [1] 5c b1 a6 01 ................ LoadString <Can't call send in sync mode> 
    0034: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0036: [1] cc ......................... Throw 
    0037: [1] 40 00 ...................... Goto.8 <addr: 39> 
    0039: [1] 33 8f 94 01 b6 01 ea 05 .... Debug 

    # io/XMLHttp.es:182                     }

    0047: [1] 33 8f 94 01 b7 01 ce a6 01 . Debug 

    # io/XMLHttp.es:183                     hp.write(content)

    0056: [1] 75 ......................... GetThisSlot_0 
    0057: [2] 61 ......................... GetLocalSlot_0 
    0058: [3] 17 5b 01 ................... CallObjSlot <slot: 91> <argc: 1> 
    0061: [1] 5a ......................... LoadNull 
    0062: [2] c5 ......................... ReturnValue 
    0063: [0] 33 8f 94 01 b8 01 f0 07 .... Debug 

    # io/XMLHttp.es:184                 }
    

VARIABLE:   [send-00]  private var content : String

FUNCTION:   [XMLHttp-24]  public function setRequestHeader(key: String, value: String) : Void

     ARG:   [arg-00]   private key : String
     ARG:   [arg-01]   private value : String

    0000: [0] 33 8f 94 01 c4 01 bf a7 01 . Debug 

    # io/XMLHttp.es:196                     hp.addRequestHeader(key, value, 1)

    0009: [0] 75 ......................... GetThisSlot_0 
    0010: [1] 61 ......................... GetLocalSlot_0 
    0011: [2] 62 ......................... GetLocalSlot_1 
    0012: [3] 47 ......................... Load1 
    0013: [4] 17 2b 03 ................... CallObjSlot <slot: 43> <argc: 3> 
    0016: [0] 5a ......................... LoadNull 
    0017: [1] c5 ......................... ReturnValue 
    0018: [0] 33 8f 94 01 c5 01 f0 07 .... Debug 

    # io/XMLHttp.es:197                 }
    

VARIABLE:   [setRequestHeader-00]  private var key : String

VARIABLE:   [setRequestHeader-01]  private var value : String

FUNCTION:   [XMLHttp-25]  [ejs.io::XMLHttp,private] function callback(e: Event) : void

     ARG:   [arg-00]   private e : Event
   LOCAL:   [local-01] var hp : Http
   LOCAL:   [local-02] var count

    0000: [0] 33 8f 94 01 cb 01 ae a8 01 . Debug 

    # io/XMLHttp.es:203                     if (e is HttpError) {

    0009: [0] 61 ......................... GetLocalSlot_0 
    0010: [1] 7f d0 a8 01 96 07 .......... GetScopedName <HttpError> <> 
    0016: [2] 45 ......................... IsA 
    0017: [1] 12 18 ...................... BranchFalse.8 <addr: 43> 
    0019: [0] 33 8f 94 01 cc 01 da a8 01 . Debug 

    # io/XMLHttp.es:204                         notify()

    0028: [0] 18 1a 00 ................... CallThisSlot <slot: 26> <argc: 0> 
    0031: [0] 33 8f 94 01 cd 01 f3 a8 01 . Debug 

    # io/XMLHttp.es:205                         return

    0040: [0] c4 ......................... Return 
    0041: [0] 40 00 ...................... Goto.8 <addr: 43> 
    0043: [0] 33 8f 94 01 ce 01 ea 05 .... Debug 

    # io/XMLHttp.es:206                     }

    0051: [0] 33 8f 94 01 cf 01 8a a9 01 . Debug 

    # io/XMLHttp.es:207                     let hp: Http = e.data

    0060: [0] 61 ......................... GetLocalSlot_0 
    0061: [1] 6c ......................... GetObjSlot_1 
    0062: [2] 9b ......................... PutLocalSlot_1 
    0063: [1] 33 8f 94 01 d0 01 ac a9 01 . Debug 

    # io/XMLHttp.es:208                     let count = hp.read(response)

    0072: [1] 62 ......................... GetLocalSlot_1 
    0073: [2] 77 ......................... GetThisSlot_2 
    0074: [3] 17 4e 01 ................... CallObjSlot <slot: 78> <argc: 1> 
    0077: [1] 99 ......................... PushResult 
    0078: [2] 9c ......................... PutLocalSlot_2 
    0079: [1] 33 8f 94 01 d1 01 d6 a9 01 . Debug 

    # io/XMLHttp.es:209                     state = (count == 0) ? Loaded : Receiving

    0088: [1] 63 ......................... GetLocalSlot_2 
    0089: [2] 46 ......................... Load0 
    0090: [3] 25 ......................... CompareEQ 
    0091: [2] 12 05 ...................... BranchFalse.8 <addr: 98> 
    0093: [1] 88 0b 01 ................... GetThisTypeSlot <slot: 11> <1> 
    0096: [2] 40 03 ...................... Goto.8 <addr: 101> 
    0098: [2] 88 0a 01 ................... GetThisTypeSlot <slot: 10> <1> 
    0101: [3] af ......................... PutThisSlot_1 
    0102: [2] 33 8f 94 01 d2 01 88 a3 01 . Debug 

    # io/XMLHttp.es:210                     notify()

    0111: [2] 18 1a 00 ................... CallThisSlot <slot: 26> <argc: 0> 
    0114: [2] 5a ......................... LoadNull 
    0115: [3] c5 ......................... ReturnValue 
    0116: [0] 33 8f 94 01 d3 01 f0 07 .... Debug 

    # io/XMLHttp.es:211                 }
    

VARIABLE:   [callback-00]  private var e : Event

VARIABLE:   [callback-01]  private var hp : Http

VARIABLE:   [callback-02]  private var count

FUNCTION:   [XMLHttp-26]  [ejs.io::XMLHttp,private] function notify() : void


    0000: [0] 33 8f 94 01 d9 01 b2 aa 01 . Debug 

    # io/XMLHttp.es:217                     if (onreadystatechange) {

    0009: [0] 78 ......................... GetThisSlot_3 
    0010: [1] 12 0e ...................... BranchFalse.8 <addr: 26> 
    0012: [0] 33 8f 94 01 da 01 d8 aa 01 . Debug 

    # io/XMLHttp.es:218                         onreadystatechange()

    0021: [0] 78 ......................... GetThisSlot_3 
    0022: [1] 15 00 ...................... Call <argc: 0> 
    0024: [-1] 40 00 ...................... Goto.8 <addr: 26> 
    0026: [-1] c4 ......................... Return 
    0027: [0] 33 8f 94 01 dc 01 f0 07 .... Debug 

    # io/XMLHttp.es:220                 }
    

VARIABLE:   [XMLHttpInstanceType-00]  [ejs.io::XMLHttp,private] var hp : Http

VARIABLE:   [XMLHttpInstanceType-01]  [ejs.io::XMLHttp,private] var state : Number

VARIABLE:   [XMLHttpInstanceType-02]  [ejs.io::XMLHttp,private] var response : ByteArray

VARIABLE:   [XMLHttpInstanceType-03]  public var onreadystatechange : Function

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 111, num inherited 0)
#
0081    ejs.io var BinaryStream: Type
0082    ejs.io var File: Type
0083    ejs.io var Http: Type
0084    ejs.io var HttpDataEvent: Type
0085    ejs.io var HttpErrorEvent: Type
0086    ejs.io var TextStream: Type
0087    ejs.io var XMLHttp: Type
0088    ejs.sys var App: Type
0089    public var Config: Type
0090    ejs.sys var GC: Type
0091    ejs.sys var Memory: Type
0092    ejs.sys var System: Type
0093    public function basename
0094    public function close
0095    public function cp
0096    public function dirname
0097    public function exists
0098    public function extension
0099    public function freeSpace
0100    public function isDir
0101    public function ls
0102    public function mkdir
0103    public function mv
0104    public function open
0105    public function pwd
0106    public function read
0107    public function rm
0108    public function rmdir
0109    public function tempname
0110    public function write

#
#  Initializer slot assignments (Num prop 7)
#
0000    -block- var block_0007_86: Block
0001    -block- var block_0007_92: Block
0002    -block- var block_0007_94: Block
0003    -block- var block_0007_96: Block
0004    -block- var block_0009_98: Block
0005    -block- var block_0007_117: Block
0006    -block- var block_0007_119: Block

#
#  Class slot assignments for the "BinaryStream" class (Num slots 29, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function BinaryStream
0006    -initializer- function BinaryStream-initializer
0007    public var BigEndian: Number
0008    public var LittleEndian: Number
0009    public function close
0010    public function endian
0011    public function set-endian
0012    public function flush
0013    public function read
0014    public function readBoolean
0015    public function readByte
0016    public function readByteArray
0017    public function readDate
0018    public function readDouble
0019    public function readInteger
0020    public function readLong
0021    public function readString
0022    public function readXML
0023    public function write
0024    public function writeByte
0025    public function writeShort
0026    public function writeDouble
0027    public function writeInteger
0028    public function writeLong

#
#  Instance slot assignments for the "BinaryStream" class (Num prop 3, num inherited 0)
#
0000    [ejs.io::BinaryStream,private] var inbuf: ByteArray
0001    [ejs.io::BinaryStream,private] var outbuf: ByteArray
0002    [ejs.io::BinaryStream,private] var nextStream: Stream

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "BinaryStream" function (Num slots 3)
#
0000    private var stream: Stream
0001    private function --fun_6051--
0002    private function --fun_6072--

#
#  Local slot assignments for the "--fun_6051--" function (Num slots 1)
#
0000    private var buffer: ByteArray

#
#  Local slot assignments for the "--fun_6072--" function (Num slots 1)
#
0000    private var buffer: ByteArray

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-endian" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readByteArray" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readXML" function (Num slots 2)
#
0000    private var data: String
0001    private var s: String

#
#  Local slot assignments for the "write" function (Num slots 3)
#
0000    private var items: Array
0001    private var count: Number
0002    -hoisted-2 var i

#
#  Local slot assignments for the "writeByte" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeShort" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeDouble" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeInteger" function (Num slots 1)
#
0000    private var data: Number

#
#  Local slot assignments for the "writeLong" function (Num slots 1)
#
0000    private var data: Number

#
#  Class slot assignments for the "File" class (Num slots 62, num inherited 5)
#
0000    reserved slot for static super property
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    reserved slot for static super property
0005    -constructor- function File
0006    -initializer- function File-initializer
0007    public var Closed: Number
0008    public var Open: Number
0009    public var Read: Number
0010    public var Write: Number
0011    public var Append: Number
0012    public var Create: Number
0013    public var Truncate: Number
0014    public function absolutePath
0015    public function basename
0016    public function close
0017    public function copy
0018    public function createTempFile
0019    public function created
0020    public function dirname
0021    public function exists
0022    public function extension
0023    public function flush
0024    public function freeSpace
0025    public function getFiles
0026    public function getBytes
0027    public function getLines
0028    public function getString
0029    public function getXML
0030    public function hasDriveSpec
0031    public function isDir
0032    public function isOpen
0033    public function isRegular
0034    public function lastAccess
0035    public function makeDir
0036    public function mode
0037    public function modified
0038    public function name
0039    public function newline
0040    public function set-newline
0041    public function open
0042    public function openFileStream
0043    public function openTextStream
0044    public function openBinaryStream
0045    public function pathDelimiter
0046    public function set-pathDelimiter
0047    public function parent
0048    public function permissions
0049    public function set-permissions
0050    public function position
0051    public function set-position
0052    public function put
0053    public function relativePath
0054    public function read
0055    public function readBytes
0056    public function remove
0057    public function removeDir
0058    public function rename
0059    public function setCallback
0060    public function unixPath
0061    public function write

#
#  Instance slot assignments for the "File" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "getValues" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Local slot assignments for the "File" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "copy" function (Num slots 1)
#
0000    private var toPath: String

#
#  Local slot assignments for the "createTempFile" function (Num slots 1)
#
0000    private var directory: String

#
#  Local slot assignments for the "freeSpace" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "getFiles" function (Num slots 1)
#
0000    private var enumDirs: Boolean

#
#  Local slot assignments for the "getBytes" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "getLines" function (Num slots 2)
#
0000    private var path: String
0001    private var encoding: String

#
#  Local slot assignments for the "getString" function (Num slots 2)
#
0000    private var path: String
0001    private var encoding: String

#
#  Local slot assignments for the "getXML" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "makeDir" function (Num slots 1)
#
0000    private var permissions: Number

#
#  Local slot assignments for the "set-newline" function (Num slots 1)
#
0000    private var terminator: String

#
#  Local slot assignments for the "open" function (Num slots 2)
#
0000    private var mode: Number
0001    private var permissions: Number

#
#  Local slot assignments for the "openFileStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "openTextStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "openBinaryStream" function (Num slots 4)
#
0000    private var filename: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "set-pathDelimiter" function (Num slots 1)
#
0000    private var delim: String

#
#  Local slot assignments for the "set-permissions" function (Num slots 1)
#
0000    private var mask: Number

#
#  Local slot assignments for the "set-position" function (Num slots 1)
#
0000    private var value: Number

#
#  Local slot assignments for the "put" function (Num slots 3)
#
0000    private var path: String
0001    private var permissions: Number
0002    private var args: Array

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readBytes" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "removeDir" function (Num slots 1)
#
0000    private var recursive: Boolean

#
#  Local slot assignments for the "rename" function (Num slots 1)
#
0000    private var toFile: String

#
#  Local slot assignments for the "setCallback" function (Num slots 1)
#
0000    private function callback

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var items: Array

#
#  Class slot assignments for the "Http" class (Num slots 92, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -constructor- function Http
0006    -initializer- function Http-initializer
0007    public var Continue: Number
0008    public var Ok: Number
0009    public var Created: Number
0010    public var Accepted: Number
0011    public var NotAuthoritative: Number
0012    public var NoContent: Number
0013    public var Reset: Number
0014    public var Partial: Number
0015    public var MultipleChoice: Number
0016    public var MovedPermanently: Number
0017    public var MovedTemporarily: Number
0018    public var SeeOther: Number
0019    public var NotModified: Number
0020    public var UseProxy: Number
0021    public var BadRequest: Number
0022    public var Unauthorized: Number
0023    public var PaymentRequired: Number
0024    public var Forbidden: Number
0025    public var NotFound: Number
0026    public var BadMethod: Number
0027    public var NotAccepted: Number
0028    public var ProxyAuth: Number
0029    public var ClientTimeout: Number
0030    public var Conflict: Number
0031    public var Gone: Number
0032    public var LengthRequired: Number
0033    public var PrecondFailed: Number
0034    public var EntityTooLarge: Number
0035    public var ReqTooLong: Number
0036    public var UnsupportedType: Number
0037    public var ServerError: Number
0038    public var NotImplemented: Number
0039    public var BadGateway: Number
0040    public var Unavailable: Number
0041    public var GatewayTimeout: Number
0042    public var Version: Number
0043    public function addRequestHeader
0044    public function available
0045    public function set-callback
0046    public function callback
0047    public function close
0048    public function connect
0049    public function certificateFile
0050    public function set-certificateFile
0051    public function code
0052    public function codeString
0053    public function contentEncoding
0054    public function contentLength
0055    public function contentType
0056    public function date
0057    public function del
0058    public function expires
0059    public function flush
0060    public function followRedirects
0061    public function set-followRedirects
0062    public function form
0063    public function get
0064    public function head
0065    public function header
0066    public function headers
0067    public function isSecure
0068    public function keyFile
0069    public function set-keyFile
0070    public function lastModified
0071    public function method
0072    public function set-method
0073    public function post
0074    public function set-postLength
0075    public function postLength
0076    public function set-postData
0077    public function put
0078    public function read
0079    public function readString
0080    public function readLines
0081    public function readXml
0082    public function requestStream
0083    public function response
0084    public function responseStream
0085    public function setCredentials
0086    public function timeout
0087    public function set-timeout
0088    public function upload
0089    public function uri
0090    public function set-uri
0091    public function write

#
#  Instance slot assignments for the "Http" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "Http" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "addRequestHeader" function (Num slots 3)
#
0000    private var key: String
0001    private var value: String
0002    private var overwrite: Boolean

#
#  Local slot assignments for the "set-callback" function (Num slots 1)
#
0000    private function cb

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-certificateFile" function (Num slots 1)
#
0000    private var certFile: String

#
#  Local slot assignments for the "del" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "set-followRedirects" function (Num slots 1)
#
0000    private var flag: Boolean

#
#  Local slot assignments for the "form" function (Num slots 2)
#
0000    private var uri: String
0001    private var postData: Object

#
#  Local slot assignments for the "get" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "head" function (Num slots 1)
#
0000    private var uri: String

#
#  Local slot assignments for the "header" function (Num slots 1)
#
0000    private var key: String

#
#  Local slot assignments for the "set-keyFile" function (Num slots 1)
#
0000    private var keyFile: String

#
#  Local slot assignments for the "set-method" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "post" function (Num slots 2)
#
0000    private var uri: String
0001    private var data: Array

#
#  Local slot assignments for the "set-postLength" function (Num slots 1)
#
0000    private var length: Number

#
#  Local slot assignments for the "set-postData" function (Num slots 1)
#
0000    private var items: Object

#
#  Local slot assignments for the "put" function (Num slots 2)
#
0000    private var uri: String
0001    private var putData: Array

#
#  Local slot assignments for the "read" function (Num slots 3)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "readLines" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "setCredentials" function (Num slots 2)
#
0000    private var username: String
0001    private var password: String

#
#  Local slot assignments for the "set-timeout" function (Num slots 1)
#
0000    private var timeout: Number

#
#  Local slot assignments for the "upload" function (Num slots 2)
#
0000    private var uri: String
0001    private var filename: String

#
#  Local slot assignments for the "set-uri" function (Num slots 1)
#
0000    private var uriString: String

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Class slot assignments for the "HttpDataEvent" class (Num slots 12, num inherited 10)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    reserved slot for static super property
0008    reserved slot for static super property
0009    reserved slot for static super property
0010    -constructor- function HttpDataEvent
0011    -initializer- function HttpDataEvent-initializer

#
#  Instance slot assignments for the "HttpDataEvent" class (Num prop 4, num inherited 4)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "HttpErrorEvent" class (Num slots 12, num inherited 10)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function Event
0006    -initializer- function Event-initializer
0007    reserved slot for static super property
0008    reserved slot for static super property
0009    reserved slot for static super property
0010    -constructor- function HttpErrorEvent
0011    -initializer- function HttpErrorEvent-initializer

#
#  Instance slot assignments for the "HttpErrorEvent" class (Num prop 4, num inherited 4)
#
0000    public var bubbles: Boolean
0001    public var data: Object
0002    public var timestamp: Date
0003    public var priority: Number

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "Event" function (Num slots 3)
#
0000    private var data: Object
0001    private var bubbles: Boolean
0002    private var priority: Number

#
#  Class slot assignments for the "TextStream" class (Num slots 21, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function TextStream
0006    -initializer- function TextStream-initializer
0007    public var LATIN1: String
0008    public var UTF_8: String
0009    public var UTF_16: String
0010    public function close
0011    public function encoding
0012    public function set-encoding
0013    [ejs.io::TextStream,private] function fill
0014    public function flush
0015    public function read
0016    public function readLine
0017    public function readLines
0018    public function readString
0019    public function write
0020    public function writeLine

#
#  Instance slot assignments for the "TextStream" class (Num prop 4, num inherited 0)
#
0000    [ejs.io::TextStream,private] var newline: String
0001    [ejs.io::TextStream,private] var inbuf: ByteArray
0002    [ejs.io::TextStream,private] var format: String
0003    [ejs.io::TextStream,private] var nextStream: Stream

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "TextStream" function (Num slots 1)
#
0000    private var stream: Stream

#
#  Local slot assignments for the "close" function (Num slots 1)
#
0000    private var graceful: Boolean

#
#  Local slot assignments for the "set-encoding" function (Num slots 1)
#
0000    private var encoding: String

#
#  Local slot assignments for the "fill" function (Num slots 1)
#
0000    private var was

#
#  Local slot assignments for the "read" function (Num slots 6)
#
0000    private var buffer: ByteArray
0001    private var offset: Number
0002    private var count: Number
0003    private var total
0004    private var where
0005    -hoisted-5 var len

#
#  Local slot assignments for the "readLine" function (Num slots 3)
#
0000    private var start
0001    -hoisted-1 var c
0002    -hoisted-2 var i

#
#  Local slot assignments for the "readLines" function (Num slots 3)
#
0000    private var numLines: Number
0001    private var result: Array
0002    -hoisted-2 var i

#
#  Local slot assignments for the "readString" function (Num slots 1)
#
0000    private var count: Number

#
#  Local slot assignments for the "write" function (Num slots 1)
#
0000    private var data: Array

#
#  Local slot assignments for the "writeLine" function (Num slots 4)
#
0000    private var lines: Array
0001    private var written
0002    private var count
0003    -hoisted-3 var line

#
#  Class slot assignments for the "XMLHttp" class (Num slots 27, num inherited 5)
#
0000    public function clone
0001    iterator function get
0002    iterator function getValues
0003    public function length
0004    public function toString
0005    -constructor- function XMLHttp
0006    -initializer- function XMLHttp-initializer
0007    public var Uninitialized
0008    public var Open
0009    public var Sent
0010    public var Receiving
0011    public var Loaded
0012    public function abort
0013    public function http
0014    public function readyState
0015    public function responseText
0016    public function responseXML
0017    public function responseBody
0018    public function status
0019    public function statusText
0020    public function getAllResponseHeaders
0021    public function getResponseHeader
0022    public function open
0023    public function send
0024    public function setRequestHeader
0025    [ejs.io::XMLHttp,private] function callback
0026    [ejs.io::XMLHttp,private] function notify

#
#  Instance slot assignments for the "XMLHttp" class (Num prop 4, num inherited 0)
#
0000    [ejs.io::XMLHttp,private] var hp: Http
0001    [ejs.io::XMLHttp,private] var state: Number
0002    [ejs.io::XMLHttp,private] var response: ByteArray
0003    public function onreadystatechange

#
#  Local slot assignments for the "clone" function (Num slots 1)
#
0000    private var deep

#
#  Local slot assignments for the "get" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "getValues" function (Num slots 2)
#
0000    private var deep
0001    private var namespaces

#
#  Local slot assignments for the "toString" function (Num slots 1)
#
0000    private var locale

#
#  Local slot assignments for the "getAllResponseHeaders" function (Num slots 2)
#
0000    private var result: String
0001    -hoisted-1 var key

#
#  Local slot assignments for the "getResponseHeader" function (Num slots 1)
#
0000    private var key: String

#
#  Local slot assignments for the "open" function (Num slots 7)
#
0000    private var method: String
0001    private var url: String
0002    private var async: Boolean
0003    private var user: String
0004    private var password: String
0005    -hoisted-5 var timeout
0006    -hoisted-6 var when: Date

#
#  Local slot assignments for the "send" function (Num slots 1)
#
0000    private var content: String

#
#  Local slot assignments for the "setRequestHeader" function (Num slots 2)
#
0000    private var key: String
0001    private var value: String

#
#  Local slot assignments for the "callback" function (Num slots 3)
#
0000    private var e: Event
0001    private var hp: Http
0002    private var count

#
#  Class slot assignments for the "App" class (Num slots 20, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function App-initializer
0006    public var UTF_8: Number
0007    public var UTF_16: Number
0008    public function args
0009    public function dir
0010    public function getEnv
0011    public function exit
0012    public function name
0013    public function noexit
0014    public function serviceEvents
0015    public function sleep
0016    public function title
0017    public function version
0018    public function workingDir
0019    public function set-workingDir

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "getEnv" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "exit" function (Num slots 1)
#
0000    private var status: Number

#
#  Local slot assignments for the "noexit" function (Num slots 1)
#
0000    private var exit: Boolean

#
#  Local slot assignments for the "serviceEvents" function (Num slots 2)
#
0000    private var count: Number
0001    private var timeout: Number

#
#  Local slot assignments for the "sleep" function (Num slots 1)
#
0000    private var delay: Number

#
#  Local slot assignments for the "set-workingDir" function (Num slots 1)
#
0000    private var value: String

#
#  Class slot assignments for the "Config" class (Num slots 22, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public var Debug: Boolean
0006    public var CPU: String
0007    public var DB: Boolean
0008    public var E4X: Boolean
0009    public var Floating: Boolean
0010    public var Http: Boolean
0011    public var Lang: String
0012    public var Legacy: Boolean
0013    public var Multithread: Boolean
0014    public var NumberType: String
0015    public var OS: String
0016    public var Product: String
0017    public var RegularExpressions: Boolean
0018    public var Title: String
0019    public var Version: String
0020    public var LibDir: String
0021    public var BinDir: String

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 15, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function allocatedMemory
0006    public function enabled
0007    public function set-enabled
0008    public function maxMemory
0009    public function set-maxMemory
0010    public function printStats
0011    public function peakMemory
0012    public function workQuota
0013    public function set-workQuota
0014    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "set-enabled" function (Num slots 1)
#
0000    private var on: Boolean

#
#  Local slot assignments for the "set-maxMemory" function (Num slots 1)
#
0000    private var limit: Number

#
#  Local slot assignments for the "set-workQuota" function (Num slots 1)
#
0000    private var quota: Number

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Class slot assignments for the "Memory" class (Num slots 6, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function printStats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 10, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function System-initializer
0006    public var Bufsize: Number
0007    public function hostname
0008    public function run
0009    public function runx

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "hostname" function (Num slots 1)
#
0000    private var fullyQualified: Boolean

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "runx" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "basename" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "close" function (Num slots 2)
#
0000    private var file: File
0001    private var graceful: Boolean

#
#  Local slot assignments for the "cp" function (Num slots 2)
#
0000    private var fromPath: String
0001    private var toPath: String

#
#  Local slot assignments for the "dirname" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "exists" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "extension" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "freeSpace" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "isDir" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "ls" function (Num slots 2)
#
0000    private var path: String
0001    private var enumDirs: Boolean

#
#  Local slot assignments for the "mkdir" function (Num slots 2)
#
0000    private var path: String
0001    private var permissions: Number

#
#  Local slot assignments for the "mv" function (Num slots 2)
#
0000    private var fromFile: String
0001    private var toFile: String

#
#  Local slot assignments for the "open" function (Num slots 4)
#
0000    private var path: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "read" function (Num slots 2)
#
0000    private var file: File
0001    private var count: Number

#
#  Local slot assignments for the "rm" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "rmdir" function (Num slots 2)
#
0000    private var path: String
0001    private var recursive: Boolean

#
#  Local slot assignments for the "tempname" function (Num slots 1)
#
0000    private var directory: String

#
#  Local slot assignments for the "write" function (Num slots 2)
#
0000    private var file: File
0001    private var items: Array

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 21951 bytes)
#
0000   ""
0001   "io/BinaryStream.es"
0002   "}"
0003   "internal-27"
0004   "ejs.io"
0005   "module ejs.io {"
0006   "    class BinaryStream implements Stream {"
0007   "        use default namespace public"
0008   "        static const BigEndian: Number = ByteArray.BigEndian"
0009   "BigEndian"
0010   "public"
0011   "Number"
0012   "        static const LittleEndian: Number = ByteArray.LittleEndian"
0013   "LittleEndian"
0014   "        private var inbuf: ByteArray"
0015   "inbuf"
0016   "[ejs.io::BinaryStream,private]"
0017   "ByteArray"
0018   "        private var outbuf: ByteArray"
0019   "outbuf"
0020   "        private var nextStream: Stream"
0021   "nextStream"
0022   "Stream"
0023   "        function BinaryStream(stream: Stream = null) {"
0024   "            nextStream = stream"
0025   "            inbuf = new ByteArray"
0026   "            outbuf = new ByteArray"
0027   "            inbuf.input = function (buffer: ByteArray) {"
0028   "                nextStream.read(buffer)"
0029   "read"
0030   "            }"
0031   "--fun_6051--"
0032   "private"
0033   "buffer"
0034   "intrinsic"
0035   "            outbuf.output = function (buffer: ByteArray) {"
0036   "                count = nextStream.write(buffer)"
0037   "write"
0038   "count"
0039   ""
0040   "                buffer.readPosition += count"
0041   "                buffer.reset()"
0042   "--fun_6072--"
0043   "        }"
0044   "BinaryStream"
0045   "-constructor-"
0046   "stream"
0047   "Function"
0048   "        function close(graceful: Boolean = 0): void {"
0049   "            flush()"
0050   "            nextStream.close()"
0051   "close"
0052   "graceful"
0053   "Boolean"
0054   "Void"
0055   "        function get endian(): Number"
0056   "            inbuf.endian"
0057   "endian"
0058   "        function set endian(value: Number): Void {"
0059   "            if (value != BigEndian && value != LittleEndian) {"
0060   "                throw new ArgError("Bad endian value")"
0061   "Bad endian value"
0062   "            inbuf.endian = value"
0063   "            outbuf.endian = value"
0064   "set-endian"
0065   "value"
0066   "        function flush(): void {"
0067   "            inbuf.flush()"
0068   "            outbuf.flush()"
0069   "            nextStream.flush()"
0070   "flush"
0071   "        function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number"
0072   "            inbuf.read(buffer, offset, count)"
0073   "offset"
0074   "        function readBoolean(): Boolean"
0075   "            inbuf.readBoolean()"
0076   "readBoolean"
0077   "        function readByte(): Number"
0078   "            inbuf.readByte()"
0079   "readByte"
0080   "        function readByteArray(count: Number = -1): ByteArray"
0081   "            inbuf.readByteArray(count)"
0082   "readByteArray"
0083   "        function readDate(): Date"
0084   "            inbuf.readDate()"
0085   "readDate"
0086   "Date"
0087   "        function readDouble(): Date"
0088   "readDouble"
0089   "        function readInteger(): Number"
0090   "            inbuf.readInteger()"
0091   "readInteger"
0092   "        function readLong(): Number"
0093   "readLong"
0094   "        function readString(count: Number = -1): String "
0095   "            inbuf.readString(count)"
0096   "readString"
0097   "String"
0098   "        function readXML(): XML {"
0099   "data"
0100   "            var data: String = """
0101   "            while (1) {"
0102   "s"
0103   "                var s: String = inbuf.readString()"
0104   "                if (s.length == 0) {"
0105   "                    break"
0106   "                }"
0107   "                data += s"
0108   "            return new XML(data)"
0109   "readXML"
0110   "XML"
0111   "        function write(...items): Number {"
0112   "            let count: Number = 0"
0113   "            for each (i in items) {"
0114   "i"
0115   "-hoisted-2"
0116   "                count += outbuf.write(i)"
0117   "            return count"
0118   "items"
0119   "Array"
0120   "Block"
0121   "StopIteration"
0122   "iterator"
0123   "        function writeByte(data: Number): Void "
0124   "            outbuf.writeByte(outbuf)"
0125   "writeByte"
0126   "        function writeShort(data: Number): Void"
0127   "            outbuf.writeShort(data)"
0128   "writeShort"
0129   "        function writeDouble(data: Number): Void"
0130   "            outbuf.writeDouble(data)"
0131   "writeDouble"
0132   "        function writeInteger(data: Number): Void"
0133   "            outbuf.writeInteger(data)"
0134   "writeInteger"
0135   "        function writeLong(data: Number): Void"
0136   "            outbuf.writeLong(data)"
0137   "writeLong"
0138   "BinaryStream-initializer"
0139   "-initializer-"
0140   "Object"
0141   "clone"
0142   "deep"
0143   "get"
0144   "Iterator"
0145   "namespaces"
0146   "getValues"
0147   "length"
0148   "toString"
0149   "locale"
0150   "block_0007_86"
0151   "-block-"
0152   "io/File.es"
0153   "internal-28"
0154   "    native class File implements Stream {"
0155   "        static const Closed: Number     = 0x0"
0156   "Closed"
0157   "        static const Open: Number       = 0x1"
0158   "Open"
0159   "        static const Read: Number       = 0x2"
0160   "Read"
0161   "        static const Write: Number      = 0x4   "
0162   "Write"
0163   "        static const Append: Number     = 0x8"
0164   "Append"
0165   "        static const Create: Number     = 0x10"
0166   "Create"
0167   "        static const Truncate: Number   = 0x20"
0168   "Truncate"
0169   "        native function File(path: String)"
0170   "File"
0171   "path"
0172   "        native function get absolutePath(): String"
0173   "absolutePath"
0174   "        native function get basename(): String"
0175   "basename"
0176   "        native function close(graceful: Boolean = true): void "
0177   "        native function copy(toPath: String): void"
0178   "copy"
0179   "toPath"
0180   "        native static function createTempFile(directory: String = null): File"
0181   "createTempFile"
0182   "directory"
0183   "        native function get created(): Date "
0184   "created"
0185   "        native function get dirname(): String"
0186   "dirname"
0187   "        native function get exists(): Boolean "
0188   "exists"
0189   "        native function get extension(): String "
0190   "extension"
0191   "        native function flush(): void "
0192   "        native function freeSpace(path: String = null): Number"
0193   "freeSpace"
0194   "        override iterator native function get(deep: Boolean = false): Iterator"
0195   "        native function getFiles(enumDirs: Boolean = false): Array "
0196   "getFiles"
0197   "enumDirs"
0198   "        override iterator native function getValues(deep: Boolean = false): Iterator"
0199   "        native static function getBytes(path: String): ByteArray "
0200   "getBytes"
0201   "        native static function getLines(path: String, encoding: String = App.UTF_8): Array "
0202   "getLines"
0203   "encoding"
0204   "        native static function getString(path: String, encoding: String = App.UTF_8): String "
0205   "getString"
0206   "        native static function getXML(path: String): XML "
0207   "getXML"
0208   "        native function get hasDriveSpec(): Boolean "
0209   "hasDriveSpec"
0210   "        native function get isDir(): Boolean"
0211   "isDir"
0212   "        native function get isOpen(): Boolean"
0213   "isOpen"
0214   "        native function get isRegular(): Boolean"
0215   "isRegular"
0216   "        native function get lastAccess(): Date "
0217   "lastAccess"
0218   "        override native function get length(): Number "
0219   "        native function makeDir(permissions: Number = 0755): void"
0220   "makeDir"
0221   "permissions"
0222   "        native function get mode(): Number"
0223   "mode"
0224   "        native function get modified(): Date "
0225   "modified"
0226   "        native function get name(): String "
0227   "name"
0228   "        native static function get newline(): String "
0229   "newline"
0230   "        native static function set newline(terminator: String): Void"
0231   "set-newline"
0232   "terminator"
0233   "        native function open(mode: Number = Read, permissions: Number = 0644): void"
0234   "open"
0235   "        static function openFileStream(filename: String, mode: Number = Read, permissions: Number = 0644): File {"
0236   "file"
0237   "            var file: File"
0238   "            file = new File(filename)"
0239   "            file.open(mode, permissions)"
0240   "            return file"
0241   "openFileStream"
0242   "filename"
0243   "        static function openTextStream(filename: String, mode: Number = Read, permissions: Number = 0644): TextStream {"
0244   "            var file: File = new File(filename)"
0245   "            return new TextStream(file)"
0246   "openTextStream"
0247   "TextStream"
0248   "        static function openBinaryStream(filename: String, mode: Number = Read, permissions: Number = 0644): BinaryStream {"
0249   "            return new BinaryStream(file)"
0250   "openBinaryStream"
0251   "        native static function get pathDelimiter(): String "
0252   "pathDelimiter"
0253   "        native static function set pathDelimiter(delim: String): Void "
0254   "set-pathDelimiter"
0255   "delim"
0256   "        native function get parent(): String"
0257   "parent"
0258   "        native function get permissions(): Number"
0259   "        native function set permissions(mask: Number): void"
0260   "set-permissions"
0261   "mask"
0262   "        native function get position(): Number"
0263   "position"
0264   "        native function set position(value: Number): void"
0265   "set-position"
0266   "        native static function put(path: String, permissions: Number, ...args): void "
0267   "put"
0268   "args"
0269   "        native function get relativePath()"
0270   "relativePath"
0271   "        native function read(buffer: ByteArray, offset: Number = 0, count: Number = -1): Number"
0272   "        native function readBytes(count: Number): ByteArray"
0273   "readBytes"
0274   "        native function remove(): void "
0275   "remove"
0276   "        native function removeDir(recursive: Boolean = false): void"
0277   "removeDir"
0278   "recursive"
0279   "        native function rename(toFile: String): void"
0280   "rename"
0281   "toFile"
0282   "        native function setCallback(callback: Function): void"
0283   "setCallback"
0284   "callback"
0285   "        native function get unixPath(): String"
0286   "unixPath"
0287   "        native function write(...items): Number"
0288   "File-initializer"
0289   "block_0007_92"
0290   "io/Http.es"
0291   "internal-29"
0292   "    native class Http implements Stream {"
0293   "        /** HTTP status code */     static const Continue           : Number    = 100"
0294   "Continue"
0295   "        /** HTTP status code */     static const Ok                 : Number    = 200"
0296   "Ok"
0297   "        /** HTTP status code */     static const Created            : Number    = 201"
0298   "Created"
0299   "        /** HTTP status code */     static const Accepted           : Number    = 202"
0300   "Accepted"
0301   "        /** HTTP status code */     static const NotAuthoritative   : Number    = 203"
0302   "NotAuthoritative"
0303   "        /** HTTP status code */     static const NoContent          : Number    = 204"
0304   "NoContent"
0305   "        /** HTTP status code */     static const Reset              : Number    = 205"
0306   "Reset"
0307   "        /** HTTP status code */     static const Partial            : Number    = 206"
0308   "Partial"
0309   "        /** HTTP status code */     static const MultipleChoice     : Number    = 300"
0310   "MultipleChoice"
0311   "        /** HTTP status code */     static const MovedPermanently   : Number    = 301"
0312   "MovedPermanently"
0313   "        /** HTTP status code */     static const MovedTemporarily   : Number    = 302"
0314   "MovedTemporarily"
0315   "        /** HTTP status code */     static const SeeOther           : Number    = 303"
0316   "SeeOther"
0317   "        /** HTTP status code */     static const NotModified        : Number    = 304"
0318   "NotModified"
0319   "        /** HTTP status code */     static const UseProxy           : Number    = 305"
0320   "UseProxy"
0321   "        /** HTTP status code */     static const BadRequest         : Number    = 400"
0322   "BadRequest"
0323   "        /** HTTP status code */     static const Unauthorized       : Number    = 401"
0324   "Unauthorized"
0325   "        /** HTTP status code */     static const PaymentRequired    : Number    = 402"
0326   "PaymentRequired"
0327   "        /** HTTP status code */     static const Forbidden          : Number    = 403"
0328   "Forbidden"
0329   "        /** HTTP status code */     static const NotFound           : Number    = 404"
0330   "NotFound"
0331   "        /** HTTP status code */     static const BadMethod          : Number    = 405"
0332   "BadMethod"
0333   "        /** HTTP status code */     static const NotAccepted        : Number    = 406"
0334   "NotAccepted"
0335   "        /** HTTP status code */     static const ProxyAuth          : Number    = 407"
0336   "ProxyAuth"
0337   "        /** HTTP status code */     static const ClientTimeout      : Number    = 408"
0338   "ClientTimeout"
0339   "        /** HTTP status code */     static const Conflict           : Number    = 409"
0340   "Conflict"
0341   "        /** HTTP status code */     static const Gone               : Number    = 410"
0342   "Gone"
0343   "        /** HTTP status code */     static const LengthRequired     : Number    = 411"
0344   "LengthRequired"
0345   "        /** HTTP status code */     static const PrecondFailed      : Number    = 412"
0346   "PrecondFailed"
0347   "        /** HTTP status code */     static const EntityTooLarge     : Number    = 413"
0348   "EntityTooLarge"
0349   "        /** HTTP status code */     static const ReqTooLong         : Number    = 414"
0350   "ReqTooLong"
0351   "        /** HTTP status code */     static const UnsupportedType    : Number    = 415"
0352   "UnsupportedType"
0353   "        /** HTTP status code */     static const ServerError        : Number    = 500"
0354   "ServerError"
0355   "        /** HTTP status code */     static const NotImplemented     : Number    = 501"
0356   "NotImplemented"
0357   "        /** HTTP status code */     static const BadGateway         : Number    = 502"
0358   "BadGateway"
0359   "        /** HTTP status code */     static const Unavailable        : Number    = 503"
0360   "Unavailable"
0361   "        /** HTTP status code */     static const GatewayTimeout     : Number    = 504"
0362   "GatewayTimeout"
0363   "        /** HTTP status code */     static const Version            : Number    = 505"
0364   "Version"
0365   "        native function Http(uri: String = null)"
0366   "Http"
0367   "uri"
0368   "        native function addRequestHeader(key: String, value: String, overwrite: Boolean = true): Void"
0369   "addRequestHeader"
0370   "key"
0371   "overwrite"
0372   "        native function get available(): Number "
0373   "available"
0374   "        native function set callback(cb: Function): Void"
0375   "set-callback"
0376   "cb"
0377   "        native function get callback(): Function"
0378   "        native function close(graceful: Boolean = true): Void "
0379   "        native function connect(): Void"
0380   "connect"
0381   "        native function get certificateFile(): String"
0382   "certificateFile"
0383   "        native function set certificateFile(certFile: String): Void"
0384   "set-certificateFile"
0385   "certFile"
0386   "        native function get code(): Number"
0387   "code"
0388   "        native function get codeString(): String"
0389   "codeString"
0390   "        native function get contentEncoding(): String"
0391   "contentEncoding"
0392   "        native function get contentLength(): Number"
0393   "contentLength"
0394   "        native function get contentType(): String"
0395   "contentType"
0396   "        native function get date(): Date"
0397   "date"
0398   "        native function del(uri: String = null): Void"
0399   "del"
0400   "        native function get expires(): Date"
0401   "expires"
0402   "        function flush(): Void {"
0403   "        native function get followRedirects(): Boolean"
0404   "followRedirects"
0405   "        native function set followRedirects(flag: Boolean): Void"
0406   "set-followRedirects"
0407   "flag"
0408   "        native function form(uri: String, postData: Object): Void"
0409   "form"
0410   "postData"
0411   "        native function get(uri: String = null): Void"
0412   "        native function head(uri: String = null): Void"
0413   "head"
0414   "        native function header(key: String): String"
0415   "header"
0416   "        native function get headers(): Object"
0417   "headers"
0418   "        native function get isSecure(): Boolean"
0419   "isSecure"
0420   "        native function get keyFile(): String"
0421   "keyFile"
0422   "        native function set keyFile(keyFile: String): Void"
0423   "set-keyFile"
0424   "        native function get lastModified(): Date"
0425   "lastModified"
0426   "        native function get method(): String"
0427   "method"
0428   "        native function set method(name: String)"
0429   "set-method"
0430   "        native function post(uri: String, ...data): Void"
0431   "post"
0432   "        native function set postLength(length: Number): Void"
0433   "set-postLength"
0434   "        native function get postLength(): Number"
0435   "postLength"
0436   "        native function set postData(items: Object): Void"
0437   "set-postData"
0438   "        native function put(uri: String, ...putData): Void"
0439   "putData"
0440   "        native function readString(count: Number = -1): String"
0441   "        native function readLines(count: Number = -1): Array"
0442   "readLines"
0443   "        native function readXml(): XML"
0444   "readXml"
0445   "        native function get requestStream(): Stream"
0446   "requestStream"
0447   "        function get response(): String {"
0448   "            return readString()"
0449   "response"
0450   "        native function get responseStream(): Stream"
0451   "responseStream"
0452   "        native function setCredentials(username: String, password: String): Void"
0453   "setCredentials"
0454   "username"
0455   "password"
0456   "        native function get timeout(): Number"
0457   "timeout"
0458   "        native function set timeout(timeout: Number): Void"
0459   "set-timeout"
0460   "        native function upload(uri: String, filename: String): Void"
0461   "upload"
0462   "        native function get uri(): String"
0463   "        native function set uri(uriString: String): Void"
0464   "set-uri"
0465   "uriString"
0466   "        native function write(...data): Void"
0467   "Http-initializer"
0468   "    class HttpDataEvent extends Event {"
0469   "HttpDataEvent"
0470   "HttpDataEvent-initializer"
0471   "Event"
0472   "ejs.events"
0473   "bubbles"
0474   "priority"
0475   "timestamp"
0476   "    class HttpErrorEvent extends Event {"
0477   "HttpErrorEvent"
0478   "HttpErrorEvent-initializer"
0479   "block_0007_94"
0480   "io/Socket.es"
0481   "internal-30"
0482   "block_0007_96"
0483   "io/TextStream.es"
0484   "internal-31"
0485   "    class TextStream implements Stream {"
0486   "        static const LATIN1: String = "latin1""
0487   "LATIN1"
0488   "latin1"
0489   "        static const UTF_8: String = "utf-8""
0490   "UTF_8"
0491   "utf-8"
0492   "        static const UTF_16: String = "utf-16""
0493   "UTF_16"
0494   "utf-16"
0495   "        private var newline: String = "\n""
0496   "[ejs.io::TextStream,private]"
0497   "
"
0498   "        private var format: String = UTF_8"
0499   "format"
0500   "        function TextStream(stream: Stream) {"
0501   "            if (stream == null) {"
0502   "                throw new ArgError("Must supply a Stream argument")"
0503   "Must supply a Stream argument"
0504   "            inbuf = new ByteArray(System.Bufsize, true)"
0505   "            inbuf.input = fill"
0506   "            if (Config.OS == "WIN") {"
0507   "WIN"
0508   "                newline = "\r\n""
0509   "
"
0510   "        function close(graceful: Boolean = true): Void {"
0511   "            nextStream.close(graceful)"
0512   "        function get encoding(): String {"
0513   "            return format"
0514   "        function set encoding(encoding: String = UTF_8): Void {"
0515   "            format = encoding"
0516   "set-encoding"
0517   "        private function fill(): Number {"
0518   "was"
0519   "            let was = inbuf.available"
0520   "            inbuf.reset()"
0521   "            count = nextStream.read(inbuf)"
0522   "            return inbuf.available - was"
0523   "fill"
0524   "        function read(buffer: ByteArray, offset: Number = -1, count: Number = -1): Number {"
0525   "total"
0526   "            let total = 0"
0527   "            if (count < 0) {"
0528   "                count = Number.MaxValue"
0529   "where"
0530   "            let where = offset"
0531   "            if (offset < 0) {"
0532   "                where = buffer.writePosition"
0533   "            while (count > 0) {"
0534   "                if (inbuf.available == 0 && fill() == 0) {"
0535   "len"
0536   "-hoisted-5"
0537   "                let len = inbuf.available.min(count)"
0538   "min"
0539   "                buffer.copyIn(where, inbuf, inbuf.readPosition, len)"
0540   "                where += len"
0541   "                inbuf.readPosition += len"
0542   "                total += len"
0543   "                count -= len"
0544   "                buffer.writePosition += total"
0545   "            return total"
0546   "        function readLine(): String {"
0547   "start"
0548   "            let start = inbuf.readPosition"
0549   "            if (inbuf.available == 0 && fill() == 0) {"
0550   "                return null"
0551   "            while (true) {"
0552   "c"
0553   "-hoisted-1"
0554   "                let c = newline.charCodeAt(0)"
0555   "                for (let i = start; i < inbuf.writePosition; i++) {"
0556   "                    if (inbuf[i] == c) {"
0557   "                        if (newline.length == 2 && (i+1) < inbuf.writePosition && newline.charCodeAt(1) != inbuf[i+1]) {"
0558   "                            continue"
0559   "                        }"
0560   "                        result = inbuf.readString(i - inbuf.readPosition)"
0561   "result"
0562   "						inbuf.readPosition += newline.length"
0563   "                        return result"
0564   "                start = inbuf.writePosition"
0565   "                if (fill() == 0) {"
0566   "                    result = inbuf.readString()"
0567   "                    return result"
0568   "            return null"
0569   "readLine"
0570   "        function readLines(numLines: Number = -1): Array {"
0571   "            var result: Array"
0572   "            if (numLines <= 0) {"
0573   "                result = new Array"
0574   "                numLines = Number.MaxValue"
0575   "            } else {"
0576   "                result = new Array(numLines)"
0577   "            for (let i in numLines) {"
0578   "                if ((line = readLine()) == null) "
0579   "line"
0580   "                result[i] = line"
0581   "            return result"
0582   "numLines"
0583   "        function readString(count: Number = -1): String {"
0584   "            return inbuf.readString(count)"
0585   "        function write(...data): Number {"
0586   "            return nextStream.write(data)"
0587   "        function writeLine(...lines): Number {"
0588   "written"
0589   "            let written = 0"
0590   "            for each (let line in lines) {"
0591   "-hoisted-3"
0592   "                var count = line.length"
0593   "                written += nextStream.write(line)"
0594   "                written += nextStream.write(newline)"
0595   "            return written"
0596   "writeLine"
0597   "lines"
0598   "TextStream-initializer"
0599   "block_0009_98"
0600   "io/Url.es"
0601   "internal-32"
0602   "block_0007_117"
0603   "io/XMLHttp.es"
0604   "internal-33"
0605   "    class XMLHttp {"
0606   "        private var hp: Http = new Http"
0607   "hp"
0608   "[ejs.io::XMLHttp,private]"
0609   "        private var state: Number = 0"
0610   "state"
0611   "        private var response: ByteArray"
0612   "        static const Uninitialized = 0              "
0613   "Uninitialized"
0614   "        static const Open = 1"
0615   "        static const Sent = 2"
0616   "Sent"
0617   "        static const Receiving = 3"
0618   "Receiving"
0619   "        static const Loaded = 4"
0620   "Loaded"
0621   "        public var onreadystatechange: Function"
0622   "onreadystatechange"
0623   "        function abort(): void {"
0624   "            hp.close"
0625   "abort"
0626   "        function get http() : Http {"
0627   "            return hp"
0628   "http"
0629   "        function get readyState() : Number {"
0630   "            return state"
0631   "readyState"
0632   "        function get responseText(): String {"
0633   "            return response.toString()"
0634   "responseText"
0635   "        function get responseXML(): XML {"
0636   "            return XML(response.toString())"
0637   "responseXML"
0638   "        function get responseBody(): String {"
0639   "            throw new Error("Unsupported API")"
0640   "Unsupported API"
0641   "            return """
0642   "responseBody"
0643   "        function get status(): Number {"
0644   "            return hp.code"
0645   "status"
0646   "        function get statusText() : String {"
0647   "            return hp.codeString"
0648   "statusText"
0649   "        function getAllResponseHeaders(): String {"
0650   "            let result: String = """
0651   "            for (key in hp.headers) {"
0652   "                result = result.concat(key + ": " + hp.headers[key] + '\n')"
0653   ": "
0654   "getAllResponseHeaders"
0655   "        function getResponseHeader(key: String) {"
0656   "getResponseHeader"
0657   "        function open(method: String, url: String, async: Boolean = false, user: String = null, password: String = null): Void {"
0658   "            hp.method = method"
0659   "            hp.url = url"
0660   "url"
0661   "            if (userName && password) {"
0662   "userName"
0663   "                hp.setCredentials(user, password)"
0664   "            hp.callback = callback"
0665   "            response = new ByteArray(System.Bufsize, 1)"
0666   "            hp.connect()"
0667   "            state = Open"
0668   "            notify()"
0669   "            if (!async) {"
0670   "                let timeout = 5 * 1000"
0671   "                let when: Date = new Date"
0672   "when"
0673   "-hoisted-6"
0674   "                while (state != Loaded && when.elapsed < timeout) {"
0675   "                    App.serviceEvents(1, timeout)"
0676   "async"
0677   "user"
0678   "        function send(content: String): Void {"
0679   "            if (hp.callback == null) {"
0680   "                throw new IOError("Can't call send in sync mode")"
0681   "Can't call send in sync mode"
0682   "            hp.write(content)"
0683   "send"
0684   "content"
0685   "        function setRequestHeader(key: String, value: String): Void {"
0686   "            hp.addRequestHeader(key, value, 1)"
0687   "setRequestHeader"
0688   "        private function callback (e: Event) {"
0689   "            if (e is HttpError) {"
0690   "HttpError"
0691   "                notify()"
0692   "                return"
0693   "            let hp: Http = e.data"
0694   "            let count = hp.read(response)"
0695   "            state = (count == 0) ? Loaded : Receiving"
0696   "e"
0697   "        private function notify() {"
0698   "            if (onreadystatechange) {"
0699   "                onreadystatechange()"
0700   "notify"
0701   "XMLHttp"
0702   "XMLHttp-initializer"
0703   "block_0007_119"
0704   "__initializer__"

==============================================================================================

MODULE:   ejs.sys <hasInitializer, boundGlobals>


FUNCTION:   [initializer]  intrinsic function __initializer__() : Void

   LOCAL:   [local-00] var block_0007_128 : Block
   LOCAL:   [local-01] var block_0007_130 : Block
   LOCAL:   [local-02] var block_0007_132 : Block
   LOCAL:   [local-03] var block_0007_134 : Block
   LOCAL:   [local-04] var block_0007_136 : Block
   LOCAL:   [local-05] var block_0007_138 : Block
   LOCAL:   [local-06] var block_0007_140 : Block
   LOCAL:   [local-07] var block_0007_142 : Block

    0000: [0] 93 00 00 ................... OpenBlock <slot: 0> <0> 
    0003: [0] 33 01 c2 01 0c ............. Debug 

    # sys/App.es:194            }

    0008: [0] 01 0e ...................... AddNamespace <internal-34> 
    0010: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0012: [0] 33 01 07 22 ................ Debug 

    # sys/App.es:7              module ejs.sys {

    0016: [0] 33 01 0f 33 ................ Debug 

    # sys/App.es:15             	native class App {

    0020: [0] 34 e2 02 ................... DefineClass <type: 0x162,  ejs.sys::App> 
    0023: [0] 23 ......................... CloseBlock 
    0024: [0] 93 01 00 ................... OpenBlock <slot: 1> <0> 
    0027: [0] 33 df 09 69 0c ............. Debug 

    # sys/Config.es:105         }

    0032: [0] 01 ed 09 ................... AddNamespace <internal-35> 
    0035: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0037: [0] 33 df 09 07 22 ............. Debug 

    # sys/Config.es:7           module ejs.sys {

    0042: [0] 33 df 09 09 f9 09 .......... Debug 

    # sys/Config.es:9           	use default namespace public

    0048: [0] 83 23 ...................... GetGlobalSlot <35> 
    0050: [1] 02 ......................... AddNamespaceRef 
    0051: [0] 33 df 09 10 97 0a .......... Debug 

    # sys/Config.es:16          	native class Config extends Object {

    0057: [0] 34 e6 02 ................... DefineClass <type: 0x166,  ejs.sys::Config> 
    0060: [0] 23 ......................... CloseBlock 
    0061: [0] 93 02 00 ................... OpenBlock <slot: 2> <0> 
    0064: [0] 33 e9 0f 28 0c ............. Debug 

    # sys/Debug.es:40           }

    0069: [0] 01 f6 0f ................... AddNamespace <internal-36> 
    0072: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0074: [0] 33 e9 0f 07 22 ............. Debug 

    # sys/Debug.es:7            module ejs.sys {

    0079: [0] 23 ......................... CloseBlock 
    0080: [0] 93 03 00 ................... OpenBlock <slot: 3> <0> 
    0083: [0] 33 91 10 61 0c ............. Debug 

    # sys/GC.es:97              }

    0088: [0] 01 9b 10 ................... AddNamespace <internal-37> 
    0091: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0093: [0] 33 91 10 07 22 ............. Debug 

    # sys/GC.es:7               module ejs.sys {

    0098: [0] 33 91 10 0d a7 10 .......... Debug 

    # sys/GC.es:13              	native class GC {

    0104: [0] 34 ea 02 ................... DefineClass <type: 0x16a,  ejs.sys::GC> 
    0107: [0] 23 ......................... CloseBlock 
    0108: [0] 93 04 00 ................... OpenBlock <slot: 4> <0> 
    0111: [0] 33 ec 15 e6 01 0c .......... Debug 

    # sys/Logger.es:230         }

    0117: [0] 01 fa 15 ................... AddNamespace <internal-38> 
    0120: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0122: [0] 33 ec 15 07 22 ............. Debug 

    # sys/Logger.es:7           module ejs.sys {

    0127: [0] 23 ......................... CloseBlock 
    0128: [0] 93 05 00 ................... OpenBlock <slot: 5> <0> 
    0131: [0] 33 95 16 62 0c ............. Debug 

    # sys/Memory.es:98          }

    0136: [0] 01 a3 16 ................... AddNamespace <internal-39> 
    0139: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0141: [0] 33 95 16 07 22 ............. Debug 

    # sys/Memory.es:7           module ejs.sys {

    0146: [0] 33 95 16 0d af 16 .......... Debug 

    # sys/Memory.es:13          	native class Memory {

    0152: [0] 34 ee 02 ................... DefineClass <type: 0x16e,  ejs.sys::Memory> 
    0155: [0] 23 ......................... CloseBlock 
    0156: [0] 93 06 00 ................... OpenBlock <slot: 6> <0> 
    0159: [0] 33 88 17 28 0c ............. Debug 

    # sys/System.es:40          }

    0164: [0] 01 96 17 ................... AddNamespace <internal-40> 
    0167: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0169: [0] 33 88 17 07 22 ............. Debug 

    # sys/System.es:7           module ejs.sys {

    0174: [0] 33 88 17 0d a2 17 .......... Debug 

    # sys/System.es:13          	native class System {

    0180: [0] 34 f2 02 ................... DefineClass <type: 0x172,  ejs.sys::System> 
    0183: [0] 23 ......................... CloseBlock 
    0184: [0] 93 07 00 ................... OpenBlock <slot: 7> <0> 
    0187: [0] 33 ef 19 cd 01 0c .......... Debug 

    # sys/Unix.es:205           }

    0193: [0] 01 fb 19 ................... AddNamespace <internal-41> 
    0196: [0] 01 1a ...................... AddNamespace <ejs.sys> 
    0198: [0] 33 ef 19 07 22 ............. Debug 

    # sys/Unix.es:7             module ejs.sys {

    0203: [0] 33 ef 19 09 87 1a .......... Debug 

    # sys/Unix.es:9                 use default namespace public

    0209: [0] 83 23 ...................... GetGlobalSlot <35> 
    0211: [1] 02 ......................... AddNamespaceRef 
    0212: [0] 33 ef 19 10 a8 1a .......... Debug 

    # sys/Unix.es:16            	function basename(path: String): String {

    0218: [0] 33 ef 19 1a 88 1b .......... Debug 

    # sys/Unix.es:26                function close(file: File, graceful: Boolean = true): Void {

    0224: [0] 33 ef 19 25 8c 1c .......... Debug 

    # sys/Unix.es:37            	function cp(fromPath: String, toPath: String): void {

    0230: [0] 33 ef 19 2f ff 1c .......... Debug 

    # sys/Unix.es:47                function dirname(path: String): String {

    0236: [0] 33 ef 19 39 da 1d .......... Debug 

    # sys/Unix.es:57            	function exists(path: String): Boolean {

    0242: [0] 33 ef 19 43 b0 1e .......... Debug 

    # sys/Unix.es:67                function extension(path: String): String  {

    0248: [0] 33 ef 19 4c 92 1f .......... Debug 

    # sys/Unix.es:76            	native function freeSpace(path: String = null): Number

    0254: [0] 33 ef 19 54 d4 1f .......... Debug 

    # sys/Unix.es:84            	function isDir(path: String): Boolean {

    0260: [0] 33 ef 19 61 a7 20 .......... Debug 

    # sys/Unix.es:97            	function ls(path: String, enumDirs: Boolean = false): Array {

    0266: [0] 33 ef 19 6c a3 21 .......... Debug 

    # sys/Unix.es:108           	function mkdir(path: String, permissions: Number = 0755): void {

    0272: [0] 33 ef 19 77 a3 22 .......... Debug 

    # sys/Unix.es:119           	function mv(fromFile: String, toFile: String): void {

    0278: [0] 33 ef 19 84 01 97 23 ....... Debug 

    # sys/Unix.es:132               function open(path: String, mode: Number = Read, permissions: Number = 0644): File {

    0285: [0] 33 ef 19 8e 01 e1 24 ....... Debug 

    # sys/Unix.es:142           	function pwd(): String {

    0292: [0] 33 ef 19 99 01 9d 25 ....... Debug 

    # sys/Unix.es:153               function read(file: File, count: Number): ByteArray {

    0299: [0] 33 ef 19 a4 01 86 26 ....... Debug 

    # sys/Unix.es:164           	function rm(path: String): void {

    0306: [0] 33 ef 19 af 01 cc 26 ....... Debug 

    # sys/Unix.es:175           	function rmdir(path: String, recursive: Boolean = false): void {

    0313: [0] 33 ef 19 b9 01 ca 27 ....... Debug 

    # sys/Unix.es:185           	function tempname(directory: String = null): File {

    0320: [0] 33 ef 19 c9 01 c0 28 ....... Debug 

    # sys/Unix.es:201               function write(file: File, ...items): Number {

    0327: [0] 23 ......................... CloseBlock 
    0328: [0] 3d ......................... EndCode 
    

BLOCK:      [__initializer__-00]  block_0007_128 (Slots 0)

BLOCK:      [__initializer__-01]  block_0007_130 (Slots 0)

BLOCK:      [__initializer__-02]  block_0007_132 (Slots 0)

BLOCK:      [__initializer__-03]  block_0007_134 (Slots 0)

BLOCK:      [__initializer__-04]  block_0007_136 (Slots 0)

BLOCK:      [__initializer__-05]  block_0007_138 (Slots 0)

BLOCK:      [__initializer__-06]  block_0007_140 (Slots 0)

BLOCK:      [__initializer__-07]  block_0007_142 (Slots 0)

CLASS:      native class App extends Object
            #  Class Details: 20 class traits, 0 instance traits, requested slot 88

FUNCTION:   [App-05]  -initializer- function App-initializer() : Void


    0000: [0] 33 01 11 47 ................ Debug 

    # sys/App.es:17                     use default namespace public

    0004: [0] 83 23 ...................... GetGlobalSlot <35> 
    0006: [1] 02 ......................... AddNamespaceRef 
    0007: [0] 33 01 14 6c ................ Debug 

    # sys/App.es:20             		static const UTF_8: Number = 1

    0011: [0] 47 ......................... Load1 
    0012: [1] 83 58 ...................... GetGlobalSlot <88> 
    0014: [2] aa ......................... PutObjSlot_6 
    0015: [0] 33 01 15 a1 01 ............. Debug 

    # sys/App.es:21             		static const UTF_16: Number = 2

    0020: [0] 48 ......................... Load2 
    0021: [1] 83 58 ...................... GetGlobalSlot <88> 
    0023: [2] ab ......................... PutObjSlot_7 
    0024: [0] 33 01 1c ca 01 ............. Debug 

    # sys/App.es:28             		native static function get args(): Array

    0029: [0] 33 01 24 8a 02 ............. Debug 

    # sys/App.es:36             		native static function get dir(): String

    0034: [0] 33 01 2c c0 02 ............. Debug 

    # sys/App.es:44             		native static function getEnv(name: String): String

    0039: [0] 33 01 3b 8a 03 ............. Debug 

    # sys/App.es:59             		native static function exit(status: Number = 0): void

    0044: [0] 33 01 63 d3 03 ............. Debug 

    # sys/App.es:99             		static function get name(): String {

    0049: [0] 33 01 6f 93 04 ............. Debug 

    # sys/App.es:111            		native static function noexit(exit: Boolean = true): void

    0054: [0] 33 01 8f 01 de 04 .......... Debug 

    # sys/App.es:143                    native static function serviceEvents(count: Number = -1, timeout: Number = -1): Void

    0060: [0] 33 01 a0 01 d7 05 .......... Debug 

    # sys/App.es:160            		native static function sleep(delay: Number = -1): Void

    0066: [0] 33 01 a7 01 9c 06 .......... Debug 

    # sys/App.es:167            		static static function get title(): String {

    0072: [0] 33 01 b0 01 e8 06 .......... Debug 

    # sys/App.es:176            		static static function get version(): String {

    0078: [0] 33 01 b9 01 ba 07 .......... Debug 

    # sys/App.es:185            		native static function get workingDir(): String

    0084: [0] 33 01 c0 01 f7 07 .......... Debug 

    # sys/App.es:192            		native static function set workingDir(value: String): Void

    0090: [0] c4 ......................... Return 
    

VARIABLE:   [App-06]  public static var UTF_8 : Number

VARIABLE:   [App-07]  public static var UTF_16 : Number

FUNCTION:   [App-08]  public get function args() : Array


    

FUNCTION:   [App-09]  public get function dir() : String


    

FUNCTION:   [App-10]  public static function getEnv(name: String) : String

     ARG:   [arg-00]   private name : String

    

VARIABLE:   [getEnv-00]  private var name : String

FUNCTION:   [App-11]  public static function exit(status: Number) : Void

     ARG:   [arg-00]   private status : Number

    

VARIABLE:   [exit-00]  private var status : Number

FUNCTION:   [App-12]  public get function name() : String


    0000: [0] 33 01 64 fa 03 ............. Debug 

    # sys/App.es:100            			return Config.Product

    0005: [0] 83 59 ...................... GetGlobalSlot <89> 
    0007: [1] 87 10 00 ................... GetTypeSlot <slot: 16> <0> 
    0010: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [App-13]  public static function noexit(exit: Boolean) : Void

     ARG:   [arg-00]   private exit : Boolean

    

VARIABLE:   [noexit-00]  private var exit : Boolean

FUNCTION:   [App-14]  public static function serviceEvents(count: Number, timeout: Number) : Void

     ARG:   [arg-00]   private count : Number
     ARG:   [arg-01]   private timeout : Number

    

VARIABLE:   [serviceEvents-00]  private var count : Number

VARIABLE:   [serviceEvents-01]  private var timeout : Number

FUNCTION:   [App-15]  public static function sleep(delay: Number) : Void

     ARG:   [arg-00]   private delay : Number

    

VARIABLE:   [sleep-00]  private var delay : Number

FUNCTION:   [App-16]  public get function title() : String


    0000: [0] 33 01 a8 01 cb 06 .......... Debug 

    # sys/App.es:168            			return Config.Title

    0006: [0] 83 59 ...................... GetGlobalSlot <89> 
    0008: [1] 87 12 00 ................... GetTypeSlot <slot: 18> <0> 
    0011: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [App-17]  public get function version() : String


    0000: [0] 33 01 b1 01 99 07 .......... Debug 

    # sys/App.es:177            			return Config.Version

    0006: [0] 83 59 ...................... GetGlobalSlot <89> 
    0008: [1] 87 13 00 ................... GetTypeSlot <slot: 19> <0> 
    0011: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [App-18]  public get function workingDir() : String


    

FUNCTION:   [App-19]  public set function set-workingDir(value: String) : Void

     ARG:   [arg-00]   private value : String

    

VARIABLE:   [set-workingDir-00]  private var value : String

CLASS:      native class Config extends Object
            #  Class Details: 22 class traits, 0 instance traits, requested slot 89

VARIABLE:   [Config-05]  public static var Debug : Boolean

VARIABLE:   [Config-06]  public static var CPU : String

VARIABLE:   [Config-07]  public static var DB : Boolean

VARIABLE:   [Config-08]  public static var E4X : Boolean

VARIABLE:   [Config-09]  public static var Floating : Boolean

VARIABLE:   [Config-10]  public static var Http : Boolean

VARIABLE:   [Config-11]  public static var Lang : String

VARIABLE:   [Config-12]  public static var Legacy : Boolean

VARIABLE:   [Config-13]  public static var Multithread : Boolean

VARIABLE:   [Config-14]  public static var NumberType : String

VARIABLE:   [Config-15]  public static var OS : String

VARIABLE:   [Config-16]  public static var Product : String

VARIABLE:   [Config-17]  public static var RegularExpressions : Boolean

VARIABLE:   [Config-18]  public static var Title : String

VARIABLE:   [Config-19]  public static var Version : String

VARIABLE:   [Config-20]  public static var LibDir : String

VARIABLE:   [Config-21]  public static var BinDir : String

CLASS:      native class GC extends Object
            #  Class Details: 15 class traits, 0 instance traits, requested slot 90

FUNCTION:   [GC-05]  public get function allocatedMemory() : Number


    

FUNCTION:   [GC-06]  public get function enabled() : Boolean


    

FUNCTION:   [GC-07]  public set function set-enabled(on: Boolean) : Void

     ARG:   [arg-00]   private on : Boolean

    

VARIABLE:   [set-enabled-00]  private var on : Boolean

FUNCTION:   [GC-08]  public get function maxMemory() : Number


    

FUNCTION:   [GC-09]  public set function set-maxMemory(limit: Number) : Void

     ARG:   [arg-00]   private limit : Number

    

VARIABLE:   [set-maxMemory-00]  private var limit : Number

FUNCTION:   [GC-10]  public static function printStats() : Void


    

FUNCTION:   [GC-11]  public get function peakMemory() : Number


    

FUNCTION:   [GC-12]  public get function workQuota() : Number


    

FUNCTION:   [GC-13]  public set function set-workQuota(quota: Number) : Void

     ARG:   [arg-00]   private quota : Number

    

VARIABLE:   [set-workQuota-00]  private var quota : Number

FUNCTION:   [GC-14]  public static function run(deep: Boolean) : Void

     ARG:   [arg-00]   private deep : Boolean

    

VARIABLE:   [run-00]  private var deep : Boolean

CLASS:      native class Memory extends Object
            #  Class Details: 6 class traits, 0 instance traits, requested slot 91

FUNCTION:   [Memory-05]  public static function printStats() : Void


    

CLASS:      native class System extends Object
            #  Class Details: 10 class traits, 0 instance traits, requested slot 92

FUNCTION:   [System-05]  -initializer- function System-initializer() : Void


    0000: [0] 33 88 17 0f 47 ............. Debug 

    # sys/System.es:15                  use default namespace public

    0005: [0] 83 23 ...................... GetGlobalSlot <35> 
    0007: [1] 02 ......................... AddNamespaceRef 
    0008: [0] 33 88 17 11 b9 17 .......... Debug 

    # sys/System.es:17                  public static const Bufsize: Number = 1024

    0014: [0] 53 00 04 ................... LoadInt.16 <1024> 
    0017: [1] 83 5c ...................... GetGlobalSlot <92> 
    0019: [2] aa ......................... PutObjSlot_6 
    0020: [0] 33 88 17 18 f4 17 .......... Debug 

    # sys/System.es:24          		native static function get hostname(fullyQualified: Boolean = true): String

    0026: [0] 33 88 17 21 da 18 .......... Debug 

    # sys/System.es:33          		native static function run(cmd: String): String

    0032: [0] 33 88 17 23 90 19 .......... Debug 

    # sys/System.es:35          		native static function runx(cmd: String): Void

    0038: [0] c4 ......................... Return 
    

VARIABLE:   [System-06]  public static var Bufsize : Number

FUNCTION:   [System-07]  public get function hostname(fullyQualified: Boolean) : String

     ARG:   [arg-00]   private fullyQualified : Boolean

    

VARIABLE:   [hostname-00]  private var fullyQualified : Boolean

FUNCTION:   [System-08]  public static function run(cmd: String) : String

     ARG:   [arg-00]   private cmd : String

    

VARIABLE:   [run-00]  private var cmd : String

FUNCTION:   [System-09]  public static function runx(cmd: String) : Void

     ARG:   [arg-00]   private cmd : String

    

VARIABLE:   [runx-00]  private var cmd : String

FUNCTION:   [global-93]  public function basename(path: String) : String

     ARG:   [arg-00]   private path : String

    0000: [0] 33 ef 19 11 d3 1a .......... Debug 

    # sys/Unix.es:17                    return new File(path).basename

    0006: [0] 83 52 ...................... GetGlobalSlot <82> 
    0008: [1] 8e ......................... New 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0012: [1] 87 0f 01 ................... GetTypeSlot <slot: 15> <1> 
    0015: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [basename-00]  private var path : String

FUNCTION:   [global-94]  public function close(file: File, graceful: Boolean) : Void

     ARG:   [arg-00]   private file : File
     ARG:   [arg-01]   private graceful : Boolean

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 39 ...................... GetGlobalSlot <57> 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 ef 19 1b c9 1b .......... Debug 

    # sys/Unix.es:27                    file.close(graceful)

    0013: [0] 61 ......................... GetLocalSlot_0 
    0014: [1] 62 ......................... GetLocalSlot_1 
    0015: [2] 17 10 01 ................... CallObjSlot <slot: 16> <argc: 1> 
    0018: [0] 5a ......................... LoadNull 
    0019: [1] c5 ......................... ReturnValue 
    0020: [0] 33 ef 19 1c e6 1b .......... Debug 

    # sys/Unix.es:28                }
    

VARIABLE:   [close-00]  private var file : File

VARIABLE:   [close-01]  private var graceful : Boolean

FUNCTION:   [global-95]  public function cp(fromPath: String, toPath: String) : Void

     ARG:   [arg-00]   private fromPath : String
     ARG:   [arg-01]   private toPath : String

    0000: [0] 33 ef 19 26 c3 1c .......... Debug 

    # sys/Unix.es:38                    new File(fromPath).copy(toPath) 

    0006: [0] 83 52 ...................... GetGlobalSlot <82> 
    0008: [1] 8e ......................... New 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0012: [1] 62 ......................... GetLocalSlot_1 
    0013: [2] 17 11 01 ................... CallObjSlot <slot: 17> <argc: 1> 
    0016: [0] 5a ......................... LoadNull 
    0017: [1] c5 ......................... ReturnValue 
    0018: [0] 33 ef 19 27 e6 1b .......... Debug 

    # sys/Unix.es:39                }
    

VARIABLE:   [cp-00]  private var fromPath : String

VARIABLE:   [cp-01]  private var toPath : String

FUNCTION:   [global-96]  public function dirname(path: String) : String

     ARG:   [arg-00]   private path : String

    0000: [0] 33 ef 19 30 ac 1d .......... Debug 

    # sys/Unix.es:48                    return new File(path).dirname

    0006: [0] 83 52 ...................... GetGlobalSlot <82> 
    0008: [1] 8e ......................... New 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0012: [1] 87 14 01 ................... GetTypeSlot <slot: 20> <1> 
    0015: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [dirname-00]  private var path : String

FUNCTION:   [global-97]  public function exists(path: String) : Boolean

     ARG:   [arg-00]   private path : String

    0000: [0] 33 ef 19 3a 84 1e .......... Debug 

    # sys/Unix.es:58                    return new File(path).exists

    0006: [0] 83 52 ...................... GetGlobalSlot <82> 
    0008: [1] 8e ......................... New 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0012: [1] 87 15 01 ................... GetTypeSlot <slot: 21> <1> 
    0015: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [exists-00]  private var path : String

FUNCTION:   [global-98]  public function extension(path: String) : String

     ARG:   [arg-00]   private path : String

    0000: [0] 33 ef 19 44 e0 1e .......... Debug 

    # sys/Unix.es:68                    return new File(path).extension

    0006: [0] 83 52 ...................... GetGlobalSlot <82> 
    0008: [1] 8e ......................... New 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0012: [1] 87 16 01 ................... GetTypeSlot <slot: 22> <1> 
    0015: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [extension-00]  private var path : String

FUNCTION:   [global-99]  public native function freeSpace(path: String) : Number

     ARG:   [arg-00]   private path : String

    

VARIABLE:   [freeSpace-00]  private var path : String

FUNCTION:   [global-100]  public function isDir(path: String) : Boolean

     ARG:   [arg-00]   private path : String

    0000: [0] 33 ef 19 55 fd 1f .......... Debug 

    # sys/Unix.es:85                    return new File(path).isDir

    0006: [0] 83 52 ...................... GetGlobalSlot <82> 
    0008: [1] 8e ......................... New 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0012: [1] 87 1f 01 ................... GetTypeSlot <slot: 31> <1> 
    0015: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [isDir-00]  private var path : String

FUNCTION:   [global-101]  public function ls(path: String, enumDirs: Boolean) : Array

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private enumDirs : Boolean

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 32 ...................... GetGlobalSlot <50> 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 ef 19 62 e6 20 .......... Debug 

    # sys/Unix.es:98                    return new File(path).getFiles(enumDirs)

    0013: [0] 83 52 ...................... GetGlobalSlot <82> 
    0015: [1] 8e ......................... New 
    0016: [1] 61 ......................... GetLocalSlot_0 
    0017: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0019: [1] 62 ......................... GetLocalSlot_1 
    0020: [2] 17 19 01 ................... CallObjSlot <slot: 25> <argc: 1> 
    0023: [0] 99 ......................... PushResult 
    0024: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [ls-00]  private var path : String

VARIABLE:   [ls-01]  private var enumDirs : Boolean

FUNCTION:   [global-102]  public function mkdir(path: String, permissions: Number) : Void

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private permissions : Number

    0000: [0] 43 02 02 06 ................ InitDefaultArgs.8 <2> <4> <8> 
    0004: [0] 53 ed 01 ................... LoadInt.16 <493> 
    0007: [1] 9b ......................... PutLocalSlot_1 
    0008: [0] 33 ef 19 6d e5 21 .......... Debug 

    # sys/Unix.es:109                   new File(path).makeDir(permissions)

    0014: [0] 83 52 ...................... GetGlobalSlot <82> 
    0016: [1] 8e ......................... New 
    0017: [1] 61 ......................... GetLocalSlot_0 
    0018: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0020: [1] 62 ......................... GetLocalSlot_1 
    0021: [2] 17 23 01 ................... CallObjSlot <slot: 35> <argc: 1> 
    0024: [0] 5a ......................... LoadNull 
    0025: [1] c5 ......................... ReturnValue 
    0026: [0] 33 ef 19 6e e6 1b .......... Debug 

    # sys/Unix.es:110               }
    

VARIABLE:   [mkdir-00]  private var path : String

VARIABLE:   [mkdir-01]  private var permissions : Number

FUNCTION:   [global-103]  public function mv(fromFile: String, toFile: String) : Void

     ARG:   [arg-00]   private fromFile : String
     ARG:   [arg-01]   private toFile : String

    0000: [0] 33 ef 19 78 da 22 .......... Debug 

    # sys/Unix.es:120                   new File(fromFile).rename(toFile)

    0006: [0] 83 52 ...................... GetGlobalSlot <82> 
    0008: [1] 8e ......................... New 
    0009: [1] 61 ......................... GetLocalSlot_0 
    0010: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0012: [1] 62 ......................... GetLocalSlot_1 
    0013: [2] 17 3a 01 ................... CallObjSlot <slot: 58> <argc: 1> 
    0016: [0] 5a ......................... LoadNull 
    0017: [1] c5 ......................... ReturnValue 
    0018: [0] 33 ef 19 79 e6 1b .......... Debug 

    # sys/Unix.es:121               }
    

VARIABLE:   [mv-00]  private var fromFile : String

VARIABLE:   [mv-01]  private var toFile : String

FUNCTION:   [global-104]  public function open(path: String, mode: Number, permissions: Number) : File

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private mode : Number
     ARG:   [arg-02]   private permissions : Number
   LOCAL:   [local-03] var file : File

    0000: [0] 43 03 03 09 0d ............. InitDefaultArgs.8 <3> <5> <11> <15> 
    0005: [0] 7f f0 23 f5 23 ............. GetScopedName <Read> <> 
    0010: [1] 9b ......................... PutLocalSlot_1 
    0011: [0] 53 a4 01 ................... LoadInt.16 <420> 
    0014: [1] 9c ......................... PutLocalSlot_2 
    0015: [0] 33 ef 19 85 01 f6 23 ....... Debug 

    # sys/Unix.es:133                   let file: File = new File(path)

    0022: [0] 83 52 ...................... GetGlobalSlot <82> 
    0024: [1] 8e ......................... New 
    0025: [1] 61 ......................... GetLocalSlot_0 
    0026: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0028: [1] 9d ......................... PutLocalSlot_3 
    0029: [0] 33 ef 19 86 01 9e 24 ....... Debug 

    # sys/Unix.es:134                   file.open(mode, permissions)

    0036: [0] 64 ......................... GetLocalSlot_3 
    0037: [1] 62 ......................... GetLocalSlot_1 
    0038: [2] 63 ......................... GetLocalSlot_2 
    0039: [3] 17 29 02 ................... CallObjSlot <slot: 41> <argc: 2> 
    0042: [0] 33 ef 19 87 01 c3 24 ....... Debug 

    # sys/Unix.es:135                   return file

    0049: [0] 64 ......................... GetLocalSlot_3 
    0050: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [open-00]  private var path : String

VARIABLE:   [open-01]  private var mode : Number

VARIABLE:   [open-02]  private var permissions : Number

VARIABLE:   [open-03]  private var file : File

FUNCTION:   [global-105]  public function pwd() : String


    0000: [0] 33 ef 19 8f 01 fb 24 ....... Debug 

    # sys/Unix.es:143                   return App.workingDir

    0007: [0] 83 58 ...................... GetGlobalSlot <88> 
    0009: [1] 87 12 00 ................... GetTypeSlot <slot: 18> <0> 
    0012: [1] c5 ......................... ReturnValue 
    

FUNCTION:   [global-106]  public function read(file: File, count: Number) : ByteArray

     ARG:   [arg-00]   private file : File
     ARG:   [arg-01]   private count : Number

    0000: [0] 33 ef 19 9a 01 d7 25 ....... Debug 

    # sys/Unix.es:154                   return file.read(count)

    0007: [0] 61 ......................... GetLocalSlot_0 
    0008: [1] 62 ......................... GetLocalSlot_1 
    0009: [2] 17 36 01 ................... CallObjSlot <slot: 54> <argc: 1> 
    0012: [0] 99 ......................... PushResult 
    0013: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [read-00]  private var file : File

VARIABLE:   [read-01]  private var count : Number

FUNCTION:   [global-107]  public function rm(path: String) : Void

     ARG:   [arg-00]   private path : String

    0000: [0] 33 ef 19 a5 01 a9 26 ....... Debug 

    # sys/Unix.es:165                   new File(path).remove()

    0007: [0] 83 52 ...................... GetGlobalSlot <82> 
    0009: [1] 8e ......................... New 
    0010: [1] 61 ......................... GetLocalSlot_0 
    0011: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0013: [1] 17 38 00 ................... CallObjSlot <slot: 56> <argc: 0> 
    0016: [0] 5a ......................... LoadNull 
    0017: [1] c5 ......................... ReturnValue 
    0018: [0] 33 ef 19 a6 01 e6 1b ....... Debug 

    # sys/Unix.es:166               }
    

VARIABLE:   [rm-00]  private var path : String

FUNCTION:   [global-108]  public function rmdir(path: String, recursive: Boolean) : Void

     ARG:   [arg-00]   private path : String
     ARG:   [arg-01]   private recursive : Boolean

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 32 ...................... GetGlobalSlot <50> 
    0006: [1] 9b ......................... PutLocalSlot_1 
    0007: [0] 33 ef 19 b0 01 8e 27 ....... Debug 

    # sys/Unix.es:176                   new File(path).removeDir(recursive)

    0014: [0] 83 52 ...................... GetGlobalSlot <82> 
    0016: [1] 8e ......................... New 
    0017: [1] 61 ......................... GetLocalSlot_0 
    0018: [2] 1f 01 ...................... CallConstructor <argc: 1> 
    0020: [1] 62 ......................... GetLocalSlot_1 
    0021: [2] 17 39 01 ................... CallObjSlot <slot: 57> <argc: 1> 
    0024: [0] 5a ......................... LoadNull 
    0025: [1] c5 ......................... ReturnValue 
    0026: [0] 33 ef 19 b1 01 e6 1b ....... Debug 

    # sys/Unix.es:177               }
    

VARIABLE:   [rmdir-00]  private var path : String

VARIABLE:   [rmdir-01]  private var recursive : Boolean

FUNCTION:   [global-109]  public function tempname(directory: String) : File

     ARG:   [arg-00]   private directory : String

    0000: [0] 43 02 02 05 ................ InitDefaultArgs.8 <2> <4> <7> 
    0004: [0] 83 34 ...................... GetGlobalSlot <52> 
    0006: [1] 9a ......................... PutLocalSlot_0 
    0007: [0] 33 ef 19 ba 01 ff 27 ....... Debug 

    # sys/Unix.es:186                   return File.createTempFile(directory)

    0014: [0] 83 52 ...................... GetGlobalSlot <82> 
    0016: [1] 61 ......................... GetLocalSlot_0 
    0017: [2] 1b 12 00 01 ................ CallObjStaticSlot <slot: 18> <0> <argc: 1> 
    0021: [0] 99 ......................... PushResult 
    0022: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [tempname-00]  private var directory : String

FUNCTION:   [global-110]  public function write(file: File, items: Array) : Number

     ARG:   [arg-00]   private file : File
     ARG:   [arg-01]   private items : Array

    0000: [0] 33 ef 19 ca 01 f3 28 ....... Debug 

    # sys/Unix.es:202                   return file.write(items)

    0007: [0] 61 ......................... GetLocalSlot_0 
    0008: [1] 62 ......................... GetLocalSlot_1 
    0009: [2] 17 3d 01 ................... CallObjSlot <slot: 61> <argc: 1> 
    0012: [0] 99 ......................... PushResult 
    0013: [1] c5 ......................... ReturnValue 
    

VARIABLE:   [write-00]  private var file : File

VARIABLE:   [write-01]  private var items : Array

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 111, num inherited 0)
#
0088    ejs.sys var App: Type
0089    public var Config: Type
0090    ejs.sys var GC: Type
0091    ejs.sys var Memory: Type
0092    ejs.sys var System: Type
0093    public function basename
0094    public function close
0095    public function cp
0096    public function dirname
0097    public function exists
0098    public function extension
0099    public function freeSpace
0100    public function isDir
0101    public function ls
0102    public function mkdir
0103    public function mv
0104    public function open
0105    public function pwd
0106    public function read
0107    public function rm
0108    public function rmdir
0109    public function tempname
0110    public function write

#
#  Initializer slot assignments (Num prop 8)
#
0000    -block- var block_0007_128: Block
0001    -block- var block_0007_130: Block
0002    -block- var block_0007_132: Block
0003    -block- var block_0007_134: Block
0004    -block- var block_0007_136: Block
0005    -block- var block_0007_138: Block
0006    -block- var block_0007_140: Block
0007    -block- var block_0007_142: Block

#
#  Class slot assignments for the "App" class (Num slots 20, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function App-initializer
0006    public var UTF_8: Number
0007    public var UTF_16: Number
0008    public function args
0009    public function dir
0010    public function getEnv
0011    public function exit
0012    public function name
0013    public function noexit
0014    public function serviceEvents
0015    public function sleep
0016    public function title
0017    public function version
0018    public function workingDir
0019    public function set-workingDir

#
#  Instance slot assignments for the "App" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "getEnv" function (Num slots 1)
#
0000    private var name: String

#
#  Local slot assignments for the "exit" function (Num slots 1)
#
0000    private var status: Number

#
#  Local slot assignments for the "noexit" function (Num slots 1)
#
0000    private var exit: Boolean

#
#  Local slot assignments for the "serviceEvents" function (Num slots 2)
#
0000    private var count: Number
0001    private var timeout: Number

#
#  Local slot assignments for the "sleep" function (Num slots 1)
#
0000    private var delay: Number

#
#  Local slot assignments for the "set-workingDir" function (Num slots 1)
#
0000    private var value: String

#
#  Class slot assignments for the "Config" class (Num slots 22, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public var Debug: Boolean
0006    public var CPU: String
0007    public var DB: Boolean
0008    public var E4X: Boolean
0009    public var Floating: Boolean
0010    public var Http: Boolean
0011    public var Lang: String
0012    public var Legacy: Boolean
0013    public var Multithread: Boolean
0014    public var NumberType: String
0015    public var OS: String
0016    public var Product: String
0017    public var RegularExpressions: Boolean
0018    public var Title: String
0019    public var Version: String
0020    public var LibDir: String
0021    public var BinDir: String

#
#  Instance slot assignments for the "Config" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "GC" class (Num slots 15, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function allocatedMemory
0006    public function enabled
0007    public function set-enabled
0008    public function maxMemory
0009    public function set-maxMemory
0010    public function printStats
0011    public function peakMemory
0012    public function workQuota
0013    public function set-workQuota
0014    public function run

#
#  Instance slot assignments for the "GC" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "set-enabled" function (Num slots 1)
#
0000    private var on: Boolean

#
#  Local slot assignments for the "set-maxMemory" function (Num slots 1)
#
0000    private var limit: Number

#
#  Local slot assignments for the "set-workQuota" function (Num slots 1)
#
0000    private var quota: Number

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var deep: Boolean

#
#  Class slot assignments for the "Memory" class (Num slots 6, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    public function printStats

#
#  Instance slot assignments for the "Memory" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "System" class (Num slots 10, num inherited 5)
#
0000    reserved slot for static super property
0001    reserved slot for static super property
0002    reserved slot for static super property
0003    reserved slot for static super property
0004    reserved slot for static super property
0005    -initializer- function System-initializer
0006    public var Bufsize: Number
0007    public function hostname
0008    public function run
0009    public function runx

#
#  Instance slot assignments for the "System" class (Num prop 0, num inherited 0)
#

#
#  Local slot assignments for the "hostname" function (Num slots 1)
#
0000    private var fullyQualified: Boolean

#
#  Local slot assignments for the "run" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "runx" function (Num slots 1)
#
0000    private var cmd: String

#
#  Local slot assignments for the "basename" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "close" function (Num slots 2)
#
0000    private var file: File
0001    private var graceful: Boolean

#
#  Local slot assignments for the "cp" function (Num slots 2)
#
0000    private var fromPath: String
0001    private var toPath: String

#
#  Local slot assignments for the "dirname" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "exists" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "extension" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "freeSpace" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "isDir" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "ls" function (Num slots 2)
#
0000    private var path: String
0001    private var enumDirs: Boolean

#
#  Local slot assignments for the "mkdir" function (Num slots 2)
#
0000    private var path: String
0001    private var permissions: Number

#
#  Local slot assignments for the "mv" function (Num slots 2)
#
0000    private var fromFile: String
0001    private var toFile: String

#
#  Local slot assignments for the "open" function (Num slots 4)
#
0000    private var path: String
0001    private var mode: Number
0002    private var permissions: Number
0003    private var file: File

#
#  Local slot assignments for the "read" function (Num slots 2)
#
0000    private var file: File
0001    private var count: Number

#
#  Local slot assignments for the "rm" function (Num slots 1)
#
0000    private var path: String

#
#  Local slot assignments for the "rmdir" function (Num slots 2)
#
0000    private var path: String
0001    private var recursive: Boolean

#
#  Local slot assignments for the "tempname" function (Num slots 1)
#
0000    private var directory: String

#
#  Local slot assignments for the "write" function (Num slots 2)
#
0000    private var file: File
0001    private var items: Array

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 5311 bytes)
#
0000   ""
0001   "sys/App.es"
0002   "}"
0003   "internal-34"
0004   "ejs.sys"
0005   "module ejs.sys {"
0006   "	native class App {"
0007   "        use default namespace public"
0008   "		static const UTF_8: Number = 1"
0009   "UTF_8"
0010   "public"
0011   "Number"
0012   "		static const UTF_16: Number = 2"
0013   "UTF_16"
0014   "		native static function get args(): Array"
0015   "args"
0016   "Array"
0017   "intrinsic"
0018   "		native static function get dir(): String"
0019   "dir"
0020   "String"
0021   "		native static function getEnv(name: String): String"
0022   "getEnv"
0023   "name"
0024   "private"
0025   "		native static function exit(status: Number = 0): void"
0026   "exit"
0027   "status"
0028   "Void"
0029   "		static function get name(): String {"
0030   "			return Config.Product"
0031   "		native static function noexit(exit: Boolean = true): void"
0032   "noexit"
0033   "Boolean"
0034   "        native static function serviceEvents(count: Number = -1, timeout: Number = -1): Void"
0035   "serviceEvents"
0036   "count"
0037   "timeout"
0038   "		native static function sleep(delay: Number = -1): Void"
0039   "sleep"
0040   "delay"
0041   "		static static function get title(): String {"
0042   "			return Config.Title"
0043   "title"
0044   "		static static function get version(): String {"
0045   "			return Config.Version"
0046   "version"
0047   "		native static function get workingDir(): String"
0048   "workingDir"
0049   "		native static function set workingDir(value: String): Void"
0050   "set-workingDir"
0051   "value"
0052   "App"
0053   "App-initializer"
0054   "-initializer-"
0055   "Object"
0056   "clone"
0057   "Function"
0058   "deep"
0059   "get"
0060   "iterator"
0061   "Iterator"
0062   "namespaces"
0063   "getValues"
0064   "length"
0065   "toString"
0066   "locale"
0067   "block_0007_128"
0068   "-block-"
0069   "sys/Config.es"
0070   "internal-35"
0071   "	use default namespace public"
0072   "	native class Config extends Object {"
0073   "		static const Debug: Boolean"
0074   "Debug"
0075   "		static const CPU: String"
0076   "CPU"
0077   "		static const DB: Boolean"
0078   "DB"
0079   "		static const E4X: Boolean"
0080   "E4X"
0081   "		static const Floating: Boolean"
0082   "Floating"
0083   "		static const Http: Boolean"
0084   "Http"
0085   "	    static const Lang: String"
0086   "Lang"
0087   "		static const Legacy: Boolean"
0088   "Legacy"
0089   "		static const Multithread: Boolean"
0090   "Multithread"
0091   "		static const NumberType: String"
0092   "NumberType"
0093   "		static const OS: String"
0094   "OS"
0095   "		static const Product: String"
0096   "Product"
0097   "		static const RegularExpressions: Boolean"
0098   "RegularExpressions"
0099   "		static const Title: String"
0100   "Title"
0101   "		static const Version: String"
0102   "Version"
0103   "        static const LibDir: String"
0104   "LibDir"
0105   "        static const BinDir: String"
0106   "BinDir"
0107   "Config"
0108   "block_0007_130"
0109   "sys/Debug.es"
0110   "internal-36"
0111   "block_0007_132"
0112   "sys/GC.es"
0113   "internal-37"
0114   "	native class GC {"
0115   "        native static function get allocatedMemory(): Number"
0116   "allocatedMemory"
0117   "		native static function get enabled(): Boolean"
0118   "enabled"
0119   "		native static function set enabled(on: Boolean): Void"
0120   "set-enabled"
0121   "on"
0122   "		native static function get maxMemory(): Number"
0123   "maxMemory"
0124   "		native static function set maxMemory(limit: Number): Void"
0125   "set-maxMemory"
0126   "limit"
0127   "        native static function printStats(): Void"
0128   "printStats"
0129   "        native static function get peakMemory(): Number"
0130   "peakMemory"
0131   "		native static function get workQuota(): Number"
0132   "workQuota"
0133   "		native static function set workQuota(quota: Number): Void"
0134   "set-workQuota"
0135   "quota"
0136   "		native static function run(deep: Boolean = flase): void"
0137   "run"
0138   "GC"
0139   "block_0007_134"
0140   "sys/Logger.es"
0141   "internal-38"
0142   "block_0007_136"
0143   "sys/Memory.es"
0144   "internal-39"
0145   "	native class Memory {"
0146   "		native static function printStats(): void"
0147   "Memory"
0148   "block_0007_138"
0149   "sys/System.es"
0150   "internal-40"
0151   "	native class System {"
0152   "        public static const Bufsize: Number = 1024"
0153   "Bufsize"
0154   "		native static function get hostname(fullyQualified: Boolean = true): String"
0155   "hostname"
0156   "fullyQualified"
0157   "		native static function run(cmd: String): String"
0158   "cmd"
0159   "		native static function runx(cmd: String): Void"
0160   "runx"
0161   "System"
0162   "System-initializer"
0163   "block_0007_140"
0164   "sys/Unix.es"
0165   "internal-41"
0166   "    use default namespace public"
0167   "	function basename(path: String): String {"
0168   "        return new File(path).basename"
0169   "basename"
0170   "path"
0171   "    function close(file: File, graceful: Boolean = true): Void {"
0172   "        file.close(graceful)"
0173   "    }"
0174   "close"
0175   "file"
0176   "File"
0177   "ejs.io"
0178   "graceful"
0179   "	function cp(fromPath: String, toPath: String): void {"
0180   "        new File(fromPath).copy(toPath) "
0181   "cp"
0182   "fromPath"
0183   "toPath"
0184   "    function dirname(path: String): String {"
0185   "        return new File(path).dirname"
0186   "dirname"
0187   "	function exists(path: String): Boolean {"
0188   "        return new File(path).exists"
0189   "exists"
0190   "    function extension(path: String): String  {"
0191   "        return new File(path).extension"
0192   "extension"
0193   "	native function freeSpace(path: String = null): Number"
0194   "freeSpace"
0195   "	function isDir(path: String): Boolean {"
0196   "        return new File(path).isDir"
0197   "isDir"
0198   "	function ls(path: String, enumDirs: Boolean = false): Array {"
0199   "        return new File(path).getFiles(enumDirs)"
0200   "ls"
0201   "enumDirs"
0202   "	function mkdir(path: String, permissions: Number = 0755): void {"
0203   "        new File(path).makeDir(permissions)"
0204   "mkdir"
0205   "permissions"
0206   "	function mv(fromFile: String, toFile: String): void {"
0207   "        new File(fromFile).rename(toFile)"
0208   "mv"
0209   "fromFile"
0210   "toFile"
0211   "    function open(path: String, mode: Number = Read, permissions: Number = 0644): File {"
0212   "Read"
0213   ""
0214   "        let file: File = new File(path)"
0215   "        file.open(mode, permissions)"
0216   "        return file"
0217   "open"
0218   "mode"
0219   "	function pwd(): String {"
0220   "        return App.workingDir"
0221   "pwd"
0222   "    function read(file: File, count: Number): ByteArray {"
0223   "        return file.read(count)"
0224   "read"
0225   "ByteArray"
0226   "	function rm(path: String): void {"
0227   "        new File(path).remove()"
0228   "rm"
0229   "	function rmdir(path: String, recursive: Boolean = false): void {"
0230   "        new File(path).removeDir(recursive)"
0231   "rmdir"
0232   "recursive"
0233   "	function tempname(directory: String = null): File {"
0234   "        return File.createTempFile(directory)"
0235   "tempname"
0236   "directory"
0237   "    function write(file: File, ...items): Number {"
0238   "        return file.write(items)"
0239   "write"
0240   "items"
0241   "block_0007_142"
0242   "__initializer__"
